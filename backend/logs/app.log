2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(updated_at, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(created_at, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_executions>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestExecution.<lambda> at 0x000001AEDE46BEC0>))])
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) constructed
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(updated_at, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) Identified primary key columns: OrderedSet([Column('id', String(), table=<teams>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Team.<lambda> at 0x000002ACD9EEC4A0>))])
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) constructed
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(test_case, _RelationshipDeclared)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(user, _RelationshipDeclared)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(parent_comment, _RelationshipDeclared)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(team, _RelationshipDeclared)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(replies, _RelationshipDeclared)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(user, _RelationshipDeclared)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(id, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(id, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(test_case_id, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(team_id, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(user_id, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(user_id, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(user_name, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(role, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(comment_type, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(content, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(joined_at, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(parent_comment_id, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(resolved, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) Identified primary key columns: OrderedSet([Column('id', String(), table=<team_members>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TeamMember.<lambda> at 0x000002ACD9EED760>))])
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(created_at, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) constructed
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(updated_at, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) Identified primary key columns: OrderedSet([Column('id', String(), table=<comments>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Comment.<lambda> at 0x000001AEDE48A480>))])
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) constructed
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(project, _RelationshipDeclared)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(test_executions, _RelationshipDeclared)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(id, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(name, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(members, _RelationshipDeclared)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(description, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(projects, _RelationshipDeclared)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(id, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(base_url, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(project_id, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(name, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(is_active, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(variables, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(description, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(created_at, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(created_by, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(updated_at, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(created_at, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(updated_at, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) Identified primary key columns: OrderedSet([Column('id', String(), table=<environments>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Environment.<lambda> at 0x000002ACD9EEED40>))])
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) constructed
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) Identified primary key columns: OrderedSet([Column('id', String(), table=<teams>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Team.<lambda> at 0x000001AEDE4A84A0>))])
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) constructed
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(uploader, _RelationshipDeclared)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(team, _RelationshipDeclared)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(id, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(user, _RelationshipDeclared)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_name, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(id, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_path, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(team_id, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_size, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(user_id, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_type, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(role, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(entity_type, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(joined_at, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(entity_id, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(uploaded_by, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) Identified primary key columns: OrderedSet([Column('id', String(), table=<team_members>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TeamMember.<lambda> at 0x000001AEDE4A9760>))])
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(description, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) constructed
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(created_at, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) Identified primary key columns: OrderedSet([Column('id', String(), table=<attachments>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Attachment.<lambda> at 0x000002ACD9F1C400>))])
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) constructed
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(project, _RelationshipDeclared)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(test_executions, _RelationshipDeclared)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(id, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(name, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(description, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_plan, _RelationshipDeclared)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(base_url, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_case, _RelationshipDeclared)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(project_id, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(is_active, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(creator, _RelationshipDeclared)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(variables, Column)
umn)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_plan_id, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(created_at, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_case_id, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(updated_at, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(order, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) Identified primary key columns: OrderedSet([Column('id', String(), table=<environments>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Environment.<lambda> at 0x000001AEDE4AAD40>))])
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(is_mandatory, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) constructed
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(created_at, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(created_by, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_plan_test_cases>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestPlanTestCase.<lambda> at 0x000002ACD9F1D6C0>))])
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) constructed
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(uploader, _RelationshipDeclared)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(id, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_name, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_path, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user, _RelationshipDeclared)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_size, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(id, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_type, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user_id, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user_name, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(entity_type, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(action, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(entity_id, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(uploaded_by, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(target_type, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(description, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(target_id, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(created_at, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(target_name, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(details, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) Identified primary key columns: OrderedSet([Column('id', String(), table=<attachments>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Attachment.<lambda> at 0x000001AEDE4DC400>))])
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(ip_address, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) constructed
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user_agent, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(created_at, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) Identified primary key columns: OrderedSet([Column('id', String(), table=<activity_logs>, primary_key=True, nullable=False, default=CallableColumnDefault(<function ActivityLog.<lambda> at 0x000002ACD9F1F100>))])
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) constructed
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_plan, _RelationshipDeclared)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_case, _RelationshipDeclared)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(creator, _RelationshipDeclared)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(id, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_plan_id, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_case_id, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(order, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(is_mandatory, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(created_at, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(created_by, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_plan_test_cases>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestPlanTestCase.<lambda> at 0x000001AEDE4DD6C0>))])
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) constructed
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user, _RelationshipDeclared)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(id, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user_id, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user_name, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(action, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(target_type, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(target_id, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(target_name, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(details, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(ip_address, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user_agent, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(created_at, Column)
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) Identified primary key columns: OrderedSet([Column('id', String(), table=<activity_logs>, primary_key=True, nullable=False, default=CallableColumnDefault(<function ActivityLog.<lambda> at 0x000001AEDE4DF100>))])
2025-08-02 20:45:02 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) constructed
2025-08-02 20:45:03 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-08-02 20:45:03 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-08-02 20:45:03 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-08-02 20:45:03 - passlib.registry - DEBUG - registry.py:296 - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
2025-08-02 20:45:03 - app.api.v1.routes.auth - DEBUG - auth.py:34 - Environment variables: {
  "ALLUSERSPROFILE": "C:\\ProgramData",
  "APPDATA": "C:\\Users\\kunal\\AppData\\Roaming",
  "C:\\USERS\\KUNAL\\DOWNLOADS\\EMERGENTINTELLITEST-MAIN": "C:\\Program Files\\nodejs\\",
  "CHROME_CRASHPAD_PIPE_NAME": "\\\\.\\pipe\\crashpad_11300_YGFLEAWXLMRVRBOK",
  "COMMONPROGRAMFILES": "C:\\Program Files\\Common Files",
  "COMMONPROGRAMFILES(X86)": "C:\\Program Files (x86)\\Common Files",
  "COMMONPROGRAMW6432": "C:\\Program Files\\Common Files",
  "COMPUTERNAME": "KUNALDELL",
  "COMSPEC": "C:\\Windows\\system32\\cmd.exe",
  "DRIVERDATA": "C:\\Windows\\System32\\Drivers\\DriverData",
  "EFC_5864_1592913036": "1",
  "HOMEDRIVE": "C:",
  "HOMEPATH": "\\Users\\kunal",
  "LOCALAPPDATA": "C:\\Users\\kunal\\AppData\\Local",
  "LOGONSERVER": "\\\\KUNALDELL",
  "LOG_LEVEL": "DEBUG",
  "NUMBER_OF_PROCESSORS": "22",
  "ONEDRIVE": "C:\\Users\\kunal\\OneDrive",
  "ONEDRIVECONSUMER": "C:\\Users\\kunal\\OneDrive",
  "ORIGINAL_XDG_CURRENT_DESKTOP": "undefined",
  "OS": "Windows_NT",
  "PATH": "C:\\Program Files\\Python312\\Scripts\\;C:\\Program Files\\Python312\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files\\Git\\cmd;c:\\Users\\kunal\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Program Files\\nodejs\\;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\kunal\\AppData\\Local\\Programs\\Windsurf\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WinGet\\Links;C:\\Program Files\\nodejs;C:\\Users\\kunal\\AppData\\Roaming\\npm;C:\\Program Files\\Git\\bin;C:\\Users\\kunal\\.deno\\bin;c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\scripts\\noConfigScripts",
  "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL",
  "POSTGRESQL": "C:\\Program Files\\PostgreSQL\\17\\bin\\bin",
  "PROCESSOR_ARCHITECTURE": "AMD64",
  "PROCESSOR_IDENTIFIER": "Intel64 Family 6 Model 170 Stepping 4, GenuineIntel",
  "PROCESSOR_LEVEL": "6",
  "PROCESSOR_REVISION": "aa04",
  "PROGRAMDATA": "C:\\ProgramData",
  "PROGRAMFILES": "C:\\Program Files",
  "PROGRAMFILES(X86)": "C:\\Program Files (x86)",
  "PROGRAMW6432": "C:\\Program Files",
  "PSMODULEPATH": "C:\\Users\\kunal\\OneDrive\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules",
  "PUBLIC": "C:\\Users\\Public",
  "PYTHONUNBUFFERED": "1",
  "SESSIONNAME": "Console",
  "SYSTEMDRIVE": "C:",
  "SYSTEMROOT": "C:\\Windows",
  "TEMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "TMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "USERDOMAIN": "KUNALDELL",
  "USERDOMAIN_ROAMINGPROFILE": "KUNALDELL",
  "USERNAME": "kunal",
  "USERPROFILE": "C:\\Users\\kunal",
  "WINDIR": "C:\\Windows",
  "ZES_ENABLE_SYSMAN": "1",
  "PAGER": "cat",
  "TERM_PROGRAM": "vscode",
  "TERM_PROGRAM_VERSION": "1.99.3",
  "LANG": "en_US.UTF-8",
  "COLORTERM": "truecolor",
  "VSCODE_GIT_IPC_HANDLE": "\\\\.\\pipe\\vscode-git-fccd44132c-sock",
  "PYDEVD_DISABLE_FILE_VALIDATION": "1",
  "VSCODE_DEBUGPY_ADAPTER_ENDPOINTS": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\.noConfigDebugAdapterEndpoints\\endpoint-875e116b470e769c.txt",
  "BUNDLED_DEBUGPY_PATH": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\libs\\debugpy",
  "VSCODE_INJECTION": "1",
  "PROJECT_NAME": "IntelliTest AI Automation Platform",
  "ACCESS_TOKEN_EXPIRE_MINUTES": "11520",
  "SERVER_NAME": "localhost",
  "SERVER_HOST": "http://localhost:8001",
  "DATABASE_URL": "postgresql://postgres.lflecyuvttemfoyixngi:Ayeshaayesha121@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres",
  "SMTP_TLS": "true",
  "SMTP_PORT": "587",
  "SMTP_HOST": "smtp.gmail.com",
  "SMTP_USER": "your-email@gmail.com",
  "EMAILS_FROM_EMAIL": "your-email@gmail.com",
  "EMAILS_FROM_NAME": "IntelliTest Platform",
  "OPENAI_API_KEY": "your-openai-api-key-here",
  "AWS_ACCESS_KEY_ID": "your-aws-access-key",
  "AWS_DEFAULT_REGION": "us-east-1",
  "UPLOAD_DIR": "uploads",
  "MAX_UPLOAD_SIZE": "10485760",
  "ALLOWED_FILE_TYPES": "jpg,jpeg,png,gif,pdf,txt,csv,json",
  "TESTING": "false"
}
2025-08-02 20:45:03 - app.api.v1.routes.auth - DEBUG - auth.py:45 - Database URL: postgresql://postgres.lflecyuvttemfoyixngi:*****@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres
2025-08-02 20:45:04 - app.main - INFO - main.py:1352 - Initializing API routers...
2025-08-02 20:45:04 - app.main - INFO - main.py:1364 - API routers initialized successfully
2025-08-02 20:45:04 - app.main - INFO - main.py:226 - Starting database initialization...
2025-08-02 20:45:04 - app.main - INFO - main.py:1352 - Initializing API routers...
2025-08-02 20:45:04 - app.main - INFO - main.py:1364 - API routers initialized successfully
2025-08-02 20:45:04 - app.main - INFO - main.py:226 - Starting database initialization...
2025-08-02 20:45:04 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x000001AEDF6A7AB0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 20:45:04 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x000002ACDB107AB0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 20:45:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 20:45:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 20:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 20:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 20:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 20:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 20:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:45:05 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x000001AEDF6A7AB0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 20:45:05 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x000001AEDF6A7AB0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 20:45:05 - app.main - INFO - main.py:256 - Disabling foreign key constraints...
2025-08-02 20:45:05 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 20:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 20:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00142s] {}
2025-08-02 20:45:05 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x000002ACDB107AB0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 20:45:05 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x000002ACDB107AB0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 20:45:05 - app.main - INFO - main.py:256 - Disabling foreign key constraints...
2025-08-02 20:45:05 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 20:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 20:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00129s] {}
2025-08-02 20:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 20:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00082s] {}
2025-08-02 20:45:05 - app.main - INFO - main.py:271 - Dropping existing tables...
2025-08-02 20:45:05 - app.main - INFO - main.py:274 - Dropping table: activity_logs
2025-08-02 20:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 20:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00093s] {}
2025-08-02 20:45:05 - app.main - INFO - main.py:276 - Dropped table: activity_logs
2025-08-02 20:45:05 - app.main - INFO - main.py:274 - Dropping table: attachments
2025-08-02 20:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 20:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00095s] {}
2025-08-02 20:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 20:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00207s] {}
2025-08-02 20:45:05 - app.main - INFO - main.py:276 - Dropped table: attachments
2025-08-02 20:45:05 - app.main - INFO - main.py:274 - Dropping table: comments
2025-08-02 20:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 20:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00112s] {}
2025-08-02 20:45:05 - app.main - INFO - main.py:271 - Dropping existing tables...
2025-08-02 20:45:05 - app.main - INFO - main.py:274 - Dropping table: activity_logs
2025-08-02 20:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 20:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00090s] {}
2025-08-02 20:45:05 - app.main - INFO - main.py:276 - Dropped table: comments
2025-08-02 20:45:05 - app.main - INFO - main.py:274 - Dropping table: environments
2025-08-02 20:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 20:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00069s] {}
2025-08-02 20:45:06 - app.main - INFO - main.py:276 - Dropped table: environments
2025-08-02 20:45:06 - app.main - INFO - main.py:274 - Dropping table: projects
2025-08-02 20:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 20:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00042s] {}
2025-08-02 20:45:06 - app.main - INFO - main.py:276 - Dropped table: projects
2025-08-02 20:45:06 - app.main - INFO - main.py:274 - Dropping table: team_members
2025-08-02 20:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 20:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00110s] {}
2025-08-02 20:45:06 - app.main - INFO - main.py:276 - Dropped table: team_members
2025-08-02 20:45:06 - app.main - INFO - main.py:274 - Dropping table: teams
2025-08-02 20:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 20:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00111s] {}
2025-08-02 20:45:06 - app.main - INFO - main.py:276 - Dropped table: teams
2025-08-02 20:45:06 - app.main - INFO - main.py:274 - Dropping table: test_cases
2025-08-02 20:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 20:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00133s] {}
2025-08-02 20:45:06 - app.main - INFO - main.py:276 - Dropped table: test_cases
2025-08-02 20:45:06 - app.main - INFO - main.py:274 - Dropping table: test_executions
2025-08-02 20:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 20:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00078s] {}
2025-08-02 20:45:06 - app.main - INFO - main.py:276 - Dropped table: test_executions
2025-08-02 20:45:06 - app.main - INFO - main.py:274 - Dropping table: test_plan_test_cases
2025-08-02 20:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 20:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00065s] {}
2025-08-02 20:45:06 - app.main - INFO - main.py:276 - Dropped table: test_plan_test_cases
2025-08-02 20:45:06 - app.main - INFO - main.py:274 - Dropping table: test_plans
2025-08-02 20:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 20:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00089s] {}
2025-08-02 20:45:06 - app.main - INFO - main.py:276 - Dropped table: test_plans
2025-08-02 20:45:06 - app.main - INFO - main.py:274 - Dropping table: test_steps
2025-08-02 20:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 20:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00064s] {}
2025-08-02 20:45:06 - app.main - INFO - main.py:276 - Dropped table: test_steps
2025-08-02 20:45:06 - app.main - INFO - main.py:274 - Dropping table: users
2025-08-02 20:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 20:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00071s] {}
2025-08-02 20:45:06 - app.main - INFO - main.py:276 - Dropped table: users
2025-08-02 20:45:06 - app.main - INFO - main.py:282 - Creating database tables in order...
2025-08-02 20:45:06 - app.main - INFO - main.py:285 - Creating table: users
2025-08-02 20:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00085s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 20:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00107s] {}
2025-08-02 20:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 20:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00084s] {}
2025-08-02 20:45:07 - app.main - INFO - main.py:287 - Table created: users
2025-08-02 20:45:07 - app.main - INFO - main.py:285 - Creating table: teams
2025-08-02 20:45:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2446s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:45:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00120s] {}
2025-08-02 20:45:07 - app.main - INFO - main.py:287 - Table created: teams
2025-08-02 20:45:07 - app.main - INFO - main.py:285 - Creating table: projects
2025-08-02 20:45:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.41s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 20:45:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00108s] {}
2025-08-02 20:45:07 - app.main - INFO - main.py:287 - Table created: projects
2025-08-02 20:45:07 - app.main - INFO - main.py:285 - Creating table: environments
2025-08-02 20:45:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5736s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 20:45:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00132s] {}
2025-08-02 20:45:07 - app.main - INFO - main.py:287 - Table created: environments
2025-08-02 20:45:07 - app.main - INFO - main.py:285 - Creating table: test_cases
2025-08-02 20:45:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7421s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00123s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.08891s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1713s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 20:45:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00170s] {}
2025-08-02 20:45:07 - app.main - INFO - main.py:287 - Table created: test_cases
2025-08-02 20:45:07 - app.main - INFO - main.py:285 - Creating table: test_steps
2025-08-02 20:45:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.194s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 20:45:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00132s] {}
2025-08-02 20:45:08 - app.main - INFO - main.py:287 - Table created: test_steps
2025-08-02 20:45:08 - app.main - INFO - main.py:285 - Creating table: test_plans
2025-08-02 20:45:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.357s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5881s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:45:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00160s] {}
2025-08-02 20:45:08 - app.main - INFO - main.py:287 - Table created: test_plans
2025-08-02 20:45:08 - app.main - INFO - main.py:285 - Creating table: test_plan_test_cases
2025-08-02 20:45:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.604s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:45:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00108s] {}
2025-08-02 20:45:08 - app.main - INFO - main.py:287 - Table created: test_plan_test_cases
2025-08-02 20:45:08 - app.main - INFO - main.py:285 - Creating table: test_executions
2025-08-02 20:45:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.768s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.003s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 20:45:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00162s] {}
2025-08-02 20:45:08 - app.main - INFO - main.py:287 - Table created: test_executions
2025-08-02 20:45:08 - app.main - INFO - main.py:285 - Creating table: comments
2025-08-02 20:45:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.02s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.253s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 20:45:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00120s] {}
2025-08-02 20:45:09 - app.main - INFO - main.py:287 - Table created: comments
2025-08-02 20:45:09 - app.main - INFO - main.py:285 - Creating table: team_members
2025-08-02 20:45:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.27s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:45:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00135s] {}
2025-08-02 20:45:09 - app.main - INFO - main.py:287 - Table created: team_members
2025-08-02 20:45:09 - app.main - INFO - main.py:285 - Creating table: attachments
2025-08-02 20:45:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.436s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 20:45:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00144s] {}
2025-08-02 20:45:09 - app.main - INFO - main.py:287 - Table created: attachments
2025-08-02 20:45:09 - app.main - INFO - main.py:285 - Creating table: activity_logs
2025-08-02 20:45:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.6s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:45:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00186s] {}
2025-08-02 20:45:09 - app.main - INFO - main.py:287 - Table created: activity_logs
2025-08-02 20:45:09 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 20:45:09 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x000001AEDF6A7AB0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 20:45:09 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x000001AEDF6A7AB0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 20:45:09 - app.main - INFO - main.py:292 - All database tables created successfully
2025-08-02 20:45:09 - app.main - INFO - main.py:276 - Dropped table: activity_logs
2025-08-02 20:45:09 - app.main - INFO - main.py:274 - Dropping table: attachments
2025-08-02 20:45:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 20:45:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00125s] {}
2025-08-02 20:45:09 - app.main - INFO - main.py:276 - Dropped table: attachments
2025-08-02 20:45:09 - app.main - INFO - main.py:274 - Dropping table: comments
2025-08-02 20:45:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 20:45:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00110s] {}
2025-08-02 20:45:09 - app.main - INFO - main.py:276 - Dropped table: comments
2025-08-02 20:45:09 - app.main - INFO - main.py:274 - Dropping table: environments
2025-08-02 20:45:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 20:45:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00114s] {}
2025-08-02 20:45:09 - app.main - INFO - main.py:276 - Dropped table: environments
2025-08-02 20:45:09 - app.main - INFO - main.py:274 - Dropping table: projects
2025-08-02 20:45:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 20:45:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00138s] {}
2025-08-02 20:45:09 - app.main - INFO - main.py:276 - Dropped table: projects
2025-08-02 20:45:09 - app.main - INFO - main.py:274 - Dropping table: team_members
2025-08-02 20:45:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 20:45:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00082s] {}
2025-08-02 20:45:10 - app.main - INFO - main.py:276 - Dropped table: team_members
2025-08-02 20:45:10 - app.main - INFO - main.py:274 - Dropping table: teams
2025-08-02 20:45:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 20:45:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00093s] {}
2025-08-02 20:45:10 - app.main - INFO - main.py:276 - Dropped table: teams
2025-08-02 20:45:10 - app.main - INFO - main.py:274 - Dropping table: test_cases
2025-08-02 20:45:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 20:45:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00081s] {}
2025-08-02 20:45:10 - app.main - INFO - main.py:276 - Dropped table: test_cases
2025-08-02 20:45:10 - app.main - INFO - main.py:274 - Dropping table: test_executions
2025-08-02 20:45:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 20:45:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00081s] {}
2025-08-02 20:45:10 - app.main - INFO - main.py:276 - Dropped table: test_executions
2025-08-02 20:45:10 - app.main - INFO - main.py:274 - Dropping table: test_plan_test_cases
2025-08-02 20:45:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 20:45:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00074s] {}
2025-08-02 20:45:10 - app.main - INFO - main.py:276 - Dropped table: test_plan_test_cases
2025-08-02 20:45:10 - app.main - INFO - main.py:274 - Dropping table: test_plans
2025-08-02 20:45:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 20:45:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00075s] {}
2025-08-02 20:45:10 - app.main - INFO - main.py:276 - Dropped table: test_plans
2025-08-02 20:45:10 - app.main - INFO - main.py:274 - Dropping table: test_steps
2025-08-02 20:45:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 20:45:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00112s] {}
2025-08-02 20:45:11 - app.main - INFO - main.py:276 - Dropped table: test_steps
2025-08-02 20:45:11 - app.main - INFO - main.py:274 - Dropping table: users
2025-08-02 20:45:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 20:45:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00072s] {}
2025-08-02 20:45:11 - app.main - INFO - main.py:276 - Dropped table: users
2025-08-02 20:45:11 - app.main - INFO - main.py:282 - Creating database tables in order...
2025-08-02 20:45:11 - app.main - INFO - main.py:285 - Creating table: users
2025-08-02 20:45:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00080s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 20:45:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00100s] {}
2025-08-02 20:45:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 20:45:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00115s] {}
2025-08-02 20:45:11 - app.main - INFO - main.py:287 - Table created: users
2025-08-02 20:45:11 - app.main - INFO - main.py:285 - Creating table: teams
2025-08-02 20:45:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2996s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:45:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00112s] {}
2025-08-02 20:45:11 - app.main - INFO - main.py:287 - Table created: teams
2025-08-02 20:45:11 - app.main - INFO - main.py:285 - Creating table: projects
2025-08-02 20:45:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4891s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 20:45:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00096s] {}
2025-08-02 20:45:11 - app.main - INFO - main.py:287 - Table created: projects
2025-08-02 20:45:11 - app.main - INFO - main.py:285 - Creating table: environments
2025-08-02 20:45:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6797s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 20:45:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00107s] {}
2025-08-02 20:45:11 - root - INFO - main.py:70 - ================================================================================
2025-08-02 20:45:11 - root - INFO - main.py:71 - Application starting with enhanced logging (level: DEBUG)
2025-08-02 20:45:11 - root - INFO - main.py:72 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 20:45:11 - root - INFO - main.py:73 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 20:45:11 - root - INFO - main.py:74 - ================================================================================
2025-08-02 20:45:12 - app.db.session - INFO - session.py:21 - Loading environment from: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\.env
2025-08-02 20:45:12 - app.db.session - INFO - session.py:31 - Database URL configured
2025-08-02 20:45:12 - app.main - INFO - main.py:287 - Table created: environments
2025-08-02 20:45:12 - app.main - INFO - main.py:285 - Creating table: test_cases
2025-08-02 20:45:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.8671s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(created_test_cases, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(assigned_test_cases, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(activity_logs, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(comments, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(test_executions, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(created_projects, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(team_memberships, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(uploaded_attachments, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(email, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(full_name, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(hashed_password, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(role, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(is_active, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(created_at, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(updated_at, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) Identified primary key columns: OrderedSet([Column('id', String(), table=<users>, primary_key=True, nullable=False, default=CallableColumnDefault(<function User.<lambda> at 0x0000016278546520>))])
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) constructed
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(creator, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(team, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(test_cases, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(test_plans, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(environments, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(name, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(description, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(created_by, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(team_id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(is_active, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(created_at, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(updated_at, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) Identified primary key columns: OrderedSet([Column('id', String(), table=<projects>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Project.<lambda> at 0x000001627870F9C0>))])
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) constructed
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(test_case, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(test_case_id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(step_number, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(description, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(expected_result, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(actual_result, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(status, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_steps>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestStep.<lambda> at 0x0000016278771580>))])
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) constructed
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(project, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(creator, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(assignee, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(steps, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(test_executions, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(comments, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(test_plans, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(test_plan_test_cases, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(title, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(description, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(project_id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(test_type, Column)
2025-08-02 20:45:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(priority, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(status, Column)
2025-08-02 20:45:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00127s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(expected_result, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(created_by, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(assigned_to, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(tags, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(ai_generated, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(self_healing_enabled, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(prerequisites, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(test_data, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(automation_config, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(created_at, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(updated_at, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_cases>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestCase.<lambda> at 0x00000162787727A0>))])
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) constructed
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(project, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(test_executions, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(test_cases, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(test_plan_test_cases, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(name, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(description, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(project_id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(created_by, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(status, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(scheduled_start, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(scheduled_end, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(created_at, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(updated_at, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_plans>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestPlan.<lambda> at 0x000001627879A0C0>))])
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) constructed
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(test_case, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(test_plan, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(executor, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(environment, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(test_case_id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(test_plan_id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(executed_by, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(environment_id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(status, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(started_at, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(completed_at, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(duration, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(result, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(logs, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(screenshots, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(error_message, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(ai_analysis, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(created_at, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(updated_at, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_executions>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestExecution.<lambda> at 0x000001627879BE20>))])
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) constructed
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(test_case, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(user, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(parent_comment, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(replies, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(test_case_id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(user_id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(user_name, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(comment_type, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(content, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(parent_comment_id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(resolved, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(created_at, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(updated_at, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) Identified primary key columns: OrderedSet([Column('id', String(), table=<comments>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Comment.<lambda> at 0x00000162787BA3E0>))])
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) constructed
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(members, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(projects, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(name, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(description, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(created_by, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(created_at, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(updated_at, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) Identified primary key columns: OrderedSet([Column('id', String(), table=<teams>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Team.<lambda> at 0x00000162787DC400>))])
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) constructed
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(team, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(user, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(team_id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(user_id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(role, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(joined_at, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) Identified primary key columns: OrderedSet([Column('id', String(), table=<team_members>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TeamMember.<lambda> at 0x00000162787DD6C0>))])
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) constructed
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(project, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(test_executions, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(name, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(description, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(base_url, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(project_id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(is_active, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(variables, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(created_at, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(updated_at, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) Identified primary key columns: OrderedSet([Column('id', String(), table=<environments>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Environment.<lambda> at 0x00000162787DECA0>))])
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) constructed
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(uploader, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_name, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_path, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_size, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_type, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(entity_type, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(entity_id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(uploaded_by, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(description, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(created_at, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) Identified primary key columns: OrderedSet([Column('id', String(), table=<attachments>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Attachment.<lambda> at 0x0000016278810360>))])
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) constructed
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_plan, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_case, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(creator, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_plan_id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_case_id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(order, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(is_mandatory, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(created_at, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(created_by, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_plan_test_cases>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestPlanTestCase.<lambda> at 0x0000016278811620>))])
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) constructed
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user, _RelationshipDeclared)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user_id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user_name, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(action, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(target_type, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(target_id, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(target_name, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(details, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(ip_address, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user_agent, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(created_at, Column)
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) Identified primary key columns: OrderedSet([Column('id', String(), table=<activity_logs>, primary_key=True, nullable=False, default=CallableColumnDefault(<function ActivityLog.<lambda> at 0x0000016278813060>))])
2025-08-02 20:45:12 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) constructed
2025-08-02 20:45:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.09261s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1826s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 20:45:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00112s] {}
2025-08-02 20:45:12 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-08-02 20:45:12 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-08-02 20:45:12 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-08-02 20:45:12 - passlib.registry - DEBUG - registry.py:296 - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
2025-08-02 20:45:12 - app.main - INFO - main.py:287 - Table created: test_cases
2025-08-02 20:45:12 - app.main - INFO - main.py:285 - Creating table: test_steps
2025-08-02 20:45:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.326s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:12 - app.api.v1.routes.auth - DEBUG - auth.py:34 - Environment variables: {
  "ALLUSERSPROFILE": "C:\\ProgramData",
  "APPDATA": "C:\\Users\\kunal\\AppData\\Roaming",
  "C:\\USERS\\KUNAL\\DOWNLOADS\\EMERGENTINTELLITEST-MAIN": "C:\\Program Files\\nodejs\\",
  "CHROME_CRASHPAD_PIPE_NAME": "\\\\.\\pipe\\crashpad_11300_YGFLEAWXLMRVRBOK",
  "COMMONPROGRAMFILES": "C:\\Program Files\\Common Files",
  "COMMONPROGRAMFILES(X86)": "C:\\Program Files (x86)\\Common Files",
  "COMMONPROGRAMW6432": "C:\\Program Files\\Common Files",
  "COMPUTERNAME": "KUNALDELL",
  "COMSPEC": "C:\\Windows\\system32\\cmd.exe",
  "DRIVERDATA": "C:\\Windows\\System32\\Drivers\\DriverData",
  "EFC_5864_1592913036": "1",
  "HOMEDRIVE": "C:",
  "HOMEPATH": "\\Users\\kunal",
  "LOCALAPPDATA": "C:\\Users\\kunal\\AppData\\Local",
  "LOGONSERVER": "\\\\KUNALDELL",
  "LOG_LEVEL": "DEBUG",
  "NUMBER_OF_PROCESSORS": "22",
  "ONEDRIVE": "C:\\Users\\kunal\\OneDrive",
  "ONEDRIVECONSUMER": "C:\\Users\\kunal\\OneDrive",
  "ORIGINAL_XDG_CURRENT_DESKTOP": "undefined",
  "OS": "Windows_NT",
  "PATH": "C:\\Program Files\\Python312\\Scripts\\;C:\\Program Files\\Python312\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files\\Git\\cmd;c:\\Users\\kunal\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Program Files\\nodejs\\;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\kunal\\AppData\\Local\\Programs\\Windsurf\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WinGet\\Links;C:\\Program Files\\nodejs;C:\\Users\\kunal\\AppData\\Roaming\\npm;C:\\Program Files\\Git\\bin;C:\\Users\\kunal\\.deno\\bin;c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\scripts\\noConfigScripts",
  "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL",
  "POSTGRESQL": "C:\\Program Files\\PostgreSQL\\17\\bin\\bin",
  "PROCESSOR_ARCHITECTURE": "AMD64",
  "PROCESSOR_IDENTIFIER": "Intel64 Family 6 Model 170 Stepping 4, GenuineIntel",
  "PROCESSOR_LEVEL": "6",
  "PROCESSOR_REVISION": "aa04",
  "PROGRAMDATA": "C:\\ProgramData",
  "PROGRAMFILES": "C:\\Program Files",
  "PROGRAMFILES(X86)": "C:\\Program Files (x86)",
  "PROGRAMW6432": "C:\\Program Files",
  "PSMODULEPATH": "C:\\Users\\kunal\\OneDrive\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules",
  "PUBLIC": "C:\\Users\\Public",
  "PYTHONUNBUFFERED": "1",
  "SESSIONNAME": "Console",
  "SYSTEMDRIVE": "C:",
  "SYSTEMROOT": "C:\\Windows",
  "TEMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "TMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "USERDOMAIN": "KUNALDELL",
  "USERDOMAIN_ROAMINGPROFILE": "KUNALDELL",
  "USERNAME": "kunal",
  "USERPROFILE": "C:\\Users\\kunal",
  "WINDIR": "C:\\Windows",
  "ZES_ENABLE_SYSMAN": "1",
  "PAGER": "cat",
  "TERM_PROGRAM": "vscode",
  "TERM_PROGRAM_VERSION": "1.99.3",
  "LANG": "en_US.UTF-8",
  "COLORTERM": "truecolor",
  "VSCODE_GIT_IPC_HANDLE": "\\\\.\\pipe\\vscode-git-fccd44132c-sock",
  "PYDEVD_DISABLE_FILE_VALIDATION": "1",
  "VSCODE_DEBUGPY_ADAPTER_ENDPOINTS": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\.noConfigDebugAdapterEndpoints\\endpoint-875e116b470e769c.txt",
  "BUNDLED_DEBUGPY_PATH": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\libs\\debugpy",
  "VSCODE_INJECTION": "1",
  "PROJECT_NAME": "IntelliTest AI Automation Platform",
  "ACCESS_TOKEN_EXPIRE_MINUTES": "11520",
  "SERVER_NAME": "localhost",
  "SERVER_HOST": "http://localhost:8001",
  "DATABASE_URL": "postgresql://postgres.lflecyuvttemfoyixngi:Ayeshaayesha121@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres",
  "SMTP_TLS": "true",
  "SMTP_PORT": "587",
  "SMTP_HOST": "smtp.gmail.com",
  "SMTP_USER": "your-email@gmail.com",
  "EMAILS_FROM_EMAIL": "your-email@gmail.com",
  "EMAILS_FROM_NAME": "IntelliTest Platform",
  "OPENAI_API_KEY": "your-openai-api-key-here",
  "AWS_ACCESS_KEY_ID": "your-aws-access-key",
  "AWS_DEFAULT_REGION": "us-east-1",
  "UPLOAD_DIR": "uploads",
  "MAX_UPLOAD_SIZE": "10485760",
  "ALLOWED_FILE_TYPES": "jpg,jpeg,png,gif,pdf,txt,csv,json",
  "TESTING": "false"
}
2025-08-02 20:45:12 - app.api.v1.routes.auth - DEBUG - auth.py:45 - Database URL: postgresql://postgres.lflecyuvttemfoyixngi:*****@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres
2025-08-02 20:45:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 20:45:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00127s] {}
2025-08-02 20:45:12 - app.main - INFO - main.py:287 - Table created: test_steps
2025-08-02 20:45:12 - app.main - INFO - main.py:285 - Creating table: test_plans
2025-08-02 20:45:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.509s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.642s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:45:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00110s] {}
2025-08-02 20:45:12 - app.main - INFO - main.py:287 - Table created: test_plans
2025-08-02 20:45:12 - app.main - INFO - main.py:285 - Creating table: test_plan_test_cases
2025-08-02 20:45:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.788s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:45:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00127s] {}
2025-08-02 20:45:13 - app.main - INFO - main.py:287 - Table created: test_plan_test_cases
2025-08-02 20:45:13 - app.main - INFO - main.py:285 - Creating table: test_executions
2025-08-02 20:45:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.975s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.107s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 20:45:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00149s] {}
2025-08-02 20:45:13 - app.main - INFO - main.py:287 - Table created: test_executions
2025-08-02 20:45:13 - app.main - INFO - main.py:285 - Creating table: comments
2025-08-02 20:45:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.253s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.385s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 20:45:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00903s] {}
2025-08-02 20:45:13 - app.main - INFO - main.py:287 - Table created: comments
2025-08-02 20:45:13 - app.main - INFO - main.py:285 - Creating table: team_members
2025-08-02 20:45:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.538s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:45:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00104s] {}
2025-08-02 20:45:13 - app.main - INFO - main.py:1354 - Initializing API routers...
2025-08-02 20:45:13 - app.main - INFO - main.py:1366 - API routers initialized successfully
2025-08-02 20:45:13 - app.main - INFO - main.py:228 - Starting database initialization...
2025-08-02 20:45:13 - app.main - INFO - main.py:287 - Table created: team_members
2025-08-02 20:45:13 - app.main - INFO - main.py:285 - Creating table: attachments
2025-08-02 20:45:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.723s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 20:45:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00107s] {}
2025-08-02 20:45:14 - app.main - INFO - main.py:287 - Table created: attachments
2025-08-02 20:45:14 - app.main - INFO - main.py:285 - Creating table: activity_logs
2025-08-02 20:45:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.907s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:45:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00134s] {}
2025-08-02 20:45:14 - app.main - INFO - main.py:287 - Table created: activity_logs
2025-08-02 20:45:14 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 20:45:14 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x00000162799E7BC0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 20:45:14 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x000002ACDB107AB0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 20:45:14 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x000002ACDB107AB0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 20:45:14 - app.main - INFO - main.py:292 - All database tables created successfully
2025-08-02 20:45:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 20:45:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:45:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 20:45:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:45:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 20:45:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:45:15 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x00000162799E7BC0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 20:45:15 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x00000162799E7BC0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 20:45:15 - app.main - INFO - main.py:258 - Disabling foreign key constraints...
2025-08-02 20:45:15 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 20:45:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 20:45:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00105s] {}
2025-08-02 20:45:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 20:45:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00145s] {}
2025-08-02 20:45:15 - app.main - INFO - main.py:273 - Dropping existing tables...
2025-08-02 20:45:15 - app.main - INFO - main.py:276 - Dropping table: activity_logs
2025-08-02 20:45:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 20:45:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00137s] {}
2025-08-02 20:45:15 - app.main - INFO - main.py:278 - Dropped table: activity_logs
2025-08-02 20:45:15 - app.main - INFO - main.py:276 - Dropping table: attachments
2025-08-02 20:45:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 20:45:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00079s] {}
2025-08-02 20:45:15 - app.main - INFO - main.py:278 - Dropped table: attachments
2025-08-02 20:45:15 - app.main - INFO - main.py:276 - Dropping table: comments
2025-08-02 20:45:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 20:45:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00077s] {}
2025-08-02 20:45:15 - app.main - INFO - main.py:278 - Dropped table: comments
2025-08-02 20:45:15 - app.main - INFO - main.py:276 - Dropping table: environments
2025-08-02 20:45:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 20:45:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00062s] {}
2025-08-02 20:45:15 - app.main - INFO - main.py:278 - Dropped table: environments
2025-08-02 20:45:15 - app.main - INFO - main.py:276 - Dropping table: projects
2025-08-02 20:45:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 20:45:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00065s] {}
2025-08-02 20:45:15 - app.main - INFO - main.py:278 - Dropped table: projects
2025-08-02 20:45:15 - app.main - INFO - main.py:276 - Dropping table: team_members
2025-08-02 20:45:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 20:45:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00059s] {}
2025-08-02 20:45:15 - app.main - INFO - main.py:278 - Dropped table: team_members
2025-08-02 20:45:15 - app.main - INFO - main.py:276 - Dropping table: teams
2025-08-02 20:45:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 20:45:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00061s] {}
2025-08-02 20:45:15 - app.main - INFO - main.py:278 - Dropped table: teams
2025-08-02 20:45:15 - app.main - INFO - main.py:276 - Dropping table: test_cases
2025-08-02 20:45:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 20:45:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00075s] {}
2025-08-02 20:45:15 - app.main - INFO - main.py:278 - Dropped table: test_cases
2025-08-02 20:45:15 - app.main - INFO - main.py:276 - Dropping table: test_executions
2025-08-02 20:45:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 20:45:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00062s] {}
2025-08-02 20:45:16 - app.main - INFO - main.py:278 - Dropped table: test_executions
2025-08-02 20:45:16 - app.main - INFO - main.py:276 - Dropping table: test_plan_test_cases
2025-08-02 20:45:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 20:45:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00058s] {}
2025-08-02 20:45:16 - app.main - INFO - main.py:278 - Dropped table: test_plan_test_cases
2025-08-02 20:45:16 - app.main - INFO - main.py:276 - Dropping table: test_plans
2025-08-02 20:45:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 20:45:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00085s] {}
2025-08-02 20:45:16 - app.main - INFO - main.py:278 - Dropped table: test_plans
2025-08-02 20:45:16 - app.main - INFO - main.py:276 - Dropping table: test_steps
2025-08-02 20:45:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 20:45:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00069s] {}
2025-08-02 20:45:16 - app.main - INFO - main.py:278 - Dropped table: test_steps
2025-08-02 20:45:16 - app.main - INFO - main.py:276 - Dropping table: users
2025-08-02 20:45:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 20:45:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00066s] {}
2025-08-02 20:45:16 - app.main - INFO - main.py:278 - Dropped table: users
2025-08-02 20:45:16 - app.main - INFO - main.py:284 - Creating database tables in order...
2025-08-02 20:45:16 - app.main - INFO - main.py:287 - Creating table: users
2025-08-02 20:45:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00077s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 20:45:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00108s] {}
2025-08-02 20:45:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 20:45:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00092s] {}
2025-08-02 20:45:16 - app.main - INFO - main.py:289 - Table created: users
2025-08-02 20:45:16 - app.main - INFO - main.py:287 - Creating table: teams
2025-08-02 20:45:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2442s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:45:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00145s] {}
2025-08-02 20:45:16 - app.main - INFO - main.py:289 - Table created: teams
2025-08-02 20:45:16 - app.main - INFO - main.py:287 - Creating table: projects
2025-08-02 20:45:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4134s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 20:45:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00102s] {}
2025-08-02 20:45:16 - root - INFO - main.py:71 - ================================================================================
2025-08-02 20:45:16 - root - INFO - main.py:72 - Application starting with enhanced logging (level: INFO)
2025-08-02 20:45:16 - root - INFO - main.py:73 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 20:45:16 - root - INFO - main.py:74 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 20:45:16 - root - INFO - main.py:75 - ================================================================================
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(created_test_cases, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(assigned_test_cases, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(activity_logs, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(comments, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(test_executions, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(created_projects, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(team_memberships, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(uploaded_attachments, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(id, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(email, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(full_name, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(hashed_password, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(role, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(is_active, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(created_at, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(updated_at, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) Identified primary key columns: OrderedSet([Column('id', String(), table=<users>, primary_key=True, nullable=False, default=CallableColumnDefault(<function User.<lambda> at 0x000001B1EFC389A0>))])
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) constructed
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(creator, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(team, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(test_cases, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(test_plans, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(environments, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(id, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(name, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(description, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(created_by, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(team_id, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(is_active, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(created_at, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(updated_at, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) Identified primary key columns: OrderedSet([Column('id', String(), table=<projects>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Project.<lambda> at 0x000001B1EFC3B920>))])
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) constructed
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(test_case, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(id, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(test_case_id, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(step_number, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(description, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(expected_result, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(actual_result, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(status, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_steps>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestStep.<lambda> at 0x000001B1EFC714E0>))])
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) constructed
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(project, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(creator, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(assignee, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(steps, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(test_executions, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(comments, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(test_plans, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(test_plan_test_cases, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(id, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(title, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(description, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(project_id, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(test_type, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(priority, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(status, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(expected_result, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(created_by, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(assigned_to, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(tags, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(ai_generated, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(self_healing_enabled, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(prerequisites, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(test_data, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(automation_config, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(created_at, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(updated_at, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_cases>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestCase.<lambda> at 0x000001B1EFC72700>))])
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) constructed
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(project, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(test_executions, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(test_cases, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(test_plan_test_cases, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(id, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(name, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(description, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(project_id, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(created_by, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(status, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(scheduled_start, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(scheduled_end, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(created_at, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(updated_at, Column)
2025-08-02 20:45:16 - app.main - INFO - main.py:289 - Table created: projects
2025-08-02 20:45:16 - app.main - INFO - main.py:287 - Creating table: environments
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_plans>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestPlan.<lambda> at 0x000001B1EFC9A020>))])
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) constructed
2025-08-02 20:45:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5826s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(test_case, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(test_plan, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(executor, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(environment, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(id, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(test_case_id, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(test_plan_id, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(executed_by, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(environment_id, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(status, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(started_at, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(completed_at, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(duration, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(result, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(logs, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(screenshots, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(error_message, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(ai_analysis, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(created_at, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(updated_at, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_executions>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestExecution.<lambda> at 0x000001B1EFC9BF60>))])
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) constructed
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(test_case, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(user, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(parent_comment, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(replies, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(id, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(test_case_id, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(user_id, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(user_name, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(comment_type, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(content, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(parent_comment_id, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(resolved, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(created_at, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(updated_at, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) Identified primary key columns: OrderedSet([Column('id', String(), table=<comments>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Comment.<lambda> at 0x000001B1EFCBA340>))])
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) constructed
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(members, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(projects, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(id, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(name, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(description, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(created_by, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(created_at, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(updated_at, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) Identified primary key columns: OrderedSet([Column('id', String(), table=<teams>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Team.<lambda> at 0x000001B1EFCDC360>))])
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) constructed
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(team, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(user, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(id, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(team_id, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(user_id, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(role, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(joined_at, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) Identified primary key columns: OrderedSet([Column('id', String(), table=<team_members>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TeamMember.<lambda> at 0x000001B1EFCDD620>))])
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) constructed
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(project, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(test_executions, _RelationshipDeclared)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(id, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(name, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(description, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(base_url, Column)
2025-08-02 20:45:16 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(project_id, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(is_active, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(variables, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(created_at, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(updated_at, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) Identified primary key columns: OrderedSet([Column('id', String(), table=<environments>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Environment.<lambda> at 0x000001B1EFCDEC00>))])
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) constructed
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(uploader, _RelationshipDeclared)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(id, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_name, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_path, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_size, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_type, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(entity_type, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(entity_id, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(uploaded_by, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(description, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(created_at, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) Identified primary key columns: OrderedSet([Column('id', String(), table=<attachments>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Attachment.<lambda> at 0x000001B1EFD0C2C0>))])
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) constructed
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_plan, _RelationshipDeclared)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_case, _RelationshipDeclared)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(creator, _RelationshipDeclared)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(id, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_plan_id, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_case_id, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(order, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(is_mandatory, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(created_at, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(created_by, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_plan_test_cases>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestPlanTestCase.<lambda> at 0x000001B1EFD0D580>))])
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) constructed
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user, _RelationshipDeclared)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(id, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user_id, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user_name, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(action, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(target_type, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(target_id, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(target_name, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(details, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(ip_address, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user_agent, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(created_at, Column)
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) Identified primary key columns: OrderedSet([Column('id', String(), table=<activity_logs>, primary_key=True, nullable=False, default=CallableColumnDefault(<function ActivityLog.<lambda> at 0x000001B1EFD0EFC0>))])
2025-08-02 20:45:17 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) constructed
2025-08-02 20:45:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 20:45:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00115s] {}
2025-08-02 20:45:17 - app.main - INFO - main.py:289 - Table created: environments
2025-08-02 20:45:17 - app.main - INFO - main.py:287 - Creating table: test_cases
2025-08-02 20:45:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7501s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00095s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.08438s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1655s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 20:45:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00159s] {}
2025-08-02 20:45:17 - app.main - INFO - main.py:289 - Table created: test_cases
2025-08-02 20:45:17 - app.main - INFO - main.py:287 - Creating table: test_steps
2025-08-02 20:45:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.162s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 20:45:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00138s] {}
2025-08-02 20:45:17 - app.main - INFO - main.py:289 - Table created: test_steps
2025-08-02 20:45:17 - app.main - INFO - main.py:287 - Creating table: test_plans
2025-08-02 20:45:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.328s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5759s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:45:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00132s] {}
2025-08-02 20:45:17 - app.main - INFO - main.py:289 - Table created: test_plans
2025-08-02 20:45:17 - app.main - INFO - main.py:287 - Creating table: test_plan_test_cases
2025-08-02 20:45:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.572s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:45:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00117s] {}
2025-08-02 20:45:18 - app.main - INFO - main.py:289 - Table created: test_plan_test_cases
2025-08-02 20:45:18 - app.main - INFO - main.py:287 - Creating table: test_executions
2025-08-02 20:45:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.736s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.9843s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 20:45:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00159s] {}
2025-08-02 20:45:18 - app.main - INFO - main.py:289 - Table created: test_executions
2025-08-02 20:45:18 - app.main - INFO - main.py:287 - Creating table: comments
2025-08-02 20:45:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.982s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.229s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 20:45:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00128s] {}
2025-08-02 20:45:18 - app.main - INFO - main.py:1355 - Initializing API routers...
2025-08-02 20:45:18 - app.main - INFO - main.py:1367 - API routers initialized successfully
2025-08-02 20:45:18 - app.main - INFO - main.py:229 - Starting database initialization...
2025-08-02 20:45:18 - app.main - INFO - main.py:289 - Table created: comments
2025-08-02 20:45:18 - app.main - INFO - main.py:287 - Creating table: team_members
2025-08-02 20:45:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.226s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:45:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00131s] {}
2025-08-02 20:45:18 - app.main - INFO - main.py:289 - Table created: team_members
2025-08-02 20:45:18 - app.main - INFO - main.py:287 - Creating table: attachments
2025-08-02 20:45:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.4s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 20:45:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00117s] {}
2025-08-02 20:45:18 - app.main - INFO - main.py:289 - Table created: attachments
2025-08-02 20:45:18 - app.main - INFO - main.py:287 - Creating table: activity_logs
2025-08-02 20:45:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.563s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:45:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00129s] {}
2025-08-02 20:45:19 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x000001B1F0ED7BC0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 20:45:19 - app.main - INFO - main.py:289 - Table created: activity_logs
2025-08-02 20:45:19 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 20:45:19 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x00000162799E7BC0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 20:45:19 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x00000162799E7BC0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 20:45:19 - app.main - INFO - main.py:294 - All database tables created successfully
2025-08-02 20:45:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 20:45:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:45:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 20:45:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:45:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 20:45:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:45:19 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x000001B1F0ED7BC0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 20:45:19 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x000001B1F0ED7BC0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 20:45:19 - app.main - INFO - main.py:259 - Disabling foreign key constraints...
2025-08-02 20:45:19 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 20:45:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 20:45:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00117s] {}
2025-08-02 20:45:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 20:45:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00102s] {}
2025-08-02 20:45:20 - app.main - INFO - main.py:274 - Dropping existing tables...
2025-08-02 20:45:20 - app.main - INFO - main.py:277 - Dropping table: activity_logs
2025-08-02 20:45:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 20:45:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00087s] {}
2025-08-02 20:45:20 - app.main - INFO - main.py:279 - Dropped table: activity_logs
2025-08-02 20:45:20 - app.main - INFO - main.py:277 - Dropping table: attachments
2025-08-02 20:45:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 20:45:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00060s] {}
2025-08-02 20:45:20 - app.main - INFO - main.py:279 - Dropped table: attachments
2025-08-02 20:45:20 - app.main - INFO - main.py:277 - Dropping table: comments
2025-08-02 20:45:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 20:45:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00072s] {}
2025-08-02 20:45:20 - app.main - INFO - main.py:279 - Dropped table: comments
2025-08-02 20:45:20 - app.main - INFO - main.py:277 - Dropping table: environments
2025-08-02 20:45:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 20:45:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00063s] {}
2025-08-02 20:45:20 - app.main - INFO - main.py:279 - Dropped table: environments
2025-08-02 20:45:20 - app.main - INFO - main.py:277 - Dropping table: projects
2025-08-02 20:45:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 20:45:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00055s] {}
2025-08-02 20:45:20 - app.main - INFO - main.py:279 - Dropped table: projects
2025-08-02 20:45:20 - app.main - INFO - main.py:277 - Dropping table: team_members
2025-08-02 20:45:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 20:45:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00060s] {}
2025-08-02 20:45:20 - app.main - INFO - main.py:279 - Dropped table: team_members
2025-08-02 20:45:20 - app.main - INFO - main.py:277 - Dropping table: teams
2025-08-02 20:45:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 20:45:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00060s] {}
2025-08-02 20:45:20 - app.main - INFO - main.py:279 - Dropped table: teams
2025-08-02 20:45:20 - app.main - INFO - main.py:277 - Dropping table: test_cases
2025-08-02 20:45:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 20:45:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00080s] {}
2025-08-02 20:45:20 - app.main - INFO - main.py:279 - Dropped table: test_cases
2025-08-02 20:45:20 - app.main - INFO - main.py:277 - Dropping table: test_executions
2025-08-02 20:45:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 20:45:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00063s] {}
2025-08-02 20:45:20 - app.main - INFO - main.py:279 - Dropped table: test_executions
2025-08-02 20:45:20 - app.main - INFO - main.py:277 - Dropping table: test_plan_test_cases
2025-08-02 20:45:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 20:45:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00061s] {}
2025-08-02 20:45:20 - app.main - INFO - main.py:279 - Dropped table: test_plan_test_cases
2025-08-02 20:45:20 - app.main - INFO - main.py:277 - Dropping table: test_plans
2025-08-02 20:45:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 20:45:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00061s] {}
2025-08-02 20:45:20 - app.main - INFO - main.py:279 - Dropped table: test_plans
2025-08-02 20:45:20 - app.main - INFO - main.py:277 - Dropping table: test_steps
2025-08-02 20:45:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 20:45:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00069s] {}
2025-08-02 20:45:21 - app.main - INFO - main.py:279 - Dropped table: test_steps
2025-08-02 20:45:21 - app.main - INFO - main.py:277 - Dropping table: users
2025-08-02 20:45:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 20:45:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00079s] {}
2025-08-02 20:45:21 - app.main - INFO - main.py:279 - Dropped table: users
2025-08-02 20:45:21 - app.main - INFO - main.py:285 - Creating database tables in order...
2025-08-02 20:45:21 - app.main - INFO - main.py:288 - Creating table: users
2025-08-02 20:45:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00115s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 20:45:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00104s] {}
2025-08-02 20:45:21 - root - INFO - main.py:71 - ================================================================================
2025-08-02 20:45:21 - root - INFO - main.py:72 - Application starting with enhanced logging (level: DEBUG)
2025-08-02 20:45:21 - root - INFO - main.py:73 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 20:45:21 - root - INFO - main.py:74 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 20:45:21 - root - INFO - main.py:75 - ================================================================================
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(created_test_cases, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(assigned_test_cases, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(activity_logs, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(comments, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(test_executions, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(created_projects, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(team_memberships, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(uploaded_attachments, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(id, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(email, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(full_name, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(hashed_password, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(role, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(is_active, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(created_at, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(updated_at, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) Identified primary key columns: OrderedSet([Column('id', String(), table=<users>, primary_key=True, nullable=False, default=CallableColumnDefault(<function User.<lambda> at 0x000001380F518A40>))])
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) constructed
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(creator, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(team, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(test_cases, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(test_plans, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(environments, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(id, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(name, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(description, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(created_by, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(team_id, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(is_active, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(created_at, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(updated_at, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) Identified primary key columns: OrderedSet([Column('id', String(), table=<projects>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Project.<lambda> at 0x000001380F51B9C0>))])
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) constructed
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(test_case, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(id, Column)
2025-08-02 20:45:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(test_case_id, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(step_number, Column)
2025-08-02 20:45:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00066s] {}
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(description, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(expected_result, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(actual_result, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(status, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_steps>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestStep.<lambda> at 0x000001380F54D580>))])
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) constructed
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(project, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(creator, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(assignee, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(steps, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(test_executions, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(comments, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(test_plans, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(test_plan_test_cases, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(id, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(title, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(description, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(project_id, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(test_type, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(priority, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(status, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(expected_result, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(created_by, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(assigned_to, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(tags, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(ai_generated, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(self_healing_enabled, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(prerequisites, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(test_data, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(automation_config, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(created_at, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(updated_at, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_cases>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestCase.<lambda> at 0x000001380F54E7A0>))])
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) constructed
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(project, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(test_executions, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(test_cases, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(test_plan_test_cases, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(id, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(name, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(description, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(project_id, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(created_by, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(status, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(scheduled_start, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(scheduled_end, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(created_at, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(updated_at, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_plans>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestPlan.<lambda> at 0x000001380F5760C0>))])
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) constructed
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(test_case, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(test_plan, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(executor, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(environment, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(id, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(test_case_id, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(test_plan_id, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(executed_by, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(environment_id, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(status, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(started_at, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(completed_at, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(duration, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(result, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(logs, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(screenshots, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(error_message, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(ai_analysis, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(created_at, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(updated_at, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_executions>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestExecution.<lambda> at 0x000001380F577E20>))])
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) constructed
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(test_case, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(user, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(parent_comment, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(replies, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(id, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(test_case_id, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(user_id, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(user_name, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(comment_type, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(content, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(parent_comment_id, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(resolved, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(created_at, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(updated_at, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) Identified primary key columns: OrderedSet([Column('id', String(), table=<comments>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Comment.<lambda> at 0x000001380F5963E0>))])
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) constructed
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(members, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(projects, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(id, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(name, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(description, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(created_by, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(created_at, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(updated_at, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) Identified primary key columns: OrderedSet([Column('id', String(), table=<teams>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Team.<lambda> at 0x000001380F5B8400>))])
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) constructed
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(team, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(user, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(id, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(team_id, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(user_id, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(role, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(joined_at, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) Identified primary key columns: OrderedSet([Column('id', String(), table=<team_members>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TeamMember.<lambda> at 0x000001380F5B96C0>))])
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) constructed
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(project, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(test_executions, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(id, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(name, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(description, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(base_url, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(project_id, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(is_active, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(variables, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(created_at, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(updated_at, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) Identified primary key columns: OrderedSet([Column('id', String(), table=<environments>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Environment.<lambda> at 0x000001380F5BACA0>))])
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) constructed
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(uploader, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(id, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_name, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_path, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_size, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_type, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(entity_type, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(entity_id, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(uploaded_by, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(description, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(created_at, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) Identified primary key columns: OrderedSet([Column('id', String(), table=<attachments>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Attachment.<lambda> at 0x000001380F5EC360>))])
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) constructed
2025-08-02 20:45:21 - app.main - INFO - main.py:290 - Table created: users
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_plan, _RelationshipDeclared)
2025-08-02 20:45:21 - app.main - INFO - main.py:288 - Creating table: teams
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_case, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(creator, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(id, Column)
2025-08-02 20:45:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_plan_id, Column)
2025-08-02 20:45:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2438s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_case_id, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(order, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(is_mandatory, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(created_at, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(created_by, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_plan_test_cases>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestPlanTestCase.<lambda> at 0x000001380F5ED620>))])
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) constructed
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user, _RelationshipDeclared)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(id, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user_id, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user_name, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(action, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(target_type, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(target_id, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(target_name, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(details, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(ip_address, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user_agent, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(created_at, Column)
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) Identified primary key columns: OrderedSet([Column('id', String(), table=<activity_logs>, primary_key=True, nullable=False, default=CallableColumnDefault(<function ActivityLog.<lambda> at 0x000001380F5EF060>))])
2025-08-02 20:45:21 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) constructed
2025-08-02 20:45:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:45:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00104s] {}
2025-08-02 20:45:21 - app.main - INFO - main.py:290 - Table created: teams
2025-08-02 20:45:21 - app.main - INFO - main.py:288 - Creating table: projects
2025-08-02 20:45:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4066s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:21 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-08-02 20:45:21 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-08-02 20:45:21 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-08-02 20:45:21 - passlib.registry - DEBUG - registry.py:296 - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
2025-08-02 20:45:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 20:45:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00095s] {}
2025-08-02 20:45:21 - app.main - INFO - main.py:290 - Table created: projects
2025-08-02 20:45:21 - app.main - INFO - main.py:288 - Creating table: environments
2025-08-02 20:45:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5696s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:21 - app.api.v1.routes.auth - DEBUG - auth.py:34 - Environment variables: {
  "ALLUSERSPROFILE": "C:\\ProgramData",
  "APPDATA": "C:\\Users\\kunal\\AppData\\Roaming",
  "C:\\USERS\\KUNAL\\DOWNLOADS\\EMERGENTINTELLITEST-MAIN": "C:\\Program Files\\nodejs\\",
  "CHROME_CRASHPAD_PIPE_NAME": "\\\\.\\pipe\\crashpad_11300_YGFLEAWXLMRVRBOK",
  "COMMONPROGRAMFILES": "C:\\Program Files\\Common Files",
  "COMMONPROGRAMFILES(X86)": "C:\\Program Files (x86)\\Common Files",
  "COMMONPROGRAMW6432": "C:\\Program Files\\Common Files",
  "COMPUTERNAME": "KUNALDELL",
  "COMSPEC": "C:\\Windows\\system32\\cmd.exe",
  "DRIVERDATA": "C:\\Windows\\System32\\Drivers\\DriverData",
  "EFC_5864_1592913036": "1",
  "HOMEDRIVE": "C:",
  "HOMEPATH": "\\Users\\kunal",
  "LOCALAPPDATA": "C:\\Users\\kunal\\AppData\\Local",
  "LOGONSERVER": "\\\\KUNALDELL",
  "LOG_LEVEL": "DEBUG",
  "NUMBER_OF_PROCESSORS": "22",
  "ONEDRIVE": "C:\\Users\\kunal\\OneDrive",
  "ONEDRIVECONSUMER": "C:\\Users\\kunal\\OneDrive",
  "ORIGINAL_XDG_CURRENT_DESKTOP": "undefined",
  "OS": "Windows_NT",
  "PATH": "C:\\Program Files\\Python312\\Scripts\\;C:\\Program Files\\Python312\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files\\Git\\cmd;c:\\Users\\kunal\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Program Files\\nodejs\\;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\kunal\\AppData\\Local\\Programs\\Windsurf\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WinGet\\Links;C:\\Program Files\\nodejs;C:\\Users\\kunal\\AppData\\Roaming\\npm;C:\\Program Files\\Git\\bin;C:\\Users\\kunal\\.deno\\bin;c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\scripts\\noConfigScripts",
  "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL",
  "POSTGRESQL": "C:\\Program Files\\PostgreSQL\\17\\bin\\bin",
  "PROCESSOR_ARCHITECTURE": "AMD64",
  "PROCESSOR_IDENTIFIER": "Intel64 Family 6 Model 170 Stepping 4, GenuineIntel",
  "PROCESSOR_LEVEL": "6",
  "PROCESSOR_REVISION": "aa04",
  "PROGRAMDATA": "C:\\ProgramData",
  "PROGRAMFILES": "C:\\Program Files",
  "PROGRAMFILES(X86)": "C:\\Program Files (x86)",
  "PROGRAMW6432": "C:\\Program Files",
  "PSMODULEPATH": "C:\\Users\\kunal\\OneDrive\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules",
  "PUBLIC": "C:\\Users\\Public",
  "PYTHONUNBUFFERED": "1",
  "SESSIONNAME": "Console",
  "SYSTEMDRIVE": "C:",
  "SYSTEMROOT": "C:\\Windows",
  "TEMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "TMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "USERDOMAIN": "KUNALDELL",
  "USERDOMAIN_ROAMINGPROFILE": "KUNALDELL",
  "USERNAME": "kunal",
  "USERPROFILE": "C:\\Users\\kunal",
  "WINDIR": "C:\\Windows",
  "ZES_ENABLE_SYSMAN": "1",
  "PAGER": "cat",
  "TERM_PROGRAM": "vscode",
  "TERM_PROGRAM_VERSION": "1.99.3",
  "LANG": "en_US.UTF-8",
  "COLORTERM": "truecolor",
  "VSCODE_GIT_IPC_HANDLE": "\\\\.\\pipe\\vscode-git-fccd44132c-sock",
  "PYDEVD_DISABLE_FILE_VALIDATION": "1",
  "VSCODE_DEBUGPY_ADAPTER_ENDPOINTS": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\.noConfigDebugAdapterEndpoints\\endpoint-875e116b470e769c.txt",
  "BUNDLED_DEBUGPY_PATH": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\libs\\debugpy",
  "VSCODE_INJECTION": "1",
  "PROJECT_NAME": "IntelliTest AI Automation Platform",
  "ACCESS_TOKEN_EXPIRE_MINUTES": "11520",
  "SERVER_NAME": "localhost",
  "SERVER_HOST": "http://localhost:8001",
  "DATABASE_URL": "postgresql://postgres.lflecyuvttemfoyixngi:Ayeshaayesha121@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres",
  "SMTP_TLS": "true",
  "SMTP_PORT": "587",
  "SMTP_HOST": "smtp.gmail.com",
  "SMTP_USER": "your-email@gmail.com",
  "EMAILS_FROM_EMAIL": "your-email@gmail.com",
  "EMAILS_FROM_NAME": "IntelliTest Platform",
  "OPENAI_API_KEY": "your-openai-api-key-here",
  "AWS_ACCESS_KEY_ID": "your-aws-access-key",
  "AWS_DEFAULT_REGION": "us-east-1",
  "UPLOAD_DIR": "uploads",
  "MAX_UPLOAD_SIZE": "10485760",
  "ALLOWED_FILE_TYPES": "jpg,jpeg,png,gif,pdf,txt,csv,json",
  "TESTING": "false"
}
2025-08-02 20:45:21 - app.api.v1.routes.auth - DEBUG - auth.py:45 - Database URL: postgresql://postgres.lflecyuvttemfoyixngi:*****@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres
2025-08-02 20:45:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 20:45:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00101s] {}
2025-08-02 20:45:21 - app.main - INFO - main.py:290 - Table created: environments
2025-08-02 20:45:21 - app.main - INFO - main.py:288 - Creating table: test_cases
2025-08-02 20:45:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7335s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00108s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:22 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:22 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.08077s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:22 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:22 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1606s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:22 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 20:45:22 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00132s] {}
2025-08-02 20:45:22 - app.main - INFO - main.py:290 - Table created: test_cases
2025-08-02 20:45:22 - app.main - INFO - main.py:288 - Creating table: test_steps
2025-08-02 20:45:22 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:22 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.151s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:22 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 20:45:22 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00086s] {}
2025-08-02 20:45:22 - app.main - INFO - main.py:290 - Table created: test_steps
2025-08-02 20:45:22 - app.main - INFO - main.py:288 - Creating table: test_plans
2025-08-02 20:45:22 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:22 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.317s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:22 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:22 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5888s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:22 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:45:22 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00123s] {}
2025-08-02 20:45:22 - app.main - INFO - main.py:290 - Table created: test_plans
2025-08-02 20:45:22 - app.main - INFO - main.py:288 - Creating table: test_plan_test_cases
2025-08-02 20:45:22 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:22 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.576s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:22 - app.main - INFO - main.py:1355 - Initializing API routers...
2025-08-02 20:45:22 - app.main - INFO - main.py:1367 - API routers initialized successfully
2025-08-02 20:45:22 - app.main - INFO - main.py:229 - Starting database initialization...
2025-08-02 20:45:22 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:45:22 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00114s] {}
2025-08-02 20:45:22 - app.main - INFO - main.py:290 - Table created: test_plan_test_cases
2025-08-02 20:45:22 - app.main - INFO - main.py:288 - Creating table: test_executions
2025-08-02 20:45:22 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:22 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.742s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:22 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:22 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.008s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 20:45:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00127s] {}
2025-08-02 20:45:23 - app.main - INFO - main.py:290 - Table created: test_executions
2025-08-02 20:45:23 - app.main - INFO - main.py:288 - Creating table: comments
2025-08-02 20:45:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.987s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.251s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:23 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x00000138107B7EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 20:45:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 20:45:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00100s] {}
2025-08-02 20:45:23 - app.main - INFO - main.py:290 - Table created: comments
2025-08-02 20:45:23 - app.main - INFO - main.py:288 - Creating table: team_members
2025-08-02 20:45:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.23s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:45:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00119s] {}
2025-08-02 20:45:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 20:45:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:45:23 - app.main - INFO - main.py:290 - Table created: team_members
2025-08-02 20:45:23 - app.main - INFO - main.py:288 - Creating table: attachments
2025-08-02 20:45:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.392s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 20:45:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00094s] {}
2025-08-02 20:45:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 20:45:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:45:23 - app.main - INFO - main.py:290 - Table created: attachments
2025-08-02 20:45:23 - app.main - INFO - main.py:288 - Creating table: activity_logs
2025-08-02 20:45:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.555s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:45:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00141s] {}
2025-08-02 20:45:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 20:45:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:45:23 - app.main - INFO - main.py:290 - Table created: activity_logs
2025-08-02 20:45:23 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 20:45:23 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x000001B1F0ED7BC0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 20:45:23 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x000001B1F0ED7BC0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 20:45:23 - app.main - INFO - main.py:295 - All database tables created successfully
2025-08-02 20:45:24 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x00000138107B7EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 20:45:24 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x00000138107B7EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 20:45:24 - app.main - INFO - main.py:259 - Disabling foreign key constraints...
2025-08-02 20:45:24 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 20:45:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 20:45:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00100s] {}
2025-08-02 20:45:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 20:45:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00107s] {}
2025-08-02 20:45:24 - app.main - INFO - main.py:274 - Dropping existing tables...
2025-08-02 20:45:24 - app.main - INFO - main.py:277 - Dropping table: activity_logs
2025-08-02 20:45:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 20:45:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00059s] {}
2025-08-02 20:45:24 - app.main - INFO - main.py:279 - Dropped table: activity_logs
2025-08-02 20:45:24 - app.main - INFO - main.py:277 - Dropping table: attachments
2025-08-02 20:45:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 20:45:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00060s] {}
2025-08-02 20:45:24 - app.main - INFO - main.py:279 - Dropped table: attachments
2025-08-02 20:45:24 - app.main - INFO - main.py:277 - Dropping table: comments
2025-08-02 20:45:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 20:45:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00061s] {}
2025-08-02 20:45:24 - app.main - INFO - main.py:279 - Dropped table: comments
2025-08-02 20:45:24 - app.main - INFO - main.py:277 - Dropping table: environments
2025-08-02 20:45:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 20:45:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00061s] {}
2025-08-02 20:45:24 - app.main - INFO - main.py:279 - Dropped table: environments
2025-08-02 20:45:24 - app.main - INFO - main.py:277 - Dropping table: projects
2025-08-02 20:45:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 20:45:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00061s] {}
2025-08-02 20:45:24 - app.main - INFO - main.py:279 - Dropped table: projects
2025-08-02 20:45:24 - app.main - INFO - main.py:277 - Dropping table: team_members
2025-08-02 20:45:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 20:45:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00055s] {}
2025-08-02 20:45:24 - app.main - INFO - main.py:279 - Dropped table: team_members
2025-08-02 20:45:24 - app.main - INFO - main.py:277 - Dropping table: teams
2025-08-02 20:45:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 20:45:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00091s] {}
2025-08-02 20:45:24 - app.main - INFO - main.py:279 - Dropped table: teams
2025-08-02 20:45:24 - app.main - INFO - main.py:277 - Dropping table: test_cases
2025-08-02 20:45:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 20:45:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00080s] {}
2025-08-02 20:45:24 - app.main - INFO - main.py:279 - Dropped table: test_cases
2025-08-02 20:45:24 - app.main - INFO - main.py:277 - Dropping table: test_executions
2025-08-02 20:45:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 20:45:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00092s] {}
2025-08-02 20:45:25 - app.main - INFO - main.py:279 - Dropped table: test_executions
2025-08-02 20:45:25 - app.main - INFO - main.py:277 - Dropping table: test_plan_test_cases
2025-08-02 20:45:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 20:45:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00076s] {}
2025-08-02 20:45:25 - app.main - INFO - main.py:279 - Dropped table: test_plan_test_cases
2025-08-02 20:45:25 - app.main - INFO - main.py:277 - Dropping table: test_plans
2025-08-02 20:45:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 20:45:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00049s] {}
2025-08-02 20:45:25 - app.main - INFO - main.py:279 - Dropped table: test_plans
2025-08-02 20:45:25 - app.main - INFO - main.py:277 - Dropping table: test_steps
2025-08-02 20:45:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 20:45:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00078s] {}
2025-08-02 20:45:25 - app.main - INFO - main.py:279 - Dropped table: test_steps
2025-08-02 20:45:25 - app.main - INFO - main.py:277 - Dropping table: users
2025-08-02 20:45:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 20:45:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00081s] {}
2025-08-02 20:45:25 - app.main - INFO - main.py:279 - Dropped table: users
2025-08-02 20:45:25 - app.main - INFO - main.py:285 - Creating database tables in order...
2025-08-02 20:45:25 - app.main - INFO - main.py:288 - Creating table: users
2025-08-02 20:45:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00093s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 20:45:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00125s] {}
2025-08-02 20:45:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 20:45:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00099s] {}
2025-08-02 20:45:25 - app.main - INFO - main.py:290 - Table created: users
2025-08-02 20:45:25 - app.main - INFO - main.py:288 - Creating table: teams
2025-08-02 20:45:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2541s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:45:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00098s] {}
2025-08-02 20:45:25 - app.main - INFO - main.py:290 - Table created: teams
2025-08-02 20:45:25 - app.main - INFO - main.py:288 - Creating table: projects
2025-08-02 20:45:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.423s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 20:45:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00155s] {}
2025-08-02 20:45:25 - app.main - INFO - main.py:290 - Table created: projects
2025-08-02 20:45:25 - app.main - INFO - main.py:288 - Creating table: environments
2025-08-02 20:45:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5933s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 20:45:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00189s] {}
2025-08-02 20:45:26 - app.main - INFO - main.py:290 - Table created: environments
2025-08-02 20:45:26 - app.main - INFO - main.py:288 - Creating table: test_cases
2025-08-02 20:45:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7669s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:26 - root - INFO - main.py:71 - ================================================================================
2025-08-02 20:45:26 - root - INFO - main.py:72 - Application starting with enhanced logging (level: INFO)
2025-08-02 20:45:26 - root - INFO - main.py:73 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 20:45:26 - root - INFO - main.py:74 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 20:45:26 - root - INFO - main.py:75 - ================================================================================
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(created_test_cases, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(assigned_test_cases, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(activity_logs, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(comments, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(test_executions, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(created_projects, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(team_memberships, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(uploaded_attachments, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(id, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(email, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(full_name, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(hashed_password, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(role, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(is_active, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(created_at, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(updated_at, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) Identified primary key columns: OrderedSet([Column('id', String(), table=<users>, primary_key=True, nullable=False, default=CallableColumnDefault(<function User.<lambda> at 0x000002A1193089A0>))])
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) constructed
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(creator, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(team, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(test_cases, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(test_plans, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(environments, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(id, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(name, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(description, Column)
2025-08-02 20:45:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(created_by, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(team_id, Column)
2025-08-02 20:45:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00096s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(is_active, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(created_at, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(updated_at, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) Identified primary key columns: OrderedSet([Column('id', String(), table=<projects>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Project.<lambda> at 0x000002A11930B920>))])
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) constructed
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(test_case, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(id, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(test_case_id, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(step_number, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(description, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(expected_result, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(actual_result, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(status, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_steps>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestStep.<lambda> at 0x000002A1193414E0>))])
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) constructed
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(project, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(creator, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(assignee, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(steps, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(test_executions, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(comments, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(test_plans, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(test_plan_test_cases, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(id, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(title, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(description, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(project_id, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(test_type, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(priority, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(status, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(expected_result, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(created_by, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(assigned_to, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(tags, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(ai_generated, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(self_healing_enabled, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(prerequisites, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(test_data, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(automation_config, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(created_at, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(updated_at, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_cases>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestCase.<lambda> at 0x000002A119342700>))])
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) constructed
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(project, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(test_executions, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(test_cases, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(test_plan_test_cases, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(id, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(name, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(description, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(project_id, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(created_by, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(status, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(scheduled_start, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(scheduled_end, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(created_at, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(updated_at, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_plans>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestPlan.<lambda> at 0x000002A11936A020>))])
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) constructed
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(test_case, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(test_plan, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(executor, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(environment, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(id, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(test_case_id, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(test_plan_id, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(executed_by, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(environment_id, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(status, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(started_at, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(completed_at, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(duration, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(result, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(logs, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(screenshots, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(error_message, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(ai_analysis, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(created_at, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(updated_at, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_executions>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestExecution.<lambda> at 0x000002A11936BF60>))])
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) constructed
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(test_case, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(user, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(parent_comment, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(replies, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(id, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(test_case_id, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(user_id, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(user_name, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(comment_type, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(content, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(parent_comment_id, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(resolved, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(created_at, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(updated_at, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) Identified primary key columns: OrderedSet([Column('id', String(), table=<comments>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Comment.<lambda> at 0x000002A11938A340>))])
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) constructed
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(members, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(projects, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(id, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(name, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(description, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(created_by, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(created_at, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(updated_at, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) Identified primary key columns: OrderedSet([Column('id', String(), table=<teams>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Team.<lambda> at 0x000002A1193AC360>))])
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) constructed
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(team, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(user, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(id, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(team_id, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(user_id, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(role, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(joined_at, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) Identified primary key columns: OrderedSet([Column('id', String(), table=<team_members>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TeamMember.<lambda> at 0x000002A1193AD620>))])
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) constructed
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(project, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(test_executions, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(id, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(name, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(description, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(base_url, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(project_id, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(is_active, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(variables, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(created_at, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(updated_at, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) Identified primary key columns: OrderedSet([Column('id', String(), table=<environments>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Environment.<lambda> at 0x000002A1193AEC00>))])
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) constructed
2025-08-02 20:45:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(uploader, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.08404s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(id, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_name, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_path, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_size, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_type, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(entity_type, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(entity_id, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(uploaded_by, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(description, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(created_at, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) Identified primary key columns: OrderedSet([Column('id', String(), table=<attachments>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Attachment.<lambda> at 0x000002A1193DC2C0>))])
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) constructed
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_plan, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_case, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(creator, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(id, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_plan_id, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_case_id, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(order, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(is_mandatory, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(created_at, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(created_by, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_plan_test_cases>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestPlanTestCase.<lambda> at 0x000002A1193DD580>))])
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) constructed
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user, _RelationshipDeclared)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(id, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user_id, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user_name, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(action, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(target_type, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(target_id, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(target_name, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(details, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(ip_address, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user_agent, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(created_at, Column)
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) Identified primary key columns: OrderedSet([Column('id', String(), table=<activity_logs>, primary_key=True, nullable=False, default=CallableColumnDefault(<function ActivityLog.<lambda> at 0x000002A1193DEFC0>))])
2025-08-02 20:45:26 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) constructed
2025-08-02 20:45:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.168s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 20:45:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00204s] {}
2025-08-02 20:45:26 - app.main - INFO - main.py:290 - Table created: test_cases
2025-08-02 20:45:26 - app.main - INFO - main.py:288 - Creating table: test_steps
2025-08-02 20:45:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.191s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 20:45:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00129s] {}
2025-08-02 20:45:26 - app.main - INFO - main.py:290 - Table created: test_steps
2025-08-02 20:45:26 - app.main - INFO - main.py:288 - Creating table: test_plans
2025-08-02 20:45:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.363s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5943s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:45:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00168s] {}
2025-08-02 20:45:26 - app.main - INFO - main.py:290 - Table created: test_plans
2025-08-02 20:45:26 - app.main - INFO - main.py:288 - Creating table: test_plan_test_cases
2025-08-02 20:45:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.615s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:45:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00139s] {}
2025-08-02 20:45:27 - app.main - INFO - main.py:290 - Table created: test_plan_test_cases
2025-08-02 20:45:27 - app.main - INFO - main.py:288 - Creating table: test_executions
2025-08-02 20:45:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.785s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.019s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 20:45:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00145s] {}
2025-08-02 20:45:27 - app.main - INFO - main.py:290 - Table created: test_executions
2025-08-02 20:45:27 - app.main - INFO - main.py:288 - Creating table: comments
2025-08-02 20:45:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.043s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:27 - app.main - INFO - main.py:1355 - Initializing API routers...
2025-08-02 20:45:27 - app.main - INFO - main.py:1367 - API routers initialized successfully
2025-08-02 20:45:27 - app.main - INFO - main.py:229 - Starting database initialization...
2025-08-02 20:45:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.276s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 20:45:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00153s] {}
2025-08-02 20:45:27 - app.main - INFO - main.py:290 - Table created: comments
2025-08-02 20:45:27 - app.main - INFO - main.py:288 - Creating table: team_members
2025-08-02 20:45:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.299s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:45:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00120s] {}
2025-08-02 20:45:27 - app.main - INFO - main.py:290 - Table created: team_members
2025-08-02 20:45:27 - app.main - INFO - main.py:288 - Creating table: attachments
2025-08-02 20:45:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.472s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 20:45:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00140s] {}
2025-08-02 20:45:27 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x000002A11A5A7BC0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 20:45:28 - app.main - INFO - main.py:290 - Table created: attachments
2025-08-02 20:45:28 - app.main - INFO - main.py:288 - Creating table: activity_logs
2025-08-02 20:45:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.645s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:45:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00185s] {}
2025-08-02 20:45:28 - app.main - INFO - main.py:290 - Table created: activity_logs
2025-08-02 20:45:28 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 20:45:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 20:45:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:45:28 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x00000138107B7EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 20:45:28 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x00000138107B7EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 20:45:28 - app.main - INFO - main.py:295 - All database tables created successfully
2025-08-02 20:45:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 20:45:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:45:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 20:45:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:45:28 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x000002A11A5A7BC0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 20:45:28 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x000002A11A5A7BC0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 20:45:28 - app.main - INFO - main.py:259 - Disabling foreign key constraints...
2025-08-02 20:45:28 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 20:45:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 20:45:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00148s] {}
2025-08-02 20:45:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 20:45:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00106s] {}
2025-08-02 20:45:28 - app.main - INFO - main.py:274 - Dropping existing tables...
2025-08-02 20:45:28 - app.main - INFO - main.py:277 - Dropping table: activity_logs
2025-08-02 20:45:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 20:45:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00116s] {}
2025-08-02 20:45:28 - app.main - INFO - main.py:279 - Dropped table: activity_logs
2025-08-02 20:45:28 - app.main - INFO - main.py:277 - Dropping table: attachments
2025-08-02 20:45:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 20:45:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00074s] {}
2025-08-02 20:45:29 - app.main - INFO - main.py:279 - Dropped table: attachments
2025-08-02 20:45:29 - app.main - INFO - main.py:277 - Dropping table: comments
2025-08-02 20:45:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 20:45:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00075s] {}
2025-08-02 20:45:29 - app.main - INFO - main.py:279 - Dropped table: comments
2025-08-02 20:45:29 - app.main - INFO - main.py:277 - Dropping table: environments
2025-08-02 20:45:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 20:45:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00053s] {}
2025-08-02 20:45:29 - app.main - INFO - main.py:279 - Dropped table: environments
2025-08-02 20:45:29 - app.main - INFO - main.py:277 - Dropping table: projects
2025-08-02 20:45:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 20:45:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00084s] {}
2025-08-02 20:45:29 - app.main - INFO - main.py:279 - Dropped table: projects
2025-08-02 20:45:29 - app.main - INFO - main.py:277 - Dropping table: team_members
2025-08-02 20:45:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 20:45:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00097s] {}
2025-08-02 20:45:29 - app.main - INFO - main.py:279 - Dropped table: team_members
2025-08-02 20:45:29 - app.main - INFO - main.py:277 - Dropping table: teams
2025-08-02 20:45:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 20:45:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00082s] {}
2025-08-02 20:45:29 - app.main - INFO - main.py:279 - Dropped table: teams
2025-08-02 20:45:29 - app.main - INFO - main.py:277 - Dropping table: test_cases
2025-08-02 20:45:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 20:45:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00144s] {}
2025-08-02 20:45:29 - app.main - INFO - main.py:279 - Dropped table: test_cases
2025-08-02 20:45:29 - app.main - INFO - main.py:277 - Dropping table: test_executions
2025-08-02 20:45:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 20:45:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00085s] {}
2025-08-02 20:45:29 - app.main - INFO - main.py:279 - Dropped table: test_executions
2025-08-02 20:45:29 - app.main - INFO - main.py:277 - Dropping table: test_plan_test_cases
2025-08-02 20:45:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 20:45:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00090s] {}
2025-08-02 20:45:29 - app.main - INFO - main.py:279 - Dropped table: test_plan_test_cases
2025-08-02 20:45:29 - app.main - INFO - main.py:277 - Dropping table: test_plans
2025-08-02 20:45:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 20:45:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00147s] {}
2025-08-02 20:45:29 - app.main - INFO - main.py:279 - Dropped table: test_plans
2025-08-02 20:45:29 - app.main - INFO - main.py:277 - Dropping table: test_steps
2025-08-02 20:45:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 20:45:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00044s] {}
2025-08-02 20:45:29 - app.main - INFO - main.py:279 - Dropped table: test_steps
2025-08-02 20:45:29 - app.main - INFO - main.py:277 - Dropping table: users
2025-08-02 20:45:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 20:45:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00057s] {}
2025-08-02 20:45:29 - app.main - INFO - main.py:279 - Dropped table: users
2025-08-02 20:45:29 - app.main - INFO - main.py:285 - Creating database tables in order...
2025-08-02 20:45:29 - app.main - INFO - main.py:288 - Creating table: users
2025-08-02 20:45:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00101s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:29 - root - INFO - main.py:71 - ================================================================================
2025-08-02 20:45:30 - root - INFO - main.py:72 - Application starting with enhanced logging (level: DEBUG)
2025-08-02 20:45:30 - root - INFO - main.py:73 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 20:45:30 - root - INFO - main.py:74 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 20:45:30 - root - INFO - main.py:75 - ================================================================================
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(created_test_cases, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(assigned_test_cases, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(activity_logs, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(comments, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(test_executions, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(created_projects, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(team_memberships, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(uploaded_attachments, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(email, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(full_name, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(hashed_password, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(role, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(is_active, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(created_at, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(updated_at, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) Identified primary key columns: OrderedSet([Column('id', String(), table=<users>, primary_key=True, nullable=False, default=CallableColumnDefault(<function User.<lambda> at 0x0000027545A18A40>))])
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) constructed
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(creator, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(team, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(test_cases, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(test_plans, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(environments, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(name, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(description, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(created_by, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(team_id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(is_active, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(created_at, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(updated_at, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) Identified primary key columns: OrderedSet([Column('id', String(), table=<projects>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Project.<lambda> at 0x0000027545A1B9C0>))])
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) constructed
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(test_case, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(test_case_id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(step_number, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(description, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(expected_result, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(actual_result, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(status, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_steps>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestStep.<lambda> at 0x0000027545A4D580>))])
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) constructed
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(project, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(creator, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(assignee, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(steps, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(test_executions, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(comments, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(test_plans, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(test_plan_test_cases, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(title, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(description, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(project_id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(test_type, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(priority, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(status, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(expected_result, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(created_by, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(assigned_to, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(tags, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(ai_generated, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(self_healing_enabled, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(prerequisites, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(test_data, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(automation_config, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(created_at, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(updated_at, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_cases>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestCase.<lambda> at 0x0000027545A4E7A0>))])
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) constructed
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(project, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(test_executions, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(test_cases, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(test_plan_test_cases, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(name, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(description, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(project_id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(created_by, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(status, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(scheduled_start, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(scheduled_end, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(created_at, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(updated_at, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_plans>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestPlan.<lambda> at 0x0000027545A760C0>))])
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) constructed
2025-08-02 20:45:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(test_case, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(test_plan, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00110s] {}
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(executor, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(environment, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(test_case_id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(test_plan_id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(executed_by, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(environment_id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(status, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(started_at, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(completed_at, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(duration, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(result, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(logs, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(screenshots, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(error_message, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(ai_analysis, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(created_at, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(updated_at, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_executions>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestExecution.<lambda> at 0x0000027545A77E20>))])
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) constructed
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(test_case, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(user, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(parent_comment, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(replies, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(test_case_id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(user_id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(user_name, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(comment_type, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(content, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(parent_comment_id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(resolved, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(created_at, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(updated_at, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) Identified primary key columns: OrderedSet([Column('id', String(), table=<comments>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Comment.<lambda> at 0x0000027545A963E0>))])
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) constructed
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(members, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(projects, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(name, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(description, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(created_by, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(created_at, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(updated_at, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) Identified primary key columns: OrderedSet([Column('id', String(), table=<teams>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Team.<lambda> at 0x0000027545AB8400>))])
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) constructed
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(team, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(user, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(team_id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(user_id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(role, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(joined_at, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) Identified primary key columns: OrderedSet([Column('id', String(), table=<team_members>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TeamMember.<lambda> at 0x0000027545AB96C0>))])
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) constructed
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(project, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(test_executions, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(name, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(description, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(base_url, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(project_id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(is_active, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(variables, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(created_at, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(updated_at, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) Identified primary key columns: OrderedSet([Column('id', String(), table=<environments>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Environment.<lambda> at 0x0000027545ABACA0>))])
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) constructed
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(uploader, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_name, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_path, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_size, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_type, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(entity_type, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(entity_id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(uploaded_by, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(description, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(created_at, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) Identified primary key columns: OrderedSet([Column('id', String(), table=<attachments>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Attachment.<lambda> at 0x0000027545AEC360>))])
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) constructed
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_plan, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_case, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(creator, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_plan_id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_case_id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(order, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(is_mandatory, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(created_at, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(created_by, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_plan_test_cases>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestPlanTestCase.<lambda> at 0x0000027545AED620>))])
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) constructed
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user, _RelationshipDeclared)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user_id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user_name, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(action, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(target_type, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(target_id, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(target_name, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(details, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(ip_address, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user_agent, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(created_at, Column)
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) Identified primary key columns: OrderedSet([Column('id', String(), table=<activity_logs>, primary_key=True, nullable=False, default=CallableColumnDefault(<function ActivityLog.<lambda> at 0x0000027545AEF060>))])
2025-08-02 20:45:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) constructed
2025-08-02 20:45:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 20:45:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00063s] {}
2025-08-02 20:45:30 - app.main - INFO - main.py:290 - Table created: users
2025-08-02 20:45:30 - app.main - INFO - main.py:288 - Creating table: teams
2025-08-02 20:45:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2399s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:30 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-08-02 20:45:30 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-08-02 20:45:30 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-08-02 20:45:30 - passlib.registry - DEBUG - registry.py:296 - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
2025-08-02 20:45:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:45:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00075s] {}
2025-08-02 20:45:30 - app.main - INFO - main.py:290 - Table created: teams
2025-08-02 20:45:30 - app.main - INFO - main.py:288 - Creating table: projects
2025-08-02 20:45:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4191s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:30 - app.api.v1.routes.auth - DEBUG - auth.py:34 - Environment variables: {
  "ALLUSERSPROFILE": "C:\\ProgramData",
  "APPDATA": "C:\\Users\\kunal\\AppData\\Roaming",
  "C:\\USERS\\KUNAL\\DOWNLOADS\\EMERGENTINTELLITEST-MAIN": "C:\\Program Files\\nodejs\\",
  "CHROME_CRASHPAD_PIPE_NAME": "\\\\.\\pipe\\crashpad_11300_YGFLEAWXLMRVRBOK",
  "COMMONPROGRAMFILES": "C:\\Program Files\\Common Files",
  "COMMONPROGRAMFILES(X86)": "C:\\Program Files (x86)\\Common Files",
  "COMMONPROGRAMW6432": "C:\\Program Files\\Common Files",
  "COMPUTERNAME": "KUNALDELL",
  "COMSPEC": "C:\\Windows\\system32\\cmd.exe",
  "DRIVERDATA": "C:\\Windows\\System32\\Drivers\\DriverData",
  "EFC_5864_1592913036": "1",
  "HOMEDRIVE": "C:",
  "HOMEPATH": "\\Users\\kunal",
  "LOCALAPPDATA": "C:\\Users\\kunal\\AppData\\Local",
  "LOGONSERVER": "\\\\KUNALDELL",
  "LOG_LEVEL": "DEBUG",
  "NUMBER_OF_PROCESSORS": "22",
  "ONEDRIVE": "C:\\Users\\kunal\\OneDrive",
  "ONEDRIVECONSUMER": "C:\\Users\\kunal\\OneDrive",
  "ORIGINAL_XDG_CURRENT_DESKTOP": "undefined",
  "OS": "Windows_NT",
  "PATH": "C:\\Program Files\\Python312\\Scripts\\;C:\\Program Files\\Python312\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files\\Git\\cmd;c:\\Users\\kunal\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Program Files\\nodejs\\;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\kunal\\AppData\\Local\\Programs\\Windsurf\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WinGet\\Links;C:\\Program Files\\nodejs;C:\\Users\\kunal\\AppData\\Roaming\\npm;C:\\Program Files\\Git\\bin;C:\\Users\\kunal\\.deno\\bin;c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\scripts\\noConfigScripts",
  "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL",
  "POSTGRESQL": "C:\\Program Files\\PostgreSQL\\17\\bin\\bin",
  "PROCESSOR_ARCHITECTURE": "AMD64",
  "PROCESSOR_IDENTIFIER": "Intel64 Family 6 Model 170 Stepping 4, GenuineIntel",
  "PROCESSOR_LEVEL": "6",
  "PROCESSOR_REVISION": "aa04",
  "PROGRAMDATA": "C:\\ProgramData",
  "PROGRAMFILES": "C:\\Program Files",
  "PROGRAMFILES(X86)": "C:\\Program Files (x86)",
  "PROGRAMW6432": "C:\\Program Files",
  "PSMODULEPATH": "C:\\Users\\kunal\\OneDrive\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules",
  "PUBLIC": "C:\\Users\\Public",
  "PYTHONUNBUFFERED": "1",
  "SESSIONNAME": "Console",
  "SYSTEMDRIVE": "C:",
  "SYSTEMROOT": "C:\\Windows",
  "TEMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "TMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "USERDOMAIN": "KUNALDELL",
  "USERDOMAIN_ROAMINGPROFILE": "KUNALDELL",
  "USERNAME": "kunal",
  "USERPROFILE": "C:\\Users\\kunal",
  "WINDIR": "C:\\Windows",
  "ZES_ENABLE_SYSMAN": "1",
  "PAGER": "cat",
  "TERM_PROGRAM": "vscode",
  "TERM_PROGRAM_VERSION": "1.99.3",
  "LANG": "en_US.UTF-8",
  "COLORTERM": "truecolor",
  "VSCODE_GIT_IPC_HANDLE": "\\\\.\\pipe\\vscode-git-fccd44132c-sock",
  "PYDEVD_DISABLE_FILE_VALIDATION": "1",
  "VSCODE_DEBUGPY_ADAPTER_ENDPOINTS": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\.noConfigDebugAdapterEndpoints\\endpoint-875e116b470e769c.txt",
  "BUNDLED_DEBUGPY_PATH": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\libs\\debugpy",
  "VSCODE_INJECTION": "1",
  "PROJECT_NAME": "IntelliTest AI Automation Platform",
  "ACCESS_TOKEN_EXPIRE_MINUTES": "11520",
  "SERVER_NAME": "localhost",
  "SERVER_HOST": "http://localhost:8001",
  "DATABASE_URL": "postgresql://postgres.lflecyuvttemfoyixngi:Ayeshaayesha121@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres",
  "SMTP_TLS": "true",
  "SMTP_PORT": "587",
  "SMTP_HOST": "smtp.gmail.com",
  "SMTP_USER": "your-email@gmail.com",
  "EMAILS_FROM_EMAIL": "your-email@gmail.com",
  "EMAILS_FROM_NAME": "IntelliTest Platform",
  "OPENAI_API_KEY": "your-openai-api-key-here",
  "AWS_ACCESS_KEY_ID": "your-aws-access-key",
  "AWS_DEFAULT_REGION": "us-east-1",
  "UPLOAD_DIR": "uploads",
  "MAX_UPLOAD_SIZE": "10485760",
  "ALLOWED_FILE_TYPES": "jpg,jpeg,png,gif,pdf,txt,csv,json",
  "TESTING": "false"
}
2025-08-02 20:45:30 - app.api.v1.routes.auth - DEBUG - auth.py:45 - Database URL: postgresql://postgres.lflecyuvttemfoyixngi:*****@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres
2025-08-02 20:45:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 20:45:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00171s] {}
2025-08-02 20:45:30 - app.main - INFO - main.py:290 - Table created: projects
2025-08-02 20:45:30 - app.main - INFO - main.py:288 - Creating table: environments
2025-08-02 20:45:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5912s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 20:45:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00226s] {}
2025-08-02 20:45:30 - app.main - INFO - main.py:290 - Table created: environments
2025-08-02 20:45:30 - app.main - INFO - main.py:288 - Creating table: test_cases
2025-08-02 20:45:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7563s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00081s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.08251s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1626s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 20:45:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00090s] {}
2025-08-02 20:45:31 - app.main - INFO - main.py:290 - Table created: test_cases
2025-08-02 20:45:31 - app.main - INFO - main.py:288 - Creating table: test_steps
2025-08-02 20:45:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.16s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 20:45:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00143s] {}
2025-08-02 20:45:31 - app.main - INFO - main.py:1355 - Initializing API routers...
2025-08-02 20:45:31 - app.main - INFO - main.py:1367 - API routers initialized successfully
2025-08-02 20:45:31 - app.main - INFO - main.py:290 - Table created: test_steps
2025-08-02 20:45:31 - app.main - INFO - main.py:288 - Creating table: test_plans
2025-08-02 20:45:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.322s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:31 - app.main - INFO - main.py:229 - Starting database initialization...
2025-08-02 20:45:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5655s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:45:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00121s] {}
2025-08-02 20:45:31 - app.main - INFO - main.py:290 - Table created: test_plans
2025-08-02 20:45:31 - app.main - INFO - main.py:288 - Creating table: test_plan_test_cases
2025-08-02 20:45:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.564s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:45:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00651s] {}
2025-08-02 20:45:31 - app.main - INFO - main.py:290 - Table created: test_plan_test_cases
2025-08-02 20:45:31 - app.main - INFO - main.py:288 - Creating table: test_executions
2025-08-02 20:45:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.735s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.9782s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:31 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x0000027546CA7EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 20:45:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 20:45:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00090s] {}
2025-08-02 20:45:31 - app.main - INFO - main.py:290 - Table created: test_executions
2025-08-02 20:45:31 - app.main - INFO - main.py:288 - Creating table: comments
2025-08-02 20:45:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.979s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.23s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00163s] {}
2025-08-02 20:45:32 - app.main - INFO - main.py:290 - Table created: comments
2025-08-02 20:45:32 - app.main - INFO - main.py:288 - Creating table: team_members
2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.229s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00098s] {}
2025-08-02 20:45:32 - app.main - INFO - main.py:290 - Table created: team_members
2025-08-02 20:45:32 - app.main - INFO - main.py:288 - Creating table: attachments
2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.39s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00101s] {}
2025-08-02 20:45:32 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x0000027546CA7EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 20:45:32 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x0000027546CA7EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 20:45:32 - app.main - INFO - main.py:259 - Disabling foreign key constraints...
2025-08-02 20:45:32 - app.main - INFO - main.py:290 - Table created: attachments
2025-08-02 20:45:32 - app.main - INFO - main.py:288 - Creating table: activity_logs
2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.552s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00193s] {}
2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00165s] {}
2025-08-02 20:45:32 - app.main - INFO - main.py:290 - Table created: activity_logs
2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00106s] {}
2025-08-02 20:45:32 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x000002A11A5A7BC0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 20:45:32 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x000002A11A5A7BC0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 20:45:32 - app.main - INFO - main.py:295 - All database tables created successfully
2025-08-02 20:45:32 - app.main - INFO - main.py:274 - Dropping existing tables...
2025-08-02 20:45:32 - app.main - INFO - main.py:277 - Dropping table: activity_logs
2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00059s] {}
2025-08-02 20:45:32 - app.main - INFO - main.py:279 - Dropped table: activity_logs
2025-08-02 20:45:32 - app.main - INFO - main.py:277 - Dropping table: attachments
2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00088s] {}
2025-08-02 20:45:32 - app.main - INFO - main.py:279 - Dropped table: attachments
2025-08-02 20:45:32 - app.main - INFO - main.py:277 - Dropping table: comments
2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 20:45:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00080s] {}
2025-08-02 20:45:33 - app.main - INFO - main.py:279 - Dropped table: comments
2025-08-02 20:45:33 - app.main - INFO - main.py:277 - Dropping table: environments
2025-08-02 20:45:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 20:45:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00049s] {}
2025-08-02 20:45:33 - app.main - INFO - main.py:279 - Dropped table: environments
2025-08-02 20:45:33 - app.main - INFO - main.py:277 - Dropping table: projects
2025-08-02 20:45:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 20:45:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00108s] {}
2025-08-02 20:45:33 - app.main - INFO - main.py:279 - Dropped table: projects
2025-08-02 20:45:33 - app.main - INFO - main.py:277 - Dropping table: team_members
2025-08-02 20:45:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 20:45:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00078s] {}
2025-08-02 20:45:33 - app.main - INFO - main.py:279 - Dropped table: team_members
2025-08-02 20:45:33 - app.main - INFO - main.py:277 - Dropping table: teams
2025-08-02 20:45:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 20:45:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00085s] {}
2025-08-02 20:45:33 - app.main - INFO - main.py:279 - Dropped table: teams
2025-08-02 20:46:02 - app.main - INFO - main.py:277 - Dropping table: test_cases
2025-08-02 20:46:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 20:46:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00084s] {}
2025-08-02 20:46:02 - app.main - INFO - main.py:279 - Dropped table: test_cases
2025-08-02 20:46:02 - app.main - INFO - main.py:277 - Dropping table: test_executions
2025-08-02 20:46:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 20:46:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00128s] {}
2025-08-02 20:46:02 - app.main - INFO - main.py:279 - Dropped table: test_executions
2025-08-02 20:46:02 - app.main - INFO - main.py:277 - Dropping table: test_plan_test_cases
2025-08-02 20:46:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 20:46:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00084s] {}
2025-08-02 20:46:02 - app.main - INFO - main.py:279 - Dropped table: test_plan_test_cases
2025-08-02 20:46:02 - app.main - INFO - main.py:277 - Dropping table: test_plans
2025-08-02 20:46:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 20:46:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00113s] {}
2025-08-02 20:46:02 - app.main - INFO - main.py:279 - Dropped table: test_plans
2025-08-02 20:46:02 - app.main - INFO - main.py:277 - Dropping table: test_steps
2025-08-02 20:46:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 20:46:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00100s] {}
2025-08-02 20:46:02 - app.main - INFO - main.py:279 - Dropped table: test_steps
2025-08-02 20:46:02 - app.main - INFO - main.py:277 - Dropping table: users
2025-08-02 20:46:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 20:46:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00273s] {}
2025-08-02 20:46:02 - app.main - INFO - main.py:279 - Dropped table: users
2025-08-02 20:46:02 - app.main - INFO - main.py:285 - Creating database tables in order...
2025-08-02 20:46:02 - app.main - INFO - main.py:288 - Creating table: users
2025-08-02 20:46:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00096s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 20:46:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00134s] {}
2025-08-02 20:46:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 20:46:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00163s] {}
2025-08-02 20:46:02 - app.main - INFO - main.py:290 - Table created: users
2025-08-02 20:46:02 - app.main - INFO - main.py:288 - Creating table: teams
2025-08-02 20:46:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2994s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:46:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00158s] {}
2025-08-02 20:46:03 - app.main - INFO - main.py:290 - Table created: teams
2025-08-02 20:46:03 - app.main - INFO - main.py:288 - Creating table: projects
2025-08-02 20:46:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4706s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 20:46:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00186s] {}
2025-08-02 20:46:03 - app.main - INFO - main.py:290 - Table created: projects
2025-08-02 20:46:03 - app.main - INFO - main.py:288 - Creating table: environments
2025-08-02 20:46:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.642s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 20:46:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00134s] {}
2025-08-02 20:46:03 - app.main - INFO - main.py:290 - Table created: environments
2025-08-02 20:46:03 - app.main - INFO - main.py:288 - Creating table: test_cases
2025-08-02 20:46:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.8116s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00138s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.08521s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1693s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 20:46:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00161s] {}
2025-08-02 20:46:03 - app.main - INFO - main.py:290 - Table created: test_cases
2025-08-02 20:46:03 - app.main - INFO - main.py:288 - Creating table: test_steps
2025-08-02 20:46:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.234s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 20:46:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00138s] {}
2025-08-02 20:46:04 - app.main - INFO - main.py:290 - Table created: test_steps
2025-08-02 20:46:04 - app.main - INFO - main.py:288 - Creating table: test_plans
2025-08-02 20:46:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.402s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5903s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:46:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00134s] {}
2025-08-02 20:46:04 - app.main - INFO - main.py:290 - Table created: test_plans
2025-08-02 20:46:04 - app.main - INFO - main.py:288 - Creating table: test_plan_test_cases
2025-08-02 20:46:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.655s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:46:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00167s] {}
2025-08-02 20:46:04 - app.main - INFO - main.py:290 - Table created: test_plan_test_cases
2025-08-02 20:46:04 - app.main - INFO - main.py:288 - Creating table: test_executions
2025-08-02 20:46:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.828s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.018s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 20:46:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00245s] {}
2025-08-02 20:46:04 - app.main - INFO - main.py:290 - Table created: test_executions
2025-08-02 20:46:04 - app.main - INFO - main.py:288 - Creating table: comments
2025-08-02 20:46:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.084s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.272s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 20:46:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00176s] {}
2025-08-02 20:46:04 - app.main - INFO - main.py:290 - Table created: comments
2025-08-02 20:46:05 - app.main - INFO - main.py:288 - Creating table: team_members
2025-08-02 20:46:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.341s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:46:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00139s] {}
2025-08-02 20:46:05 - app.main - INFO - main.py:290 - Table created: team_members
2025-08-02 20:46:05 - app.main - INFO - main.py:288 - Creating table: attachments
2025-08-02 20:46:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.508s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 20:46:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00143s] {}
2025-08-02 20:46:05 - app.main - INFO - main.py:290 - Table created: attachments
2025-08-02 20:46:05 - app.main - INFO - main.py:288 - Creating table: activity_logs
2025-08-02 20:46:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.682s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:46:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00257s] {}
2025-08-02 20:46:05 - app.main - INFO - main.py:290 - Table created: activity_logs
2025-08-02 20:46:05 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 20:46:05 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x0000027546CA7EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 20:46:05 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x0000027546CA7EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 20:46:05 - app.main - INFO - main.py:295 - All database tables created successfully
2025-08-02 20:46:07 - root - INFO - main.py:71 - ================================================================================
2025-08-02 20:46:07 - root - INFO - main.py:72 - Application starting with enhanced logging (level: DEBUG)
2025-08-02 20:46:07 - root - INFO - main.py:73 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 20:46:07 - root - INFO - main.py:74 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 20:46:07 - root - INFO - main.py:75 - ================================================================================
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(created_test_cases, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(assigned_test_cases, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(activity_logs, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(comments, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(test_executions, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(created_projects, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(team_memberships, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(uploaded_attachments, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(email, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(full_name, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(hashed_password, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(role, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(is_active, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(created_at, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _configure_property(updated_at, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) Identified primary key columns: OrderedSet([Column('id', String(), table=<users>, primary_key=True, nullable=False, default=CallableColumnDefault(<function User.<lambda> at 0x00000212A37689A0>))])
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) constructed
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(creator, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(team, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(test_cases, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(test_plans, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(environments, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(name, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(description, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(created_by, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(team_id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(is_active, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(created_at, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _configure_property(updated_at, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) Identified primary key columns: OrderedSet([Column('id', String(), table=<projects>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Project.<lambda> at 0x00000212A376B920>))])
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) constructed
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(test_case, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(test_case_id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(step_number, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(description, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(expected_result, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(actual_result, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _configure_property(status, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_steps>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestStep.<lambda> at 0x00000212A37BD4E0>))])
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) constructed
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(project, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(creator, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(assignee, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(steps, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(test_executions, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(comments, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(test_plans, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(test_plan_test_cases, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(title, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(description, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(project_id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(test_type, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(priority, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(status, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(expected_result, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(created_by, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(assigned_to, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(tags, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(ai_generated, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(self_healing_enabled, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(prerequisites, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(test_data, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(automation_config, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(created_at, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _configure_property(updated_at, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_cases>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestCase.<lambda> at 0x00000212A37BE700>))])
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) constructed
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(project, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(test_executions, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(test_cases, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(test_plan_test_cases, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(name, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(description, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(project_id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(created_by, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(status, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(scheduled_start, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(scheduled_end, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(created_at, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _configure_property(updated_at, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_plans>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestPlan.<lambda> at 0x00000212A37E6020>))])
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) constructed
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(test_case, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(test_plan, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(executor, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(environment, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(test_case_id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(test_plan_id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(executed_by, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(environment_id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(status, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(started_at, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(completed_at, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(duration, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(result, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(logs, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(screenshots, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(error_message, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(ai_analysis, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(created_at, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _configure_property(updated_at, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_executions>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestExecution.<lambda> at 0x00000212A37E7F60>))])
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) constructed
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(test_case, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(user, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(parent_comment, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(replies, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(test_case_id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(user_id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(user_name, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(comment_type, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(content, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(parent_comment_id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(resolved, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(created_at, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _configure_property(updated_at, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) Identified primary key columns: OrderedSet([Column('id', String(), table=<comments>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Comment.<lambda> at 0x00000212A3806340>))])
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) constructed
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(members, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(projects, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(name, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(description, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(created_by, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(created_at, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _configure_property(updated_at, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) Identified primary key columns: OrderedSet([Column('id', String(), table=<teams>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Team.<lambda> at 0x00000212A3828360>))])
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) constructed
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(team, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(user, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(team_id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(user_id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(role, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _configure_property(joined_at, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) Identified primary key columns: OrderedSet([Column('id', String(), table=<team_members>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TeamMember.<lambda> at 0x00000212A3829620>))])
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) constructed
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(project, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(test_executions, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(name, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(description, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(base_url, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(project_id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(is_active, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(variables, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(created_at, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _configure_property(updated_at, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) Identified primary key columns: OrderedSet([Column('id', String(), table=<environments>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Environment.<lambda> at 0x00000212A382AC00>))])
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) constructed
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(uploader, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_name, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_path, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_size, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(file_type, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(entity_type, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(entity_id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(uploaded_by, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(description, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _configure_property(created_at, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) Identified primary key columns: OrderedSet([Column('id', String(), table=<attachments>, primary_key=True, nullable=False, default=CallableColumnDefault(<function Attachment.<lambda> at 0x00000212A385C2C0>))])
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) constructed
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_plan, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_case, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(creator, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_plan_id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(test_case_id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(order, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(is_mandatory, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(created_at, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _configure_property(created_by, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) Identified primary key columns: OrderedSet([Column('id', String(), table=<test_plan_test_cases>, primary_key=True, nullable=False, default=CallableColumnDefault(<function TestPlanTestCase.<lambda> at 0x00000212A385D580>))])
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) constructed
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user, _RelationshipDeclared)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user_id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user_name, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(action, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(target_type, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(target_id, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(target_name, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(details, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(ip_address, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(user_agent, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _configure_property(created_at, Column)
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) Identified primary key columns: OrderedSet([Column('id', String(), table=<activity_logs>, primary_key=True, nullable=False, default=CallableColumnDefault(<function ActivityLog.<lambda> at 0x00000212A385EFC0>))])
2025-08-02 20:46:07 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) constructed
2025-08-02 20:46:07 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-08-02 20:46:07 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-08-02 20:46:07 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-08-02 20:46:07 - passlib.registry - DEBUG - registry.py:296 - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
2025-08-02 20:46:07 - app.api.v1.routes.auth - DEBUG - auth.py:34 - Environment variables: {
  "ALLUSERSPROFILE": "C:\\ProgramData",
  "APPDATA": "C:\\Users\\kunal\\AppData\\Roaming",
  "C:\\USERS\\KUNAL\\DOWNLOADS\\EMERGENTINTELLITEST-MAIN": "C:\\Program Files\\nodejs\\",
  "CHROME_CRASHPAD_PIPE_NAME": "\\\\.\\pipe\\crashpad_11300_YGFLEAWXLMRVRBOK",
  "COMMONPROGRAMFILES": "C:\\Program Files\\Common Files",
  "COMMONPROGRAMFILES(X86)": "C:\\Program Files (x86)\\Common Files",
  "COMMONPROGRAMW6432": "C:\\Program Files\\Common Files",
  "COMPUTERNAME": "KUNALDELL",
  "COMSPEC": "C:\\Windows\\system32\\cmd.exe",
  "DRIVERDATA": "C:\\Windows\\System32\\Drivers\\DriverData",
  "EFC_5864_1592913036": "1",
  "HOMEDRIVE": "C:",
  "HOMEPATH": "\\Users\\kunal",
  "LOCALAPPDATA": "C:\\Users\\kunal\\AppData\\Local",
  "LOGONSERVER": "\\\\KUNALDELL",
  "LOG_LEVEL": "DEBUG",
  "NUMBER_OF_PROCESSORS": "22",
  "ONEDRIVE": "C:\\Users\\kunal\\OneDrive",
  "ONEDRIVECONSUMER": "C:\\Users\\kunal\\OneDrive",
  "ORIGINAL_XDG_CURRENT_DESKTOP": "undefined",
  "OS": "Windows_NT",
  "PATH": "C:\\Program Files\\Python312\\Scripts\\;C:\\Program Files\\Python312\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files\\Git\\cmd;c:\\Users\\kunal\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Program Files\\nodejs\\;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\kunal\\AppData\\Local\\Programs\\Windsurf\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WinGet\\Links;C:\\Program Files\\nodejs;C:\\Users\\kunal\\AppData\\Roaming\\npm;C:\\Program Files\\Git\\bin;C:\\Users\\kunal\\.deno\\bin;c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\scripts\\noConfigScripts",
  "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL",
  "POSTGRESQL": "C:\\Program Files\\PostgreSQL\\17\\bin\\bin",
  "PROCESSOR_ARCHITECTURE": "AMD64",
  "PROCESSOR_IDENTIFIER": "Intel64 Family 6 Model 170 Stepping 4, GenuineIntel",
  "PROCESSOR_LEVEL": "6",
  "PROCESSOR_REVISION": "aa04",
  "PROGRAMDATA": "C:\\ProgramData",
  "PROGRAMFILES": "C:\\Program Files",
  "PROGRAMFILES(X86)": "C:\\Program Files (x86)",
  "PROGRAMW6432": "C:\\Program Files",
  "PSMODULEPATH": "C:\\Users\\kunal\\OneDrive\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules",
  "PUBLIC": "C:\\Users\\Public",
  "PYTHONUNBUFFERED": "1",
  "SESSIONNAME": "Console",
  "SYSTEMDRIVE": "C:",
  "SYSTEMROOT": "C:\\Windows",
  "TEMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "TMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "USERDOMAIN": "KUNALDELL",
  "USERDOMAIN_ROAMINGPROFILE": "KUNALDELL",
  "USERNAME": "kunal",
  "USERPROFILE": "C:\\Users\\kunal",
  "WINDIR": "C:\\Windows",
  "ZES_ENABLE_SYSMAN": "1",
  "PAGER": "cat",
  "TERM_PROGRAM": "vscode",
  "TERM_PROGRAM_VERSION": "1.99.3",
  "LANG": "en_US.UTF-8",
  "COLORTERM": "truecolor",
  "VSCODE_GIT_IPC_HANDLE": "\\\\.\\pipe\\vscode-git-fccd44132c-sock",
  "PYDEVD_DISABLE_FILE_VALIDATION": "1",
  "VSCODE_DEBUGPY_ADAPTER_ENDPOINTS": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\.noConfigDebugAdapterEndpoints\\endpoint-875e116b470e769c.txt",
  "BUNDLED_DEBUGPY_PATH": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\libs\\debugpy",
  "VSCODE_INJECTION": "1",
  "PROJECT_NAME": "IntelliTest AI Automation Platform",
  "ACCESS_TOKEN_EXPIRE_MINUTES": "11520",
  "SERVER_NAME": "localhost",
  "SERVER_HOST": "http://localhost:8001",
  "DATABASE_URL": "postgresql://postgres.lflecyuvttemfoyixngi:Ayeshaayesha121@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres",
  "SMTP_TLS": "true",
  "SMTP_PORT": "587",
  "SMTP_HOST": "smtp.gmail.com",
  "SMTP_USER": "your-email@gmail.com",
  "EMAILS_FROM_EMAIL": "your-email@gmail.com",
  "EMAILS_FROM_NAME": "IntelliTest Platform",
  "OPENAI_API_KEY": "your-openai-api-key-here",
  "AWS_ACCESS_KEY_ID": "your-aws-access-key",
  "AWS_DEFAULT_REGION": "us-east-1",
  "UPLOAD_DIR": "uploads",
  "MAX_UPLOAD_SIZE": "10485760",
  "ALLOWED_FILE_TYPES": "jpg,jpeg,png,gif,pdf,txt,csv,json",
  "TESTING": "false"
}
2025-08-02 20:46:07 - app.api.v1.routes.auth - DEBUG - auth.py:45 - Database URL: postgresql://postgres.lflecyuvttemfoyixngi:*****@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres
2025-08-02 20:46:08 - app.main - INFO - main.py:1355 - Initializing API routers...
2025-08-02 20:46:08 - app.main - INFO - main.py:1367 - API routers initialized successfully
2025-08-02 20:46:08 - app.main - INFO - main.py:229 - Starting database initialization...
2025-08-02 20:46:09 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x00000212A4A37EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 20:46:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 20:46:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:46:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 20:46:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:46:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 20:46:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:46:09 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x00000212A4A37EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 20:46:09 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x00000212A4A37EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 20:46:09 - app.main - INFO - main.py:259 - Disabling foreign key constraints...
2025-08-02 20:46:09 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 20:46:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 20:46:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00134s] {}
2025-08-02 20:46:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 20:46:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00131s] {}
2025-08-02 20:46:10 - app.main - INFO - main.py:274 - Dropping existing tables...
2025-08-02 20:46:10 - app.main - INFO - main.py:277 - Dropping table: activity_logs
2025-08-02 20:46:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 20:46:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00087s] {}
2025-08-02 20:46:10 - app.main - INFO - main.py:279 - Dropped table: activity_logs
2025-08-02 20:46:10 - app.main - INFO - main.py:277 - Dropping table: attachments
2025-08-02 20:46:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 20:46:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00072s] {}
2025-08-02 20:46:10 - app.main - INFO - main.py:279 - Dropped table: attachments
2025-08-02 20:46:10 - app.main - INFO - main.py:277 - Dropping table: comments
2025-08-02 20:46:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 20:46:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00090s] {}
2025-08-02 20:46:10 - app.main - INFO - main.py:279 - Dropped table: comments
2025-08-02 20:46:10 - app.main - INFO - main.py:277 - Dropping table: environments
2025-08-02 20:46:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 20:46:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00071s] {}
2025-08-02 20:46:10 - app.main - INFO - main.py:279 - Dropped table: environments
2025-08-02 20:46:10 - app.main - INFO - main.py:277 - Dropping table: projects
2025-08-02 20:46:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 20:46:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00074s] {}
2025-08-02 20:46:10 - app.main - INFO - main.py:279 - Dropped table: projects
2025-08-02 20:46:10 - app.main - INFO - main.py:277 - Dropping table: team_members
2025-08-02 20:46:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 20:46:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00088s] {}
2025-08-02 20:46:11 - app.main - INFO - main.py:279 - Dropped table: team_members
2025-08-02 20:46:11 - app.main - INFO - main.py:277 - Dropping table: teams
2025-08-02 20:46:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 20:46:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00129s] {}
2025-08-02 20:46:11 - app.main - INFO - main.py:279 - Dropped table: teams
2025-08-02 20:46:11 - app.main - INFO - main.py:277 - Dropping table: test_cases
2025-08-02 20:46:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 20:46:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00083s] {}
2025-08-02 20:46:11 - app.main - INFO - main.py:279 - Dropped table: test_cases
2025-08-02 20:46:11 - app.main - INFO - main.py:277 - Dropping table: test_executions
2025-08-02 20:46:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 20:46:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00467s] {}
2025-08-02 20:46:11 - app.main - INFO - main.py:279 - Dropped table: test_executions
2025-08-02 20:46:11 - app.main - INFO - main.py:277 - Dropping table: test_plan_test_cases
2025-08-02 20:46:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 20:46:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00078s] {}
2025-08-02 20:46:11 - app.main - INFO - main.py:279 - Dropped table: test_plan_test_cases
2025-08-02 20:46:11 - app.main - INFO - main.py:277 - Dropping table: test_plans
2025-08-02 20:46:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 20:46:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00081s] {}
2025-08-02 20:46:11 - app.main - INFO - main.py:279 - Dropped table: test_plans
2025-08-02 20:46:11 - app.main - INFO - main.py:277 - Dropping table: test_steps
2025-08-02 20:46:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 20:46:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00104s] {}
2025-08-02 20:46:11 - app.main - INFO - main.py:279 - Dropped table: test_steps
2025-08-02 20:46:11 - app.main - INFO - main.py:277 - Dropping table: users
2025-08-02 20:46:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 20:46:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00100s] {}
2025-08-02 20:46:11 - app.main - INFO - main.py:279 - Dropped table: users
2025-08-02 20:46:11 - app.main - INFO - main.py:285 - Creating database tables in order...
2025-08-02 20:46:11 - app.main - INFO - main.py:288 - Creating table: users
2025-08-02 20:46:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00120s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 20:46:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00160s] {}
2025-08-02 20:46:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 20:46:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00739s] {}
2025-08-02 20:46:11 - app.main - INFO - main.py:290 - Table created: users
2025-08-02 20:46:11 - app.main - INFO - main.py:288 - Creating table: teams
2025-08-02 20:46:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2663s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:46:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00130s] {}
2025-08-02 20:46:12 - app.main - INFO - main.py:290 - Table created: teams
2025-08-02 20:46:12 - app.main - INFO - main.py:288 - Creating table: projects
2025-08-02 20:46:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4357s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 20:46:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00337s] {}
2025-08-02 20:46:12 - app.main - INFO - main.py:290 - Table created: projects
2025-08-02 20:46:12 - app.main - INFO - main.py:288 - Creating table: environments
2025-08-02 20:46:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6155s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 20:46:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00142s] {}
2025-08-02 20:46:12 - app.main - INFO - main.py:290 - Table created: environments
2025-08-02 20:46:12 - app.main - INFO - main.py:288 - Creating table: test_cases
2025-08-02 20:46:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7834s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00203s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.0834s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1654s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 20:46:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.03645s] {}
2025-08-02 20:46:12 - app.main - INFO - main.py:290 - Table created: test_cases
2025-08-02 20:46:12 - app.main - INFO - main.py:288 - Creating table: test_steps
2025-08-02 20:46:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.232s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 20:46:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00150s] {}
2025-08-02 20:46:13 - app.main - INFO - main.py:290 - Table created: test_steps
2025-08-02 20:46:13 - app.main - INFO - main.py:288 - Creating table: test_plans
2025-08-02 20:46:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.398s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6143s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:46:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00120s] {}
2025-08-02 20:46:13 - app.main - INFO - main.py:290 - Table created: test_plans
2025-08-02 20:46:13 - app.main - INFO - main.py:288 - Creating table: test_plan_test_cases
2025-08-02 20:46:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.644s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:46:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00464s] {}
2025-08-02 20:46:13 - app.main - INFO - main.py:290 - Table created: test_plan_test_cases
2025-08-02 20:46:13 - app.main - INFO - main.py:288 - Creating table: test_executions
2025-08-02 20:46:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.816s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.033s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 20:46:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00164s] {}
2025-08-02 20:46:13 - app.main - INFO - main.py:290 - Table created: test_executions
2025-08-02 20:46:13 - app.main - INFO - main.py:288 - Creating table: comments
2025-08-02 20:46:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.065s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.281s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 20:46:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00125s] {}
2025-08-02 20:46:13 - app.main - INFO - main.py:290 - Table created: comments
2025-08-02 20:46:13 - app.main - INFO - main.py:288 - Creating table: team_members
2025-08-02 20:46:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.317s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:46:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00118s] {}
2025-08-02 20:46:14 - app.main - INFO - main.py:290 - Table created: team_members
2025-08-02 20:46:14 - app.main - INFO - main.py:288 - Creating table: attachments
2025-08-02 20:46:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.482s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 20:46:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00109s] {}
2025-08-02 20:46:14 - app.main - INFO - main.py:290 - Table created: attachments
2025-08-02 20:46:14 - app.main - INFO - main.py:288 - Creating table: activity_logs
2025-08-02 20:46:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.649s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:46:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00142s] {}
2025-08-02 20:46:14 - app.main - INFO - main.py:290 - Table created: activity_logs
2025-08-02 20:46:14 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 20:46:14 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x00000212A4A37EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 20:46:14 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x00000212A4A37EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 20:46:14 - app.main - INFO - main.py:295 - All database tables created successfully
2025-08-02 20:46:19 - app.main - INFO - main.py:303 - Application shutdown
2025-08-02 20:46:26 - app.main - INFO - main.py:303 - Application shutdown
2025-08-02 20:46:28 - root - INFO - main.py:87 - ================================================================================
2025-08-02 20:46:28 - root - INFO - main.py:88 - Application starting with enhanced logging (level: INFO)
2025-08-02 20:46:28 - root - INFO - main.py:89 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 20:46:28 - root - INFO - main.py:90 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 20:46:28 - root - INFO - main.py:91 - ================================================================================
2025-08-02 20:46:29 - app.main - INFO - main.py:1371 - Initializing API routers...
2025-08-02 20:46:29 - app.main - INFO - main.py:1383 - API routers initialized successfully
2025-08-02 20:46:29 - app.main - INFO - main.py:245 - Starting database initialization...
2025-08-02 20:46:30 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x000001BF4A337EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 20:46:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 20:46:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:46:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 20:46:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:46:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 20:46:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:46:31 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x000001BF4A337EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 20:46:31 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x000001BF4A337EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 20:46:31 - app.main - INFO - main.py:275 - Disabling foreign key constraints...
2025-08-02 20:46:31 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 20:46:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 20:46:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00165s] {}
2025-08-02 20:46:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 20:46:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00240s] {}
2025-08-02 20:46:31 - app.main - INFO - main.py:290 - Dropping existing tables...
2025-08-02 20:46:31 - app.main - INFO - main.py:293 - Dropping table: activity_logs
2025-08-02 20:46:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 20:46:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00121s] {}
2025-08-02 20:46:31 - app.main - INFO - main.py:295 - Dropped table: activity_logs
2025-08-02 20:46:31 - app.main - INFO - main.py:293 - Dropping table: attachments
2025-08-02 20:46:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 20:46:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00071s] {}
2025-08-02 20:46:31 - app.main - INFO - main.py:295 - Dropped table: attachments
2025-08-02 20:46:31 - app.main - INFO - main.py:293 - Dropping table: comments
2025-08-02 20:46:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 20:46:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00077s] {}
2025-08-02 20:46:31 - app.main - INFO - main.py:295 - Dropped table: comments
2025-08-02 20:46:31 - app.main - INFO - main.py:293 - Dropping table: environments
2025-08-02 20:46:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 20:46:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00061s] {}
2025-08-02 20:46:31 - app.main - INFO - main.py:295 - Dropped table: environments
2025-08-02 20:46:31 - app.main - INFO - main.py:293 - Dropping table: projects
2025-08-02 20:46:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 20:46:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00130s] {}
2025-08-02 20:46:31 - app.main - INFO - main.py:295 - Dropped table: projects
2025-08-02 20:46:31 - app.main - INFO - main.py:293 - Dropping table: team_members
2025-08-02 20:46:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 20:46:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00079s] {}
2025-08-02 20:46:31 - app.main - INFO - main.py:295 - Dropped table: team_members
2025-08-02 20:46:31 - app.main - INFO - main.py:293 - Dropping table: teams
2025-08-02 20:46:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 20:46:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00078s] {}
2025-08-02 20:46:31 - app.main - INFO - main.py:295 - Dropped table: teams
2025-08-02 20:46:31 - app.main - INFO - main.py:293 - Dropping table: test_cases
2025-08-02 20:46:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 20:46:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00119s] {}
2025-08-02 20:46:31 - app.main - INFO - main.py:295 - Dropped table: test_cases
2025-08-02 20:46:31 - app.main - INFO - main.py:293 - Dropping table: test_executions
2025-08-02 20:46:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 20:46:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00091s] {}
2025-08-02 20:46:32 - app.main - INFO - main.py:295 - Dropped table: test_executions
2025-08-02 20:46:32 - app.main - INFO - main.py:293 - Dropping table: test_plan_test_cases
2025-08-02 20:46:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 20:46:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00096s] {}
2025-08-02 20:46:32 - app.main - INFO - main.py:295 - Dropped table: test_plan_test_cases
2025-08-02 20:46:32 - app.main - INFO - main.py:293 - Dropping table: test_plans
2025-08-02 20:46:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 20:46:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00066s] {}
2025-08-02 20:46:32 - app.main - INFO - main.py:295 - Dropped table: test_plans
2025-08-02 20:46:32 - app.main - INFO - main.py:293 - Dropping table: test_steps
2025-08-02 20:46:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 20:46:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00076s] {}
2025-08-02 20:46:32 - app.main - INFO - main.py:295 - Dropped table: test_steps
2025-08-02 20:46:32 - app.main - INFO - main.py:293 - Dropping table: users
2025-08-02 20:46:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 20:46:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00089s] {}
2025-08-02 20:46:32 - app.main - INFO - main.py:295 - Dropped table: users
2025-08-02 20:46:32 - app.main - INFO - main.py:301 - Creating database tables in order...
2025-08-02 20:46:32 - app.main - INFO - main.py:304 - Creating table: users
2025-08-02 20:46:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00284s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 20:46:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00518s] {}
2025-08-02 20:46:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 20:46:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00213s] {}
2025-08-02 20:46:32 - app.main - INFO - main.py:306 - Table created: users
2025-08-02 20:46:32 - app.main - INFO - main.py:304 - Creating table: teams
2025-08-02 20:46:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.253s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:46:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00214s] {}
2025-08-02 20:46:32 - app.main - INFO - main.py:306 - Table created: teams
2025-08-02 20:46:32 - app.main - INFO - main.py:304 - Creating table: projects
2025-08-02 20:46:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.416s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 20:46:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00097s] {}
2025-08-02 20:46:32 - app.main - INFO - main.py:306 - Table created: projects
2025-08-02 20:46:32 - app.main - INFO - main.py:304 - Creating table: environments
2025-08-02 20:46:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5795s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 20:46:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00084s] {}
2025-08-02 20:46:33 - app.main - INFO - main.py:306 - Table created: environments
2025-08-02 20:46:33 - app.main - INFO - main.py:304 - Creating table: test_cases
2025-08-02 20:46:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7415s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00151s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.08295s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1637s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 20:46:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.01539s] {}
2025-08-02 20:46:33 - app.main - INFO - main.py:306 - Table created: test_cases
2025-08-02 20:46:33 - app.main - INFO - main.py:304 - Creating table: test_steps
2025-08-02 20:46:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.164s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 20:46:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00279s] {}
2025-08-02 20:46:33 - app.main - INFO - main.py:306 - Table created: test_steps
2025-08-02 20:46:33 - app.main - INFO - main.py:304 - Creating table: test_plans
2025-08-02 20:46:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.337s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6142s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:46:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00495s] {}
2025-08-02 20:46:33 - app.main - INFO - main.py:306 - Table created: test_plans
2025-08-02 20:46:33 - app.main - INFO - main.py:304 - Creating table: test_plan_test_cases
2025-08-02 20:46:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.604s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:46:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00135s] {}
2025-08-02 20:46:34 - app.main - INFO - main.py:306 - Table created: test_plan_test_cases
2025-08-02 20:46:34 - app.main - INFO - main.py:304 - Creating table: test_executions
2025-08-02 20:46:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.77s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.032s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 20:46:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00156s] {}
2025-08-02 20:46:34 - app.main - INFO - main.py:306 - Table created: test_executions
2025-08-02 20:46:34 - app.main - INFO - main.py:304 - Creating table: comments
2025-08-02 20:46:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.026s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.289s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 20:46:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00160s] {}
2025-08-02 20:46:34 - app.main - INFO - main.py:306 - Table created: comments
2025-08-02 20:46:34 - app.main - INFO - main.py:304 - Creating table: team_members
2025-08-02 20:46:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.286s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:46:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00131s] {}
2025-08-02 20:46:34 - app.main - INFO - main.py:306 - Table created: team_members
2025-08-02 20:46:34 - app.main - INFO - main.py:304 - Creating table: attachments
2025-08-02 20:46:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.463s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 20:46:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00147s] {}
2025-08-02 20:46:35 - app.main - INFO - main.py:306 - Table created: attachments
2025-08-02 20:46:35 - app.main - INFO - main.py:304 - Creating table: activity_logs
2025-08-02 20:46:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.627s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:46:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00205s] {}
2025-08-02 20:46:35 - app.main - INFO - main.py:306 - Table created: activity_logs
2025-08-02 20:46:35 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 20:46:35 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x000001BF4A337EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 20:46:35 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x000001BF4A337EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 20:46:35 - app.main - INFO - main.py:311 - All database tables created successfully
2025-08-02 20:46:36 - root - INFO - main.py:87 - ================================================================================
2025-08-02 20:46:36 - root - INFO - main.py:88 - Application starting with enhanced logging (level: DEBUG)
2025-08-02 20:46:36 - root - INFO - main.py:89 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 20:46:36 - root - INFO - main.py:90 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 20:46:36 - root - INFO - main.py:91 - ================================================================================
2025-08-02 20:46:36 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-08-02 20:46:36 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-08-02 20:46:36 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-08-02 20:46:36 - passlib.registry - DEBUG - registry.py:296 - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
2025-08-02 20:46:36 - app.api.v1.routes.auth - DEBUG - auth.py:34 - Environment variables: {
  "ALLUSERSPROFILE": "C:\\ProgramData",
  "APPDATA": "C:\\Users\\kunal\\AppData\\Roaming",
  "C:\\USERS\\KUNAL\\DOWNLOADS\\EMERGENTINTELLITEST-MAIN": "C:\\Program Files\\nodejs\\",
  "CHROME_CRASHPAD_PIPE_NAME": "\\\\.\\pipe\\crashpad_11300_YGFLEAWXLMRVRBOK",
  "COMMONPROGRAMFILES": "C:\\Program Files\\Common Files",
  "COMMONPROGRAMFILES(X86)": "C:\\Program Files (x86)\\Common Files",
  "COMMONPROGRAMW6432": "C:\\Program Files\\Common Files",
  "COMPUTERNAME": "KUNALDELL",
  "COMSPEC": "C:\\Windows\\system32\\cmd.exe",
  "DRIVERDATA": "C:\\Windows\\System32\\Drivers\\DriverData",
  "EFC_5864_1592913036": "1",
  "HOMEDRIVE": "C:",
  "HOMEPATH": "\\Users\\kunal",
  "LOCALAPPDATA": "C:\\Users\\kunal\\AppData\\Local",
  "LOGONSERVER": "\\\\KUNALDELL",
  "LOG_LEVEL": "DEBUG",
  "NUMBER_OF_PROCESSORS": "22",
  "ONEDRIVE": "C:\\Users\\kunal\\OneDrive",
  "ONEDRIVECONSUMER": "C:\\Users\\kunal\\OneDrive",
  "ORIGINAL_XDG_CURRENT_DESKTOP": "undefined",
  "OS": "Windows_NT",
  "PATH": "C:\\Program Files\\Python312\\Scripts\\;C:\\Program Files\\Python312\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files\\Git\\cmd;c:\\Users\\kunal\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Program Files\\nodejs\\;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\kunal\\AppData\\Local\\Programs\\Windsurf\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WinGet\\Links;C:\\Program Files\\nodejs;C:\\Users\\kunal\\AppData\\Roaming\\npm;C:\\Program Files\\Git\\bin;C:\\Users\\kunal\\.deno\\bin;c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\scripts\\noConfigScripts",
  "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL",
  "POSTGRESQL": "C:\\Program Files\\PostgreSQL\\17\\bin\\bin",
  "PROCESSOR_ARCHITECTURE": "AMD64",
  "PROCESSOR_IDENTIFIER": "Intel64 Family 6 Model 170 Stepping 4, GenuineIntel",
  "PROCESSOR_LEVEL": "6",
  "PROCESSOR_REVISION": "aa04",
  "PROGRAMDATA": "C:\\ProgramData",
  "PROGRAMFILES": "C:\\Program Files",
  "PROGRAMFILES(X86)": "C:\\Program Files (x86)",
  "PROGRAMW6432": "C:\\Program Files",
  "PSMODULEPATH": "C:\\Users\\kunal\\OneDrive\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules",
  "PUBLIC": "C:\\Users\\Public",
  "PYTHONUNBUFFERED": "1",
  "SESSIONNAME": "Console",
  "SYSTEMDRIVE": "C:",
  "SYSTEMROOT": "C:\\Windows",
  "TEMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "TMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "USERDOMAIN": "KUNALDELL",
  "USERDOMAIN_ROAMINGPROFILE": "KUNALDELL",
  "USERNAME": "kunal",
  "USERPROFILE": "C:\\Users\\kunal",
  "WINDIR": "C:\\Windows",
  "ZES_ENABLE_SYSMAN": "1",
  "PAGER": "cat",
  "TERM_PROGRAM": "vscode",
  "TERM_PROGRAM_VERSION": "1.99.3",
  "LANG": "en_US.UTF-8",
  "COLORTERM": "truecolor",
  "VSCODE_GIT_IPC_HANDLE": "\\\\.\\pipe\\vscode-git-fccd44132c-sock",
  "PYDEVD_DISABLE_FILE_VALIDATION": "1",
  "VSCODE_DEBUGPY_ADAPTER_ENDPOINTS": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\.noConfigDebugAdapterEndpoints\\endpoint-875e116b470e769c.txt",
  "BUNDLED_DEBUGPY_PATH": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\libs\\debugpy",
  "VSCODE_INJECTION": "1",
  "PROJECT_NAME": "IntelliTest AI Automation Platform",
  "ACCESS_TOKEN_EXPIRE_MINUTES": "11520",
  "SERVER_NAME": "localhost",
  "SERVER_HOST": "http://localhost:8001",
  "DATABASE_URL": "postgresql://postgres.lflecyuvttemfoyixngi:Ayeshaayesha121@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres",
  "SMTP_TLS": "true",
  "SMTP_PORT": "587",
  "SMTP_HOST": "smtp.gmail.com",
  "SMTP_USER": "your-email@gmail.com",
  "EMAILS_FROM_EMAIL": "your-email@gmail.com",
  "EMAILS_FROM_NAME": "IntelliTest Platform",
  "OPENAI_API_KEY": "your-openai-api-key-here",
  "AWS_ACCESS_KEY_ID": "your-aws-access-key",
  "AWS_DEFAULT_REGION": "us-east-1",
  "UPLOAD_DIR": "uploads",
  "MAX_UPLOAD_SIZE": "10485760",
  "ALLOWED_FILE_TYPES": "jpg,jpeg,png,gif,pdf,txt,csv,json",
  "TESTING": "false"
}
2025-08-02 20:46:36 - app.api.v1.routes.auth - DEBUG - auth.py:45 - Database URL: postgresql://postgres.lflecyuvttemfoyixngi:*****@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres
2025-08-02 20:46:38 - app.main - INFO - main.py:1371 - Initializing API routers...
2025-08-02 20:46:38 - app.main - INFO - main.py:1383 - API routers initialized successfully
2025-08-02 20:46:38 - app.main - INFO - main.py:245 - Starting database initialization...
2025-08-02 20:46:38 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x0000027148727BC0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 20:46:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 20:46:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:46:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 20:46:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:46:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 20:46:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:46:39 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x0000027148727BC0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 20:46:39 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x0000027148727BC0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 20:46:39 - app.main - INFO - main.py:275 - Disabling foreign key constraints...
2025-08-02 20:46:39 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 20:46:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 20:46:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00146s] {}
2025-08-02 20:46:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 20:46:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00118s] {}
2025-08-02 20:46:39 - app.main - INFO - main.py:290 - Dropping existing tables...
2025-08-02 20:46:39 - app.main - INFO - main.py:293 - Dropping table: activity_logs
2025-08-02 20:46:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 20:46:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00082s] {}
2025-08-02 20:46:39 - app.main - INFO - main.py:295 - Dropped table: activity_logs
2025-08-02 20:46:39 - app.main - INFO - main.py:293 - Dropping table: attachments
2025-08-02 20:46:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 20:46:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00082s] {}
2025-08-02 20:46:39 - app.main - INFO - main.py:295 - Dropped table: attachments
2025-08-02 20:46:39 - app.main - INFO - main.py:293 - Dropping table: comments
2025-08-02 20:46:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 20:46:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00084s] {}
2025-08-02 20:46:40 - app.main - INFO - main.py:295 - Dropped table: comments
2025-08-02 20:46:40 - app.main - INFO - main.py:293 - Dropping table: environments
2025-08-02 20:46:40 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 20:46:40 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00096s] {}
2025-08-02 20:46:40 - app.main - INFO - main.py:295 - Dropped table: environments
2025-08-02 20:46:40 - app.main - INFO - main.py:293 - Dropping table: projects
2025-08-02 20:46:40 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 20:46:40 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00153s] {}
2025-08-02 20:46:40 - app.main - INFO - main.py:295 - Dropped table: projects
2025-08-02 20:46:40 - app.main - INFO - main.py:293 - Dropping table: team_members
2025-08-02 20:46:40 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 20:46:40 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00065s] {}
2025-08-02 20:46:40 - app.main - INFO - main.py:295 - Dropped table: team_members
2025-08-02 20:46:40 - app.main - INFO - main.py:293 - Dropping table: teams
2025-08-02 20:46:40 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 20:46:40 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00083s] {}
2025-08-02 20:46:40 - app.main - INFO - main.py:295 - Dropped table: teams
2025-08-02 20:46:40 - app.main - INFO - main.py:293 - Dropping table: test_cases
2025-08-02 20:46:40 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 20:46:40 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00078s] {}
2025-08-02 20:46:40 - app.main - INFO - main.py:295 - Dropped table: test_cases
2025-08-02 20:46:40 - app.main - INFO - main.py:293 - Dropping table: test_executions
2025-08-02 20:46:40 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 20:46:40 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00065s] {}
2025-08-02 20:46:40 - app.main - INFO - main.py:295 - Dropped table: test_executions
2025-08-02 20:46:40 - app.main - INFO - main.py:293 - Dropping table: test_plan_test_cases
2025-08-02 20:46:40 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 20:46:40 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00089s] {}
2025-08-02 20:46:40 - app.main - INFO - main.py:295 - Dropped table: test_plan_test_cases
2025-08-02 20:46:40 - app.main - INFO - main.py:293 - Dropping table: test_plans
2025-08-02 20:46:40 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 20:46:40 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00061s] {}
2025-08-02 20:46:41 - app.main - INFO - main.py:295 - Dropped table: test_plans
2025-08-02 20:46:41 - app.main - INFO - main.py:293 - Dropping table: test_steps
2025-08-02 20:46:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 20:46:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00052s] {}
2025-08-02 20:46:41 - app.main - INFO - main.py:295 - Dropped table: test_steps
2025-08-02 20:46:41 - app.main - INFO - main.py:293 - Dropping table: users
2025-08-02 20:46:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 20:46:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00083s] {}
2025-08-02 20:46:41 - app.main - INFO - main.py:295 - Dropped table: users
2025-08-02 20:46:41 - app.main - INFO - main.py:301 - Creating database tables in order...
2025-08-02 20:46:41 - app.main - INFO - main.py:304 - Creating table: users
2025-08-02 20:46:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00107s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 20:46:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00149s] {}
2025-08-02 20:46:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 20:46:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00186s] {}
2025-08-02 20:46:41 - app.main - INFO - main.py:306 - Table created: users
2025-08-02 20:46:41 - app.main - INFO - main.py:304 - Creating table: teams
2025-08-02 20:46:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2963s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:46:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00998s] {}
2025-08-02 20:46:41 - app.main - INFO - main.py:306 - Table created: teams
2025-08-02 20:46:41 - app.main - INFO - main.py:304 - Creating table: projects
2025-08-02 20:46:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4949s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 20:46:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00108s] {}
2025-08-02 20:46:41 - app.main - INFO - main.py:306 - Table created: projects
2025-08-02 20:46:41 - app.main - INFO - main.py:304 - Creating table: environments
2025-08-02 20:46:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.683s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 20:46:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00144s] {}
2025-08-02 20:46:42 - app.main - INFO - main.py:306 - Table created: environments
2025-08-02 20:46:42 - app.main - INFO - main.py:304 - Creating table: test_cases
2025-08-02 20:46:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.8698s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00129s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.09458s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1876s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 20:46:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00181s] {}
2025-08-02 20:46:42 - app.main - INFO - main.py:306 - Table created: test_cases
2025-08-02 20:46:42 - app.main - INFO - main.py:304 - Creating table: test_steps
2025-08-02 20:46:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.343s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 20:46:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00131s] {}
2025-08-02 20:46:42 - app.main - INFO - main.py:306 - Table created: test_steps
2025-08-02 20:46:42 - app.main - INFO - main.py:304 - Creating table: test_plans
2025-08-02 20:46:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.533s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7061s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:46:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00150s] {}
2025-08-02 20:46:43 - app.main - INFO - main.py:306 - Table created: test_plans
2025-08-02 20:46:43 - app.main - INFO - main.py:304 - Creating table: test_plan_test_cases
2025-08-02 20:46:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.865s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:46:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00126s] {}
2025-08-02 20:46:43 - app.main - INFO - main.py:306 - Table created: test_plan_test_cases
2025-08-02 20:46:43 - app.main - INFO - main.py:304 - Creating table: test_executions
2025-08-02 20:46:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.052s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.222s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 20:46:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00155s] {}
2025-08-02 20:46:43 - app.main - INFO - main.py:306 - Table created: test_executions
2025-08-02 20:46:43 - app.main - INFO - main.py:304 - Creating table: comments
2025-08-02 20:46:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.377s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.507s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 20:46:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00105s] {}
2025-08-02 20:46:43 - app.main - INFO - main.py:306 - Table created: comments
2025-08-02 20:46:43 - app.main - INFO - main.py:304 - Creating table: team_members
2025-08-02 20:46:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.661s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:46:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00111s] {}
2025-08-02 20:46:44 - app.main - INFO - main.py:306 - Table created: team_members
2025-08-02 20:46:44 - app.main - INFO - main.py:304 - Creating table: attachments
2025-08-02 20:46:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.849s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 20:46:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00104s] {}
2025-08-02 20:46:44 - app.main - INFO - main.py:306 - Table created: attachments
2025-08-02 20:46:44 - app.main - INFO - main.py:304 - Creating table: activity_logs
2025-08-02 20:46:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 3.041s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:46:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00175s] {}
2025-08-02 20:46:44 - app.main - INFO - main.py:306 - Table created: activity_logs
2025-08-02 20:46:44 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 20:46:44 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x0000027148727BC0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 20:46:44 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x0000027148727BC0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 20:46:44 - app.main - INFO - main.py:311 - All database tables created successfully
2025-08-02 20:46:46 - root - INFO - main.py:87 - ================================================================================
2025-08-02 20:46:46 - root - INFO - main.py:88 - Application starting with enhanced logging (level: DEBUG)
2025-08-02 20:46:46 - root - INFO - main.py:89 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 20:46:46 - root - INFO - main.py:90 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 20:46:46 - root - INFO - main.py:91 - ================================================================================
2025-08-02 20:46:46 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-08-02 20:46:46 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-08-02 20:46:46 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-08-02 20:46:46 - passlib.registry - DEBUG - registry.py:296 - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
2025-08-02 20:46:46 - app.api.v1.routes.auth - DEBUG - auth.py:34 - Environment variables: {
  "ALLUSERSPROFILE": "C:\\ProgramData",
  "APPDATA": "C:\\Users\\kunal\\AppData\\Roaming",
  "C:\\USERS\\KUNAL\\DOWNLOADS\\EMERGENTINTELLITEST-MAIN": "C:\\Program Files\\nodejs\\",
  "CHROME_CRASHPAD_PIPE_NAME": "\\\\.\\pipe\\crashpad_11300_YGFLEAWXLMRVRBOK",
  "COMMONPROGRAMFILES": "C:\\Program Files\\Common Files",
  "COMMONPROGRAMFILES(X86)": "C:\\Program Files (x86)\\Common Files",
  "COMMONPROGRAMW6432": "C:\\Program Files\\Common Files",
  "COMPUTERNAME": "KUNALDELL",
  "COMSPEC": "C:\\Windows\\system32\\cmd.exe",
  "DRIVERDATA": "C:\\Windows\\System32\\Drivers\\DriverData",
  "EFC_5864_1592913036": "1",
  "HOMEDRIVE": "C:",
  "HOMEPATH": "\\Users\\kunal",
  "LOCALAPPDATA": "C:\\Users\\kunal\\AppData\\Local",
  "LOGONSERVER": "\\\\KUNALDELL",
  "LOG_LEVEL": "DEBUG",
  "NUMBER_OF_PROCESSORS": "22",
  "ONEDRIVE": "C:\\Users\\kunal\\OneDrive",
  "ONEDRIVECONSUMER": "C:\\Users\\kunal\\OneDrive",
  "ORIGINAL_XDG_CURRENT_DESKTOP": "undefined",
  "OS": "Windows_NT",
  "PATH": "C:\\Program Files\\Python312\\Scripts\\;C:\\Program Files\\Python312\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files\\Git\\cmd;c:\\Users\\kunal\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Program Files\\nodejs\\;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\kunal\\AppData\\Local\\Programs\\Windsurf\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WinGet\\Links;C:\\Program Files\\nodejs;C:\\Users\\kunal\\AppData\\Roaming\\npm;C:\\Program Files\\Git\\bin;C:\\Users\\kunal\\.deno\\bin;c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\scripts\\noConfigScripts",
  "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL",
  "POSTGRESQL": "C:\\Program Files\\PostgreSQL\\17\\bin\\bin",
  "PROCESSOR_ARCHITECTURE": "AMD64",
  "PROCESSOR_IDENTIFIER": "Intel64 Family 6 Model 170 Stepping 4, GenuineIntel",
  "PROCESSOR_LEVEL": "6",
  "PROCESSOR_REVISION": "aa04",
  "PROGRAMDATA": "C:\\ProgramData",
  "PROGRAMFILES": "C:\\Program Files",
  "PROGRAMFILES(X86)": "C:\\Program Files (x86)",
  "PROGRAMW6432": "C:\\Program Files",
  "PSMODULEPATH": "C:\\Users\\kunal\\OneDrive\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules",
  "PUBLIC": "C:\\Users\\Public",
  "PYTHONUNBUFFERED": "1",
  "SESSIONNAME": "Console",
  "SYSTEMDRIVE": "C:",
  "SYSTEMROOT": "C:\\Windows",
  "TEMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "TMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "USERDOMAIN": "KUNALDELL",
  "USERDOMAIN_ROAMINGPROFILE": "KUNALDELL",
  "USERNAME": "kunal",
  "USERPROFILE": "C:\\Users\\kunal",
  "WINDIR": "C:\\Windows",
  "ZES_ENABLE_SYSMAN": "1",
  "PAGER": "cat",
  "TERM_PROGRAM": "vscode",
  "TERM_PROGRAM_VERSION": "1.99.3",
  "LANG": "en_US.UTF-8",
  "COLORTERM": "truecolor",
  "VSCODE_GIT_IPC_HANDLE": "\\\\.\\pipe\\vscode-git-fccd44132c-sock",
  "PYDEVD_DISABLE_FILE_VALIDATION": "1",
  "VSCODE_DEBUGPY_ADAPTER_ENDPOINTS": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\.noConfigDebugAdapterEndpoints\\endpoint-875e116b470e769c.txt",
  "BUNDLED_DEBUGPY_PATH": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\libs\\debugpy",
  "VSCODE_INJECTION": "1",
  "PROJECT_NAME": "IntelliTest AI Automation Platform",
  "ACCESS_TOKEN_EXPIRE_MINUTES": "11520",
  "SERVER_NAME": "localhost",
  "SERVER_HOST": "http://localhost:8001",
  "DATABASE_URL": "postgresql://postgres.lflecyuvttemfoyixngi:Ayeshaayesha121@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres",
  "SMTP_TLS": "true",
  "SMTP_PORT": "587",
  "SMTP_HOST": "smtp.gmail.com",
  "SMTP_USER": "your-email@gmail.com",
  "EMAILS_FROM_EMAIL": "your-email@gmail.com",
  "EMAILS_FROM_NAME": "IntelliTest Platform",
  "OPENAI_API_KEY": "your-openai-api-key-here",
  "AWS_ACCESS_KEY_ID": "your-aws-access-key",
  "AWS_DEFAULT_REGION": "us-east-1",
  "UPLOAD_DIR": "uploads",
  "MAX_UPLOAD_SIZE": "10485760",
  "ALLOWED_FILE_TYPES": "jpg,jpeg,png,gif,pdf,txt,csv,json",
  "TESTING": "false"
}
2025-08-02 20:46:46 - app.api.v1.routes.auth - DEBUG - auth.py:45 - Database URL: postgresql://postgres.lflecyuvttemfoyixngi:*****@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres
2025-08-02 20:46:47 - app.main - INFO - main.py:1371 - Initializing API routers...
2025-08-02 20:46:47 - app.main - INFO - main.py:1383 - API routers initialized successfully
2025-08-02 20:46:47 - app.main - INFO - main.py:245 - Starting database initialization...
2025-08-02 20:46:47 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x00000277708E7EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 20:46:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 20:46:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:46:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 20:46:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:46:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 20:46:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:46:48 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x00000277708E7EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 20:46:48 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x00000277708E7EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 20:46:48 - app.main - INFO - main.py:275 - Disabling foreign key constraints...
2025-08-02 20:46:48 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 20:46:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 20:46:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00097s] {}
2025-08-02 20:46:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 20:46:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00091s] {}
2025-08-02 20:46:48 - app.main - INFO - main.py:290 - Dropping existing tables...
2025-08-02 20:46:48 - app.main - INFO - main.py:293 - Dropping table: activity_logs
2025-08-02 20:46:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 20:46:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00052s] {}
2025-08-02 20:46:48 - app.main - INFO - main.py:295 - Dropped table: activity_logs
2025-08-02 20:46:48 - app.main - INFO - main.py:293 - Dropping table: attachments
2025-08-02 20:46:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 20:46:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00048s] {}
2025-08-02 20:46:49 - app.main - INFO - main.py:295 - Dropped table: attachments
2025-08-02 20:46:49 - app.main - INFO - main.py:293 - Dropping table: comments
2025-08-02 20:46:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 20:46:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00084s] {}
2025-08-02 20:46:49 - app.main - INFO - main.py:295 - Dropped table: comments
2025-08-02 20:46:49 - app.main - INFO - main.py:293 - Dropping table: environments
2025-08-02 20:46:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 20:46:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00060s] {}
2025-08-02 20:46:49 - app.main - INFO - main.py:295 - Dropped table: environments
2025-08-02 20:46:49 - app.main - INFO - main.py:293 - Dropping table: projects
2025-08-02 20:46:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 20:46:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00068s] {}
2025-08-02 20:46:49 - app.main - INFO - main.py:295 - Dropped table: projects
2025-08-02 20:46:49 - app.main - INFO - main.py:293 - Dropping table: team_members
2025-08-02 20:46:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 20:46:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00066s] {}
2025-08-02 20:46:49 - app.main - INFO - main.py:295 - Dropped table: team_members
2025-08-02 20:46:49 - app.main - INFO - main.py:293 - Dropping table: teams
2025-08-02 20:46:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 20:46:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00045s] {}
2025-08-02 20:46:49 - app.main - INFO - main.py:295 - Dropped table: teams
2025-08-02 20:46:49 - app.main - INFO - main.py:293 - Dropping table: test_cases
2025-08-02 20:46:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 20:46:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00081s] {}
2025-08-02 20:46:49 - app.main - INFO - main.py:295 - Dropped table: test_cases
2025-08-02 20:46:49 - app.main - INFO - main.py:293 - Dropping table: test_executions
2025-08-02 20:46:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 20:46:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00089s] {}
2025-08-02 20:46:49 - app.main - INFO - main.py:295 - Dropped table: test_executions
2025-08-02 20:46:49 - app.main - INFO - main.py:293 - Dropping table: test_plan_test_cases
2025-08-02 20:46:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 20:46:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00067s] {}
2025-08-02 20:46:49 - app.main - INFO - main.py:295 - Dropped table: test_plan_test_cases
2025-08-02 20:46:49 - app.main - INFO - main.py:293 - Dropping table: test_plans
2025-08-02 20:46:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 20:46:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00095s] {}
2025-08-02 20:46:49 - app.main - INFO - main.py:295 - Dropped table: test_plans
2025-08-02 20:46:49 - app.main - INFO - main.py:293 - Dropping table: test_steps
2025-08-02 20:46:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 20:46:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00084s] {}
2025-08-02 20:46:49 - app.main - INFO - main.py:295 - Dropped table: test_steps
2025-08-02 20:46:49 - app.main - INFO - main.py:293 - Dropping table: users
2025-08-02 20:46:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 20:46:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00066s] {}
2025-08-02 20:46:50 - app.main - INFO - main.py:295 - Dropped table: users
2025-08-02 20:46:50 - app.main - INFO - main.py:301 - Creating database tables in order...
2025-08-02 20:46:50 - app.main - INFO - main.py:304 - Creating table: users
2025-08-02 20:46:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00137s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 20:46:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00291s] {}
2025-08-02 20:46:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 20:46:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00150s] {}
2025-08-02 20:46:50 - app.main - INFO - main.py:306 - Table created: users
2025-08-02 20:46:50 - app.main - INFO - main.py:304 - Creating table: teams
2025-08-02 20:46:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2638s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:46:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00327s] {}
2025-08-02 20:46:50 - app.main - INFO - main.py:306 - Table created: teams
2025-08-02 20:46:50 - app.main - INFO - main.py:304 - Creating table: projects
2025-08-02 20:46:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4408s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 20:46:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00611s] {}
2025-08-02 20:46:50 - app.main - INFO - main.py:306 - Table created: projects
2025-08-02 20:46:50 - app.main - INFO - main.py:304 - Creating table: environments
2025-08-02 20:46:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6228s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 20:46:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00114s] {}
2025-08-02 20:46:50 - app.main - INFO - main.py:306 - Table created: environments
2025-08-02 20:46:50 - app.main - INFO - main.py:304 - Creating table: test_cases
2025-08-02 20:46:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.8054s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.02791s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1139s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2017s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 20:46:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00151s] {}
2025-08-02 20:46:51 - app.main - INFO - main.py:306 - Table created: test_cases
2025-08-02 20:46:51 - app.main - INFO - main.py:304 - Creating table: test_steps
2025-08-02 20:46:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.272s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 20:46:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00114s] {}
2025-08-02 20:46:51 - app.main - INFO - main.py:306 - Table created: test_steps
2025-08-02 20:46:51 - app.main - INFO - main.py:304 - Creating table: test_plans
2025-08-02 20:46:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.453s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.647s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:46:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00151s] {}
2025-08-02 20:46:51 - app.main - INFO - main.py:306 - Table created: test_plans
2025-08-02 20:46:51 - app.main - INFO - main.py:304 - Creating table: test_plan_test_cases
2025-08-02 20:46:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.719s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:46:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00141s] {}
2025-08-02 20:46:51 - app.main - INFO - main.py:306 - Table created: test_plan_test_cases
2025-08-02 20:46:51 - app.main - INFO - main.py:304 - Creating table: test_executions
2025-08-02 20:46:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.904s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.099s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 20:46:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.02608s] {}
2025-08-02 20:46:52 - app.main - INFO - main.py:306 - Table created: test_executions
2025-08-02 20:46:52 - app.main - INFO - main.py:304 - Creating table: comments
2025-08-02 20:46:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.202s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.4s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 20:46:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00141s] {}
2025-08-02 20:46:52 - app.main - INFO - main.py:306 - Table created: comments
2025-08-02 20:46:52 - app.main - INFO - main.py:304 - Creating table: team_members
2025-08-02 20:46:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.468s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:46:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00213s] {}
2025-08-02 20:46:52 - app.main - INFO - main.py:306 - Table created: team_members
2025-08-02 20:46:52 - app.main - INFO - main.py:304 - Creating table: attachments
2025-08-02 20:46:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.641s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 20:46:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00111s] {}
2025-08-02 20:46:52 - app.main - INFO - main.py:306 - Table created: attachments
2025-08-02 20:46:52 - app.main - INFO - main.py:304 - Creating table: activity_logs
2025-08-02 20:46:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:46:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.822s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:46:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:46:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.01305s] {}
2025-08-02 20:46:53 - app.main - INFO - main.py:306 - Table created: activity_logs
2025-08-02 20:46:53 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 20:46:53 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x00000277708E7EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 20:46:53 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x00000277708E7EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 20:46:53 - app.main - INFO - main.py:311 - All database tables created successfully
2025-08-02 20:47:11 - app.auth.security - INFO - security.py:141 - 
================================================================================
2025-08-02 20:47:11 - app.auth.security - INFO - security.py:142 - Authenticating request to http://127.0.0.1:8001/api/v1/test-cases/
2025-08-02 20:47:11 - app.auth.security - INFO - security.py:143 - Token: eyJhbGciOiJIUzI1NiIs...
2025-08-02 20:47:11 - app.auth.security - INFO - security.py:147 - Decoding JWT token...
2025-08-02 20:47:11 - app.auth.security - INFO - security.py:149 - Decoded payload: {'sub': 'd6663135-0f41-403f-bccb-684231c91a81', 'exp': 1754148099}
2025-08-02 20:47:11 - app.auth.security - INFO - security.py:156 - Looking up user with ID: d6663135-0f41-403f-bccb-684231c91a81
2025-08-02 20:47:11 - app.auth.security - ERROR - security.py:190 - Unexpected error during authentication: 'AsyncSession' object has no attribute 'query'
2025-08-02 20:47:11 - app.auth.security - ERROR - security.py:191 - Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 159, in get_current_user
    user = db.query(models.User).filter(models.User.id == user_id).first()
           ^^^^^^^^
AttributeError: 'AsyncSession' object has no attribute 'query'

2025-08-02 20:47:11 - app.db.session - ERROR - session.py:101 - Database session error: 500: An error occurred during authentication: 'AsyncSession' object has no attribute 'query'
2025-08-02 20:47:11 - app.main - WARNING - main.py:381 - HTTP Exception: 500 - An error occurred during authentication: 'AsyncSession' object has no attribute 'query' - Path: /api/v1/test-cases/
2025-08-02 20:47:13 - app.auth.security - INFO - security.py:141 - 
================================================================================
2025-08-02 20:47:13 - app.auth.security - INFO - security.py:142 - Authenticating request to http://127.0.0.1:8001/api/v1/test-cases/
2025-08-02 20:47:13 - app.auth.security - INFO - security.py:143 - Token: eyJhbGciOiJIUzI1NiIs...
2025-08-02 20:47:13 - app.auth.security - INFO - security.py:147 - Decoding JWT token...
2025-08-02 20:47:13 - app.auth.security - INFO - security.py:149 - Decoded payload: {'sub': 'd6663135-0f41-403f-bccb-684231c91a81', 'exp': 1754148099}
2025-08-02 20:47:13 - app.auth.security - INFO - security.py:156 - Looking up user with ID: d6663135-0f41-403f-bccb-684231c91a81
2025-08-02 20:47:13 - app.auth.security - ERROR - security.py:190 - Unexpected error during authentication: 'AsyncSession' object has no attribute 'query'
2025-08-02 20:47:13 - app.auth.security - ERROR - security.py:191 - Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 159, in get_current_user
    user = db.query(models.User).filter(models.User.id == user_id).first()
           ^^^^^^^^
AttributeError: 'AsyncSession' object has no attribute 'query'

2025-08-02 20:47:13 - app.db.session - ERROR - session.py:101 - Database session error: 500: An error occurred during authentication: 'AsyncSession' object has no attribute 'query'
2025-08-02 20:47:13 - app.main - WARNING - main.py:381 - HTTP Exception: 500 - An error occurred during authentication: 'AsyncSession' object has no attribute 'query' - Path: /api/v1/test-cases/
2025-08-02 20:47:14 - app.auth.security - INFO - security.py:141 - 
================================================================================
2025-08-02 20:47:14 - app.auth.security - INFO - security.py:142 - Authenticating request to http://127.0.0.1:8001/api/v1/test-cases/
2025-08-02 20:47:14 - app.auth.security - INFO - security.py:143 - Token: eyJhbGciOiJIUzI1NiIs...
2025-08-02 20:47:14 - app.auth.security - INFO - security.py:147 - Decoding JWT token...
2025-08-02 20:47:14 - app.auth.security - INFO - security.py:149 - Decoded payload: {'sub': 'd6663135-0f41-403f-bccb-684231c91a81', 'exp': 1754148099}
2025-08-02 20:47:14 - app.auth.security - INFO - security.py:156 - Looking up user with ID: d6663135-0f41-403f-bccb-684231c91a81
2025-08-02 20:47:14 - app.auth.security - ERROR - security.py:190 - Unexpected error during authentication: 'AsyncSession' object has no attribute 'query'
2025-08-02 20:47:14 - app.auth.security - ERROR - security.py:191 - Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 159, in get_current_user
    user = db.query(models.User).filter(models.User.id == user_id).first()
           ^^^^^^^^
AttributeError: 'AsyncSession' object has no attribute 'query'

2025-08-02 20:47:14 - app.db.session - ERROR - session.py:101 - Database session error: 500: An error occurred during authentication: 'AsyncSession' object has no attribute 'query'
2025-08-02 20:47:14 - app.main - WARNING - main.py:381 - HTTP Exception: 500 - An error occurred during authentication: 'AsyncSession' object has no attribute 'query' - Path: /api/v1/test-cases/
2025-08-02 20:48:27 - app.main - INFO - main.py:456 - [REGISTER-b9449a3e-1683-4099-b127-dd843c03537b] Starting registration for email: test1@example.com
2025-08-02 20:48:27 - app.main - INFO - main.py:470 - [REGISTER-b9449a3e-1683-4099-b127-dd843c03537b] Initializing AuthService
2025-08-02 20:48:27 - app.main - INFO - main.py:481 - [REGISTER] User data prepared: {'email': 'test1@example.com', 'password': 'test1234', 'full_name': 'Test User', 'role': 'tester'}
2025-08-02 20:48:27 - app.main - INFO - main.py:484 - [REGISTER] Calling auth_service.create_user
2025-08-02 20:48:27 - app.auth.security - INFO - security.py:296 - [AUTH_SERVICE] Starting user creation for email: test1@example.com
2025-08-02 20:48:27 - app.auth.security - ERROR - security.py:350 - [AUTH_SERVICE] Error creating user: name 'select' is not defined
2025-08-02 20:48:27 - app.auth.security - ERROR - security.py:351 - [AUTH_SERVICE] Error type: NameError
2025-08-02 20:48:27 - app.auth.security - ERROR - security.py:352 - [AUTH_SERVICE] Traceback: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 302, in create_user
    await self.validate_email(user_data['email'])
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 226, in validate_email
    select(models.User).where(models.User.email == email)
    ^^^^^^
NameError: name 'select' is not defined. Did you forget to import 'select'

2025-08-02 20:48:27 - app.main - ERROR - main.py:517 - [REGISTER] HTTP Exception: Failed to create user: name 'select' is not defined
2025-08-02 20:48:27 - app.db.session - ERROR - session.py:101 - Database session error: 500: Failed to create user: name 'select' is not defined
2025-08-02 20:48:27 - app.main - WARNING - main.py:381 - HTTP Exception: 500 - Failed to create user: name 'select' is not defined - Path: /api/auth/register
2025-08-02 20:48:51 - app.main - INFO - main.py:319 - Application shutdown
2025-08-02 20:48:53 - root - INFO - main.py:87 - ================================================================================
2025-08-02 20:48:53 - root - INFO - main.py:88 - Application starting with enhanced logging (level: DEBUG)
2025-08-02 20:48:53 - root - INFO - main.py:89 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 20:48:53 - root - INFO - main.py:90 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 20:48:53 - root - INFO - main.py:91 - ================================================================================
2025-08-02 20:48:53 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-08-02 20:48:53 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-08-02 20:48:53 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-08-02 20:48:53 - passlib.registry - DEBUG - registry.py:296 - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
2025-08-02 20:48:53 - app.api.v1.routes.auth - DEBUG - auth.py:34 - Environment variables: {
  "ALLUSERSPROFILE": "C:\\ProgramData",
  "APPDATA": "C:\\Users\\kunal\\AppData\\Roaming",
  "C:\\USERS\\KUNAL\\DOWNLOADS\\EMERGENTINTELLITEST-MAIN": "C:\\Program Files\\nodejs\\",
  "CHROME_CRASHPAD_PIPE_NAME": "\\\\.\\pipe\\crashpad_11300_YGFLEAWXLMRVRBOK",
  "COMMONPROGRAMFILES": "C:\\Program Files\\Common Files",
  "COMMONPROGRAMFILES(X86)": "C:\\Program Files (x86)\\Common Files",
  "COMMONPROGRAMW6432": "C:\\Program Files\\Common Files",
  "COMPUTERNAME": "KUNALDELL",
  "COMSPEC": "C:\\Windows\\system32\\cmd.exe",
  "DRIVERDATA": "C:\\Windows\\System32\\Drivers\\DriverData",
  "EFC_5864_1592913036": "1",
  "HOMEDRIVE": "C:",
  "HOMEPATH": "\\Users\\kunal",
  "LOCALAPPDATA": "C:\\Users\\kunal\\AppData\\Local",
  "LOGONSERVER": "\\\\KUNALDELL",
  "LOG_LEVEL": "DEBUG",
  "NUMBER_OF_PROCESSORS": "22",
  "ONEDRIVE": "C:\\Users\\kunal\\OneDrive",
  "ONEDRIVECONSUMER": "C:\\Users\\kunal\\OneDrive",
  "ORIGINAL_XDG_CURRENT_DESKTOP": "undefined",
  "OS": "Windows_NT",
  "PATH": "C:\\Program Files\\Python312\\Scripts\\;C:\\Program Files\\Python312\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files\\Git\\cmd;c:\\Users\\kunal\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Program Files\\nodejs\\;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\kunal\\AppData\\Local\\Programs\\Windsurf\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WinGet\\Links;C:\\Program Files\\nodejs;C:\\Users\\kunal\\AppData\\Roaming\\npm;C:\\Program Files\\Git\\bin;C:\\Users\\kunal\\.deno\\bin;c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\scripts\\noConfigScripts",
  "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL",
  "POSTGRESQL": "C:\\Program Files\\PostgreSQL\\17\\bin\\bin",
  "PROCESSOR_ARCHITECTURE": "AMD64",
  "PROCESSOR_IDENTIFIER": "Intel64 Family 6 Model 170 Stepping 4, GenuineIntel",
  "PROCESSOR_LEVEL": "6",
  "PROCESSOR_REVISION": "aa04",
  "PROGRAMDATA": "C:\\ProgramData",
  "PROGRAMFILES": "C:\\Program Files",
  "PROGRAMFILES(X86)": "C:\\Program Files (x86)",
  "PROGRAMW6432": "C:\\Program Files",
  "PSMODULEPATH": "C:\\Users\\kunal\\OneDrive\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules",
  "PUBLIC": "C:\\Users\\Public",
  "PYTHONUNBUFFERED": "1",
  "SESSIONNAME": "Console",
  "SYSTEMDRIVE": "C:",
  "SYSTEMROOT": "C:\\Windows",
  "TEMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "TMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "USERDOMAIN": "KUNALDELL",
  "USERDOMAIN_ROAMINGPROFILE": "KUNALDELL",
  "USERNAME": "kunal",
  "USERPROFILE": "C:\\Users\\kunal",
  "WINDIR": "C:\\Windows",
  "ZES_ENABLE_SYSMAN": "1",
  "PAGER": "cat",
  "TERM_PROGRAM": "vscode",
  "TERM_PROGRAM_VERSION": "1.99.3",
  "LANG": "en_US.UTF-8",
  "COLORTERM": "truecolor",
  "VSCODE_GIT_IPC_HANDLE": "\\\\.\\pipe\\vscode-git-fccd44132c-sock",
  "PYDEVD_DISABLE_FILE_VALIDATION": "1",
  "VSCODE_DEBUGPY_ADAPTER_ENDPOINTS": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\.noConfigDebugAdapterEndpoints\\endpoint-875e116b470e769c.txt",
  "BUNDLED_DEBUGPY_PATH": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\libs\\debugpy",
  "VSCODE_INJECTION": "1",
  "PROJECT_NAME": "IntelliTest AI Automation Platform",
  "ACCESS_TOKEN_EXPIRE_MINUTES": "11520",
  "SERVER_NAME": "localhost",
  "SERVER_HOST": "http://localhost:8001",
  "DATABASE_URL": "postgresql://postgres.lflecyuvttemfoyixngi:Ayeshaayesha121@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres",
  "SMTP_TLS": "true",
  "SMTP_PORT": "587",
  "SMTP_HOST": "smtp.gmail.com",
  "SMTP_USER": "your-email@gmail.com",
  "EMAILS_FROM_EMAIL": "your-email@gmail.com",
  "EMAILS_FROM_NAME": "IntelliTest Platform",
  "OPENAI_API_KEY": "your-openai-api-key-here",
  "AWS_ACCESS_KEY_ID": "your-aws-access-key",
  "AWS_DEFAULT_REGION": "us-east-1",
  "UPLOAD_DIR": "uploads",
  "MAX_UPLOAD_SIZE": "10485760",
  "ALLOWED_FILE_TYPES": "jpg,jpeg,png,gif,pdf,txt,csv,json",
  "TESTING": "false"
}
2025-08-02 20:48:53 - app.api.v1.routes.auth - DEBUG - auth.py:45 - Database URL: postgresql://postgres.lflecyuvttemfoyixngi:*****@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres
2025-08-02 20:48:54 - app.main - INFO - main.py:1371 - Initializing API routers...
2025-08-02 20:48:54 - app.main - INFO - main.py:1383 - API routers initialized successfully
2025-08-02 20:48:54 - app.main - INFO - main.py:245 - Starting database initialization...
2025-08-02 20:48:54 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x0000013AB970FEF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 20:48:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 20:48:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:48:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 20:48:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:48:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 20:48:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:48:55 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x0000013AB970FEF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 20:48:55 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x0000013AB970FEF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 20:48:55 - app.main - INFO - main.py:275 - Disabling foreign key constraints...
2025-08-02 20:48:55 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 20:48:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 20:48:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00170s] {}
2025-08-02 20:48:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 20:48:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00125s] {}
2025-08-02 20:48:55 - app.main - INFO - main.py:290 - Dropping existing tables...
2025-08-02 20:48:55 - app.main - INFO - main.py:293 - Dropping table: activity_logs
2025-08-02 20:48:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 20:48:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00088s] {}
2025-08-02 20:48:55 - app.main - INFO - main.py:295 - Dropped table: activity_logs
2025-08-02 20:48:55 - app.main - INFO - main.py:293 - Dropping table: attachments
2025-08-02 20:48:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 20:48:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00099s] {}
2025-08-02 20:48:56 - app.main - INFO - main.py:295 - Dropped table: attachments
2025-08-02 20:48:56 - app.main - INFO - main.py:293 - Dropping table: comments
2025-08-02 20:48:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 20:48:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00152s] {}
2025-08-02 20:48:56 - app.main - INFO - main.py:295 - Dropped table: comments
2025-08-02 20:48:56 - app.main - INFO - main.py:293 - Dropping table: environments
2025-08-02 20:48:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 20:48:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00102s] {}
2025-08-02 20:48:56 - app.main - INFO - main.py:295 - Dropped table: environments
2025-08-02 20:48:56 - app.main - INFO - main.py:293 - Dropping table: projects
2025-08-02 20:48:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 20:48:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00056s] {}
2025-08-02 20:48:56 - app.main - INFO - main.py:295 - Dropped table: projects
2025-08-02 20:48:56 - app.main - INFO - main.py:293 - Dropping table: team_members
2025-08-02 20:48:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 20:48:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00137s] {}
2025-08-02 20:48:56 - app.main - INFO - main.py:295 - Dropped table: team_members
2025-08-02 20:48:56 - app.main - INFO - main.py:293 - Dropping table: teams
2025-08-02 20:48:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 20:48:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00122s] {}
2025-08-02 20:48:56 - app.main - INFO - main.py:295 - Dropped table: teams
2025-08-02 20:48:56 - app.main - INFO - main.py:293 - Dropping table: test_cases
2025-08-02 20:48:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 20:48:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00157s] {}
2025-08-02 20:48:56 - app.main - INFO - main.py:295 - Dropped table: test_cases
2025-08-02 20:48:56 - app.main - INFO - main.py:293 - Dropping table: test_executions
2025-08-02 20:48:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 20:48:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00127s] {}
2025-08-02 20:48:56 - app.main - INFO - main.py:319 - Application shutdown
2025-08-02 20:48:56 - app.main - INFO - main.py:295 - Dropped table: test_executions
2025-08-02 20:48:56 - app.main - INFO - main.py:293 - Dropping table: test_plan_test_cases
2025-08-02 20:48:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 20:48:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00107s] {}
2025-08-02 20:48:56 - app.main - INFO - main.py:295 - Dropped table: test_plan_test_cases
2025-08-02 20:48:56 - app.main - INFO - main.py:293 - Dropping table: test_plans
2025-08-02 20:48:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 20:48:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00149s] {}
2025-08-02 20:48:56 - app.main - INFO - main.py:295 - Dropped table: test_plans
2025-08-02 20:48:56 - app.main - INFO - main.py:293 - Dropping table: test_steps
2025-08-02 20:48:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 20:48:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00092s] {}
2025-08-02 20:48:56 - app.main - INFO - main.py:295 - Dropped table: test_steps
2025-08-02 20:48:56 - app.main - INFO - main.py:293 - Dropping table: users
2025-08-02 20:48:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 20:48:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00110s] {}
2025-08-02 20:48:56 - app.main - INFO - main.py:295 - Dropped table: users
2025-08-02 20:48:56 - app.main - INFO - main.py:301 - Creating database tables in order...
2025-08-02 20:48:56 - app.main - INFO - main.py:304 - Creating table: users
2025-08-02 20:48:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:48:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00139s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:48:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 20:48:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00277s] {}
2025-08-02 20:48:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 20:48:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00093s] {}
2025-08-02 20:48:57 - app.main - INFO - main.py:306 - Table created: users
2025-08-02 20:48:57 - app.main - INFO - main.py:304 - Creating table: teams
2025-08-02 20:48:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:48:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2521s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:48:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:48:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00124s] {}
2025-08-02 20:48:57 - app.main - INFO - main.py:306 - Table created: teams
2025-08-02 20:48:57 - app.main - INFO - main.py:304 - Creating table: projects
2025-08-02 20:48:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:48:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4138s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:48:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 20:48:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00110s] {}
2025-08-02 20:48:57 - app.main - INFO - main.py:306 - Table created: projects
2025-08-02 20:48:57 - app.main - INFO - main.py:304 - Creating table: environments
2025-08-02 20:48:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:48:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5797s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:48:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 20:48:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00115s] {}
2025-08-02 20:48:57 - app.main - INFO - main.py:306 - Table created: environments
2025-08-02 20:48:57 - app.main - INFO - main.py:304 - Creating table: test_cases
2025-08-02 20:48:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:48:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7397s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:48:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:48:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00167s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:48:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:48:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.07999s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 20:48:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:48:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1578s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:48:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 20:48:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00181s] {}
2025-08-02 20:48:58 - app.main - INFO - main.py:306 - Table created: test_cases
2025-08-02 20:48:58 - app.main - INFO - main.py:304 - Creating table: test_steps
2025-08-02 20:48:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:48:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.152s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:48:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 20:48:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00321s] {}
2025-08-02 20:48:58 - app.main - INFO - main.py:306 - Table created: test_steps
2025-08-02 20:48:58 - app.main - INFO - main.py:304 - Creating table: test_plans
2025-08-02 20:48:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:48:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.317s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:48:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:48:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5788s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:48:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:48:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00141s] {}
2025-08-02 20:48:58 - app.main - INFO - main.py:306 - Table created: test_plans
2025-08-02 20:48:58 - app.main - INFO - main.py:304 - Creating table: test_plan_test_cases
2025-08-02 20:48:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:48:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.559s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:48:58 - root - INFO - main.py:87 - ================================================================================
2025-08-02 20:48:58 - root - INFO - main.py:88 - Application starting with enhanced logging (level: INFO)
2025-08-02 20:48:58 - root - INFO - main.py:89 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 20:48:58 - root - INFO - main.py:90 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 20:48:58 - root - INFO - main.py:91 - ================================================================================
2025-08-02 20:48:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:48:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00107s] {}
2025-08-02 20:48:58 - app.main - INFO - main.py:306 - Table created: test_plan_test_cases
2025-08-02 20:48:58 - app.main - INFO - main.py:304 - Creating table: test_executions
2025-08-02 20:48:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:48:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.718s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:48:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:48:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.9798s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 20:48:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 20:48:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00140s] {}
2025-08-02 20:48:58 - app.main - INFO - main.py:306 - Table created: test_executions
2025-08-02 20:48:58 - app.main - INFO - main.py:304 - Creating table: comments
2025-08-02 20:48:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:48:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.979s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:48:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:48:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.248s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:48:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 20:48:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00157s] {}
2025-08-02 20:48:59 - app.main - INFO - main.py:306 - Table created: comments
2025-08-02 20:48:59 - app.main - INFO - main.py:304 - Creating table: team_members
2025-08-02 20:48:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:48:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.229s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:48:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:48:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00143s] {}
2025-08-02 20:48:59 - app.main - INFO - main.py:306 - Table created: team_members
2025-08-02 20:48:59 - app.main - INFO - main.py:304 - Creating table: attachments
2025-08-02 20:48:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:48:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.389s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:48:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 20:48:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00167s] {}
2025-08-02 20:48:59 - app.main - INFO - main.py:306 - Table created: attachments
2025-08-02 20:48:59 - app.main - INFO - main.py:304 - Creating table: activity_logs
2025-08-02 20:48:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:48:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.553s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:48:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:48:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00082s] {}
2025-08-02 20:48:59 - app.main - INFO - main.py:306 - Table created: activity_logs
2025-08-02 20:48:59 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 20:48:59 - app.main - INFO - main.py:1371 - Initializing API routers...
2025-08-02 20:48:59 - app.main - INFO - main.py:1383 - API routers initialized successfully
2025-08-02 20:48:59 - app.main - INFO - main.py:245 - Starting database initialization...
2025-08-02 20:48:59 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x0000013AB970FEF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 20:48:59 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x0000013AB970FEF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 20:48:59 - app.main - INFO - main.py:311 - All database tables created successfully
2025-08-02 20:49:00 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x000001E159D77EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 20:49:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 20:49:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:49:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 20:49:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:49:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 20:49:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:49:00 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x000001E159D77EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 20:49:00 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x000001E159D77EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 20:49:00 - app.main - INFO - main.py:275 - Disabling foreign key constraints...
2025-08-02 20:49:00 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 20:49:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 20:49:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00160s] {}
2025-08-02 20:49:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 20:49:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00191s] {}
2025-08-02 20:49:01 - app.main - INFO - main.py:290 - Dropping existing tables...
2025-08-02 20:49:01 - app.main - INFO - main.py:293 - Dropping table: activity_logs
2025-08-02 20:49:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 20:49:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00072s] {}
2025-08-02 20:49:01 - app.main - INFO - main.py:295 - Dropped table: activity_logs
2025-08-02 20:49:01 - app.main - INFO - main.py:293 - Dropping table: attachments
2025-08-02 20:49:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 20:49:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00092s] {}
2025-08-02 20:49:01 - app.main - INFO - main.py:295 - Dropped table: attachments
2025-08-02 20:49:01 - app.main - INFO - main.py:293 - Dropping table: comments
2025-08-02 20:49:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 20:49:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00079s] {}
2025-08-02 20:49:01 - app.main - INFO - main.py:295 - Dropped table: comments
2025-08-02 20:49:01 - app.main - INFO - main.py:293 - Dropping table: environments
2025-08-02 20:49:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 20:49:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00092s] {}
2025-08-02 20:49:01 - app.main - INFO - main.py:295 - Dropped table: environments
2025-08-02 20:49:01 - app.main - INFO - main.py:293 - Dropping table: projects
2025-08-02 20:49:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 20:49:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00100s] {}
2025-08-02 20:49:01 - app.main - INFO - main.py:295 - Dropped table: projects
2025-08-02 20:49:01 - app.main - INFO - main.py:293 - Dropping table: team_members
2025-08-02 20:49:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 20:49:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00087s] {}
2025-08-02 20:49:01 - app.main - INFO - main.py:295 - Dropped table: team_members
2025-08-02 20:49:01 - app.main - INFO - main.py:293 - Dropping table: teams
2025-08-02 20:49:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 20:49:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00124s] {}
2025-08-02 20:49:01 - app.main - INFO - main.py:295 - Dropped table: teams
2025-08-02 20:49:01 - app.main - INFO - main.py:293 - Dropping table: test_cases
2025-08-02 20:49:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 20:49:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00070s] {}
2025-08-02 20:49:01 - app.main - INFO - main.py:295 - Dropped table: test_cases
2025-08-02 20:49:01 - app.main - INFO - main.py:293 - Dropping table: test_executions
2025-08-02 20:49:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 20:49:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00109s] {}
2025-08-02 20:49:02 - app.main - INFO - main.py:295 - Dropped table: test_executions
2025-08-02 20:49:02 - app.main - INFO - main.py:293 - Dropping table: test_plan_test_cases
2025-08-02 20:49:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 20:49:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00106s] {}
2025-08-02 20:49:02 - app.main - INFO - main.py:295 - Dropped table: test_plan_test_cases
2025-08-02 20:49:02 - app.main - INFO - main.py:293 - Dropping table: test_plans
2025-08-02 20:49:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 20:49:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00125s] {}
2025-08-02 20:49:02 - app.main - INFO - main.py:295 - Dropped table: test_plans
2025-08-02 20:49:02 - app.main - INFO - main.py:293 - Dropping table: test_steps
2025-08-02 20:49:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 20:49:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00100s] {}
2025-08-02 20:49:02 - app.main - INFO - main.py:295 - Dropped table: test_steps
2025-08-02 20:49:02 - app.main - INFO - main.py:293 - Dropping table: users
2025-08-02 20:49:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 20:49:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00107s] {}
2025-08-02 20:49:02 - app.main - INFO - main.py:295 - Dropped table: users
2025-08-02 20:49:02 - app.main - INFO - main.py:301 - Creating database tables in order...
2025-08-02 20:49:02 - app.main - INFO - main.py:304 - Creating table: users
2025-08-02 20:49:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00106s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 20:49:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00381s] {}
2025-08-02 20:49:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 20:49:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00186s] {}
2025-08-02 20:49:02 - app.main - INFO - main.py:306 - Table created: users
2025-08-02 20:49:02 - app.main - INFO - main.py:304 - Creating table: teams
2025-08-02 20:49:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2798s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:49:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00283s] {}
2025-08-02 20:49:02 - app.main - INFO - main.py:306 - Table created: teams
2025-08-02 20:49:02 - app.main - INFO - main.py:304 - Creating table: projects
2025-08-02 20:49:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4643s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 20:49:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00231s] {}
2025-08-02 20:49:03 - app.main - INFO - main.py:306 - Table created: projects
2025-08-02 20:49:03 - app.main - INFO - main.py:304 - Creating table: environments
2025-08-02 20:49:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.651s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 20:49:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00986s] {}
2025-08-02 20:49:03 - app.main - INFO - main.py:306 - Table created: environments
2025-08-02 20:49:03 - app.main - INFO - main.py:304 - Creating table: test_cases
2025-08-02 20:49:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.8438s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00160s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.09236s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1795s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 20:49:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00172s] {}
2025-08-02 20:49:03 - app.main - INFO - main.py:306 - Table created: test_cases
2025-08-02 20:49:03 - app.main - INFO - main.py:304 - Creating table: test_steps
2025-08-02 20:49:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.294s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 20:49:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00149s] {}
2025-08-02 20:49:03 - app.main - INFO - main.py:306 - Table created: test_steps
2025-08-02 20:49:03 - app.main - INFO - main.py:304 - Creating table: test_plans
2025-08-02 20:49:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.476s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6285s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:49:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00163s] {}
2025-08-02 20:49:04 - app.main - INFO - main.py:306 - Table created: test_plans
2025-08-02 20:49:04 - app.main - INFO - main.py:304 - Creating table: test_plan_test_cases
2025-08-02 20:49:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.751s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:49:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00288s] {}
2025-08-02 20:49:04 - app.main - INFO - main.py:306 - Table created: test_plan_test_cases
2025-08-02 20:49:04 - app.main - INFO - main.py:304 - Creating table: test_executions
2025-08-02 20:49:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.951s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.118s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 20:49:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00193s] {}
2025-08-02 20:49:04 - app.main - INFO - main.py:306 - Table created: test_executions
2025-08-02 20:49:04 - app.main - INFO - main.py:304 - Creating table: comments
2025-08-02 20:49:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.252s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.409s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 20:49:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00280s] {}
2025-08-02 20:49:04 - app.main - INFO - main.py:306 - Table created: comments
2025-08-02 20:49:04 - app.main - INFO - main.py:304 - Creating table: team_members
2025-08-02 20:49:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.525s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:49:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00188s] {}
2025-08-02 20:49:05 - app.main - INFO - main.py:306 - Table created: team_members
2025-08-02 20:49:05 - app.main - INFO - main.py:304 - Creating table: attachments
2025-08-02 20:49:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.71s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 20:49:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00263s] {}
2025-08-02 20:49:05 - app.main - INFO - main.py:306 - Table created: attachments
2025-08-02 20:49:05 - app.main - INFO - main.py:304 - Creating table: activity_logs
2025-08-02 20:49:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.898s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:49:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00657s] {}
2025-08-02 20:49:05 - app.main - INFO - main.py:306 - Table created: activity_logs
2025-08-02 20:49:05 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 20:49:05 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x000001E159D77EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 20:49:05 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x000001E159D77EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 20:49:05 - app.main - INFO - main.py:311 - All database tables created successfully
2025-08-02 20:49:41 - app.main - INFO - main.py:319 - Application shutdown
2025-08-02 20:49:43 - root - INFO - main.py:87 - ================================================================================
2025-08-02 20:49:43 - root - INFO - main.py:88 - Application starting with enhanced logging (level: INFO)
2025-08-02 20:49:43 - root - INFO - main.py:89 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 20:49:43 - root - INFO - main.py:90 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 20:49:43 - root - INFO - main.py:91 - ================================================================================
2025-08-02 20:49:44 - app.main - INFO - main.py:1371 - Initializing API routers...
2025-08-02 20:49:44 - app.main - INFO - main.py:1383 - API routers initialized successfully
2025-08-02 20:49:44 - app.main - INFO - main.py:245 - Starting database initialization...
2025-08-02 20:49:45 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x0000028003CDFEF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 20:49:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 20:49:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:49:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 20:49:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:49:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 20:49:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:49:45 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x0000028003CDFEF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 20:49:45 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x0000028003CDFEF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 20:49:45 - app.main - INFO - main.py:275 - Disabling foreign key constraints...
2025-08-02 20:49:45 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 20:49:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 20:49:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00122s] {}
2025-08-02 20:49:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 20:49:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00151s] {}
2025-08-02 20:49:46 - app.main - INFO - main.py:290 - Dropping existing tables...
2025-08-02 20:49:46 - app.main - INFO - main.py:293 - Dropping table: activity_logs
2025-08-02 20:49:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 20:49:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00066s] {}
2025-08-02 20:49:46 - app.main - INFO - main.py:295 - Dropped table: activity_logs
2025-08-02 20:49:46 - app.main - INFO - main.py:293 - Dropping table: attachments
2025-08-02 20:49:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 20:49:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00073s] {}
2025-08-02 20:49:46 - app.main - INFO - main.py:295 - Dropped table: attachments
2025-08-02 20:49:46 - app.main - INFO - main.py:293 - Dropping table: comments
2025-08-02 20:49:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 20:49:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00077s] {}
2025-08-02 20:49:46 - app.main - INFO - main.py:295 - Dropped table: comments
2025-08-02 20:49:46 - app.main - INFO - main.py:293 - Dropping table: environments
2025-08-02 20:49:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 20:49:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00077s] {}
2025-08-02 20:49:46 - app.main - INFO - main.py:295 - Dropped table: environments
2025-08-02 20:49:46 - app.main - INFO - main.py:293 - Dropping table: projects
2025-08-02 20:49:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 20:49:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00089s] {}
2025-08-02 20:49:46 - app.main - INFO - main.py:295 - Dropped table: projects
2025-08-02 20:49:46 - app.main - INFO - main.py:293 - Dropping table: team_members
2025-08-02 20:49:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 20:49:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00096s] {}
2025-08-02 20:49:46 - app.main - INFO - main.py:295 - Dropped table: team_members
2025-08-02 20:49:46 - app.main - INFO - main.py:293 - Dropping table: teams
2025-08-02 20:49:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 20:49:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00124s] {}
2025-08-02 20:49:46 - app.main - INFO - main.py:295 - Dropped table: teams
2025-08-02 20:49:46 - app.main - INFO - main.py:293 - Dropping table: test_cases
2025-08-02 20:49:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 20:49:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00120s] {}
2025-08-02 20:49:46 - app.main - INFO - main.py:295 - Dropped table: test_cases
2025-08-02 20:49:46 - app.main - INFO - main.py:293 - Dropping table: test_executions
2025-08-02 20:49:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 20:49:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00081s] {}
2025-08-02 20:49:46 - app.main - INFO - main.py:295 - Dropped table: test_executions
2025-08-02 20:49:46 - app.main - INFO - main.py:293 - Dropping table: test_plan_test_cases
2025-08-02 20:49:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 20:49:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00080s] {}
2025-08-02 20:49:46 - app.main - INFO - main.py:295 - Dropped table: test_plan_test_cases
2025-08-02 20:49:46 - app.main - INFO - main.py:293 - Dropping table: test_plans
2025-08-02 20:49:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 20:49:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00145s] {}
2025-08-02 20:49:47 - app.main - INFO - main.py:295 - Dropped table: test_plans
2025-08-02 20:49:47 - app.main - INFO - main.py:293 - Dropping table: test_steps
2025-08-02 20:49:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 20:49:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00095s] {}
2025-08-02 20:49:47 - app.main - INFO - main.py:295 - Dropped table: test_steps
2025-08-02 20:49:47 - app.main - INFO - main.py:293 - Dropping table: users
2025-08-02 20:49:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 20:49:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00123s] {}
2025-08-02 20:49:47 - app.main - INFO - main.py:295 - Dropped table: users
2025-08-02 20:49:47 - app.main - INFO - main.py:301 - Creating database tables in order...
2025-08-02 20:49:47 - app.main - INFO - main.py:304 - Creating table: users
2025-08-02 20:49:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00118s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 20:49:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00131s] {}
2025-08-02 20:49:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 20:49:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00114s] {}
2025-08-02 20:49:47 - app.main - INFO - main.py:306 - Table created: users
2025-08-02 20:49:47 - app.main - INFO - main.py:304 - Creating table: teams
2025-08-02 20:49:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2458s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:49:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00165s] {}
2025-08-02 20:49:47 - app.main - INFO - main.py:306 - Table created: teams
2025-08-02 20:49:47 - app.main - INFO - main.py:304 - Creating table: projects
2025-08-02 20:49:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4119s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 20:49:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00109s] {}
2025-08-02 20:49:47 - app.main - INFO - main.py:306 - Table created: projects
2025-08-02 20:49:47 - app.main - INFO - main.py:304 - Creating table: environments
2025-08-02 20:49:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5777s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 20:49:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00119s] {}
2025-08-02 20:49:47 - app.main - INFO - main.py:306 - Table created: environments
2025-08-02 20:49:47 - app.main - INFO - main.py:304 - Creating table: test_cases
2025-08-02 20:49:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7414s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00128s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.08204s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1648s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 20:49:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00154s] {}
2025-08-02 20:49:48 - app.main - INFO - main.py:306 - Table created: test_cases
2025-08-02 20:49:48 - app.main - INFO - main.py:304 - Creating table: test_steps
2025-08-02 20:49:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.154s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 20:49:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00120s] {}
2025-08-02 20:49:48 - app.main - INFO - main.py:306 - Table created: test_steps
2025-08-02 20:49:48 - app.main - INFO - main.py:304 - Creating table: test_plans
2025-08-02 20:49:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.319s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5824s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:49:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00166s] {}
2025-08-02 20:49:48 - app.main - INFO - main.py:306 - Table created: test_plans
2025-08-02 20:49:48 - app.main - INFO - main.py:304 - Creating table: test_plan_test_cases
2025-08-02 20:49:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.577s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:49:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00148s] {}
2025-08-02 20:49:48 - app.main - INFO - main.py:306 - Table created: test_plan_test_cases
2025-08-02 20:49:48 - app.main - INFO - main.py:304 - Creating table: test_executions
2025-08-02 20:49:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.746s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.006s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 20:49:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00213s] {}
2025-08-02 20:49:49 - app.main - INFO - main.py:306 - Table created: test_executions
2025-08-02 20:49:49 - app.main - INFO - main.py:304 - Creating table: comments
2025-08-02 20:49:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.994s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.254s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 20:49:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00155s] {}
2025-08-02 20:49:49 - app.main - INFO - main.py:306 - Table created: comments
2025-08-02 20:49:49 - app.main - INFO - main.py:304 - Creating table: team_members
2025-08-02 20:49:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.244s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:49:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00152s] {}
2025-08-02 20:49:49 - app.main - INFO - main.py:306 - Table created: team_members
2025-08-02 20:49:49 - app.main - INFO - main.py:304 - Creating table: attachments
2025-08-02 20:49:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.412s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 20:49:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00151s] {}
2025-08-02 20:49:49 - app.main - INFO - main.py:306 - Table created: attachments
2025-08-02 20:49:49 - app.main - INFO - main.py:304 - Creating table: activity_logs
2025-08-02 20:49:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.577s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:49:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00142s] {}
2025-08-02 20:49:49 - app.main - INFO - main.py:306 - Table created: activity_logs
2025-08-02 20:49:49 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 20:49:50 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x0000028003CDFEF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 20:49:50 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x0000028003CDFEF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 20:49:50 - app.main - INFO - main.py:311 - All database tables created successfully
2025-08-02 20:49:51 - app.main - INFO - main.py:319 - Application shutdown
2025-08-02 20:49:51 - root - INFO - main.py:87 - ================================================================================
2025-08-02 20:49:51 - root - INFO - main.py:88 - Application starting with enhanced logging (level: INFO)
2025-08-02 20:49:51 - root - INFO - main.py:89 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 20:49:51 - root - INFO - main.py:90 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 20:49:51 - root - INFO - main.py:91 - ================================================================================
2025-08-02 20:49:53 - app.main - INFO - main.py:1371 - Initializing API routers...
2025-08-02 20:49:53 - app.main - INFO - main.py:1383 - API routers initialized successfully
2025-08-02 20:49:53 - app.main - INFO - main.py:245 - Starting database initialization...
2025-08-02 20:49:53 - root - INFO - main.py:87 - ================================================================================
2025-08-02 20:49:53 - root - INFO - main.py:88 - Application starting with enhanced logging (level: DEBUG)
2025-08-02 20:49:53 - root - INFO - main.py:89 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 20:49:53 - root - INFO - main.py:90 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 20:49:53 - root - INFO - main.py:91 - ================================================================================
2025-08-02 20:49:53 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-08-02 20:49:53 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-08-02 20:49:53 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-08-02 20:49:53 - passlib.registry - DEBUG - registry.py:296 - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
2025-08-02 20:49:53 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x0000021F0B1EFEF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 20:49:53 - app.api.v1.routes.auth - DEBUG - auth.py:34 - Environment variables: {
  "ALLUSERSPROFILE": "C:\\ProgramData",
  "APPDATA": "C:\\Users\\kunal\\AppData\\Roaming",
  "C:\\USERS\\KUNAL\\DOWNLOADS\\EMERGENTINTELLITEST-MAIN": "C:\\Program Files\\nodejs\\",
  "CHROME_CRASHPAD_PIPE_NAME": "\\\\.\\pipe\\crashpad_11300_YGFLEAWXLMRVRBOK",
  "COMMONPROGRAMFILES": "C:\\Program Files\\Common Files",
  "COMMONPROGRAMFILES(X86)": "C:\\Program Files (x86)\\Common Files",
  "COMMONPROGRAMW6432": "C:\\Program Files\\Common Files",
  "COMPUTERNAME": "KUNALDELL",
  "COMSPEC": "C:\\Windows\\system32\\cmd.exe",
  "DRIVERDATA": "C:\\Windows\\System32\\Drivers\\DriverData",
  "EFC_5864_1592913036": "1",
  "HOMEDRIVE": "C:",
  "HOMEPATH": "\\Users\\kunal",
  "LOCALAPPDATA": "C:\\Users\\kunal\\AppData\\Local",
  "LOGONSERVER": "\\\\KUNALDELL",
  "LOG_LEVEL": "DEBUG",
  "NUMBER_OF_PROCESSORS": "22",
  "ONEDRIVE": "C:\\Users\\kunal\\OneDrive",
  "ONEDRIVECONSUMER": "C:\\Users\\kunal\\OneDrive",
  "ORIGINAL_XDG_CURRENT_DESKTOP": "undefined",
  "OS": "Windows_NT",
  "PATH": "C:\\Program Files\\Python312\\Scripts\\;C:\\Program Files\\Python312\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files\\Git\\cmd;c:\\Users\\kunal\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Program Files\\nodejs\\;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\kunal\\AppData\\Local\\Programs\\Windsurf\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WinGet\\Links;C:\\Program Files\\nodejs;C:\\Users\\kunal\\AppData\\Roaming\\npm;C:\\Program Files\\Git\\bin;C:\\Users\\kunal\\.deno\\bin;c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\scripts\\noConfigScripts",
  "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL",
  "POSTGRESQL": "C:\\Program Files\\PostgreSQL\\17\\bin\\bin",
  "PROCESSOR_ARCHITECTURE": "AMD64",
  "PROCESSOR_IDENTIFIER": "Intel64 Family 6 Model 170 Stepping 4, GenuineIntel",
  "PROCESSOR_LEVEL": "6",
  "PROCESSOR_REVISION": "aa04",
  "PROGRAMDATA": "C:\\ProgramData",
  "PROGRAMFILES": "C:\\Program Files",
  "PROGRAMFILES(X86)": "C:\\Program Files (x86)",
  "PROGRAMW6432": "C:\\Program Files",
  "PSMODULEPATH": "C:\\Users\\kunal\\OneDrive\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules",
  "PUBLIC": "C:\\Users\\Public",
  "PYTHONUNBUFFERED": "1",
  "SESSIONNAME": "Console",
  "SYSTEMDRIVE": "C:",
  "SYSTEMROOT": "C:\\Windows",
  "TEMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "TMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "USERDOMAIN": "KUNALDELL",
  "USERDOMAIN_ROAMINGPROFILE": "KUNALDELL",
  "USERNAME": "kunal",
  "USERPROFILE": "C:\\Users\\kunal",
  "WINDIR": "C:\\Windows",
  "ZES_ENABLE_SYSMAN": "1",
  "PAGER": "cat",
  "TERM_PROGRAM": "vscode",
  "TERM_PROGRAM_VERSION": "1.99.3",
  "LANG": "en_US.UTF-8",
  "COLORTERM": "truecolor",
  "VSCODE_GIT_IPC_HANDLE": "\\\\.\\pipe\\vscode-git-fccd44132c-sock",
  "PYDEVD_DISABLE_FILE_VALIDATION": "1",
  "VSCODE_DEBUGPY_ADAPTER_ENDPOINTS": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\.noConfigDebugAdapterEndpoints\\endpoint-875e116b470e769c.txt",
  "BUNDLED_DEBUGPY_PATH": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\libs\\debugpy",
  "VSCODE_INJECTION": "1",
  "PROJECT_NAME": "IntelliTest AI Automation Platform",
  "ACCESS_TOKEN_EXPIRE_MINUTES": "11520",
  "SERVER_NAME": "localhost",
  "SERVER_HOST": "http://localhost:8001",
  "DATABASE_URL": "postgresql://postgres.lflecyuvttemfoyixngi:Ayeshaayesha121@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres",
  "SMTP_TLS": "true",
  "SMTP_PORT": "587",
  "SMTP_HOST": "smtp.gmail.com",
  "SMTP_USER": "your-email@gmail.com",
  "EMAILS_FROM_EMAIL": "your-email@gmail.com",
  "EMAILS_FROM_NAME": "IntelliTest Platform",
  "OPENAI_API_KEY": "your-openai-api-key-here",
  "AWS_ACCESS_KEY_ID": "your-aws-access-key",
  "AWS_DEFAULT_REGION": "us-east-1",
  "UPLOAD_DIR": "uploads",
  "MAX_UPLOAD_SIZE": "10485760",
  "ALLOWED_FILE_TYPES": "jpg,jpeg,png,gif,pdf,txt,csv,json",
  "TESTING": "false"
}
2025-08-02 20:49:53 - app.api.v1.routes.auth - DEBUG - auth.py:45 - Database URL: postgresql://postgres.lflecyuvttemfoyixngi:*****@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres
2025-08-02 20:49:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 20:49:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:49:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 20:49:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:49:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 20:49:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:49:54 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x0000021F0B1EFEF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 20:49:54 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x0000021F0B1EFEF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 20:49:54 - app.main - INFO - main.py:275 - Disabling foreign key constraints...
2025-08-02 20:49:54 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 20:49:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 20:49:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00309s] {}
2025-08-02 20:49:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 20:49:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00103s] {}
2025-08-02 20:49:54 - app.main - INFO - main.py:290 - Dropping existing tables...
2025-08-02 20:49:54 - app.main - INFO - main.py:293 - Dropping table: activity_logs
2025-08-02 20:49:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 20:49:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00096s] {}
2025-08-02 20:49:54 - app.main - INFO - main.py:295 - Dropped table: activity_logs
2025-08-02 20:49:54 - app.main - INFO - main.py:293 - Dropping table: attachments
2025-08-02 20:49:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 20:49:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00096s] {}
2025-08-02 20:49:54 - app.main - INFO - main.py:1371 - Initializing API routers...
2025-08-02 20:49:54 - app.main - INFO - main.py:1383 - API routers initialized successfully
2025-08-02 20:49:54 - app.main - INFO - main.py:245 - Starting database initialization...
2025-08-02 20:49:54 - app.main - INFO - main.py:295 - Dropped table: attachments
2025-08-02 20:49:54 - app.main - INFO - main.py:293 - Dropping table: comments
2025-08-02 20:49:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 20:49:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00087s] {}
2025-08-02 20:49:54 - app.main - INFO - main.py:295 - Dropped table: comments
2025-08-02 20:49:54 - app.main - INFO - main.py:293 - Dropping table: environments
2025-08-02 20:49:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 20:49:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00052s] {}
2025-08-02 20:49:54 - app.main - INFO - main.py:295 - Dropped table: environments
2025-08-02 20:49:54 - app.main - INFO - main.py:293 - Dropping table: projects
2025-08-02 20:49:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 20:49:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00039s] {}
2025-08-02 20:49:55 - app.main - INFO - main.py:295 - Dropped table: projects
2025-08-02 20:49:55 - app.main - INFO - main.py:293 - Dropping table: team_members
2025-08-02 20:49:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 20:49:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00048s] {}
2025-08-02 20:49:55 - app.main - INFO - main.py:295 - Dropped table: team_members
2025-08-02 20:49:55 - app.main - INFO - main.py:293 - Dropping table: teams
2025-08-02 20:49:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 20:49:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00058s] {}
2025-08-02 20:49:55 - app.main - INFO - main.py:295 - Dropped table: teams
2025-08-02 20:49:55 - app.main - INFO - main.py:293 - Dropping table: test_cases
2025-08-02 20:49:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 20:49:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00113s] {}
2025-08-02 20:49:55 - app.main - INFO - main.py:295 - Dropped table: test_cases
2025-08-02 20:49:55 - app.main - INFO - main.py:293 - Dropping table: test_executions
2025-08-02 20:49:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 20:49:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00109s] {}
2025-08-02 20:49:55 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x000001F901F57EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 20:49:55 - app.main - INFO - main.py:295 - Dropped table: test_executions
2025-08-02 20:49:55 - app.main - INFO - main.py:293 - Dropping table: test_plan_test_cases
2025-08-02 20:49:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 20:49:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00052s] {}
2025-08-02 20:49:55 - app.main - INFO - main.py:295 - Dropped table: test_plan_test_cases
2025-08-02 20:49:55 - app.main - INFO - main.py:293 - Dropping table: test_plans
2025-08-02 20:49:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 20:49:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00093s] {}
2025-08-02 20:49:55 - app.main - INFO - main.py:295 - Dropped table: test_plans
2025-08-02 20:49:55 - app.main - INFO - main.py:293 - Dropping table: test_steps
2025-08-02 20:49:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 20:49:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00079s] {}
2025-08-02 20:49:55 - app.main - INFO - main.py:295 - Dropped table: test_steps
2025-08-02 20:49:55 - app.main - INFO - main.py:293 - Dropping table: users
2025-08-02 20:49:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 20:49:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00088s] {}
2025-08-02 20:49:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 20:49:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:49:55 - app.main - INFO - main.py:295 - Dropped table: users
2025-08-02 20:49:55 - app.main - INFO - main.py:301 - Creating database tables in order...
2025-08-02 20:49:55 - app.main - INFO - main.py:304 - Creating table: users
2025-08-02 20:49:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00149s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 20:49:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00131s] {}
2025-08-02 20:49:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 20:49:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:49:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 20:49:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00151s] {}
2025-08-02 20:49:55 - app.main - INFO - main.py:306 - Table created: users
2025-08-02 20:49:55 - app.main - INFO - main.py:304 - Creating table: teams
2025-08-02 20:49:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2395s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 20:49:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00136s] {}
2025-08-02 20:49:56 - app.main - INFO - main.py:306 - Table created: teams
2025-08-02 20:49:56 - app.main - INFO - main.py:304 - Creating table: projects
2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.3997s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:56 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x000001F901F57EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 20:49:56 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x000001F901F57EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 20:49:56 - app.main - INFO - main.py:275 - Disabling foreign key constraints...
2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00184s] {}
2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00117s] {}
2025-08-02 20:49:56 - app.main - INFO - main.py:306 - Table created: projects
2025-08-02 20:49:56 - app.main - INFO - main.py:304 - Creating table: environments
2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5601s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00144s] {}
2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00154s] {}
2025-08-02 20:49:56 - app.main - INFO - main.py:290 - Dropping existing tables...
2025-08-02 20:49:56 - app.main - INFO - main.py:293 - Dropping table: activity_logs
2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00107s] {}
2025-08-02 20:49:56 - app.main - INFO - main.py:306 - Table created: environments
2025-08-02 20:49:56 - app.main - INFO - main.py:304 - Creating table: test_cases
2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7265s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00137s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.07946s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.157s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00143s] {}
2025-08-02 20:49:56 - app.main - INFO - main.py:306 - Table created: test_cases
2025-08-02 20:49:56 - app.main - INFO - main.py:304 - Creating table: test_steps
2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.126s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00215s] {}
2025-08-02 20:49:56 - app.main - INFO - main.py:306 - Table created: test_steps
2025-08-02 20:49:56 - app.main - INFO - main.py:304 - Creating table: test_plans
2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.287s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5581s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:49:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00127s] {}
2025-08-02 20:49:57 - app.main - INFO - main.py:306 - Table created: test_plans
2025-08-02 20:49:57 - app.main - INFO - main.py:304 - Creating table: test_plan_test_cases
2025-08-02 20:49:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.525s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:49:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00184s] {}
2025-08-02 20:49:57 - app.main - INFO - main.py:306 - Table created: test_plan_test_cases
2025-08-02 20:49:57 - app.main - INFO - main.py:304 - Creating table: test_executions
2025-08-02 20:49:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.689s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.961s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 20:49:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00216s] {}
2025-08-02 20:49:57 - app.main - INFO - main.py:306 - Table created: test_executions
2025-08-02 20:49:57 - app.main - INFO - main.py:304 - Creating table: comments
2025-08-02 20:49:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.934s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.209s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 20:49:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00169s] {}
2025-08-02 20:49:57 - app.main - INFO - main.py:306 - Table created: comments
2025-08-02 20:49:57 - app.main - INFO - main.py:304 - Creating table: team_members
2025-08-02 20:49:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.186s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:49:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00101s] {}
2025-08-02 20:49:58 - app.main - INFO - main.py:306 - Table created: team_members
2025-08-02 20:49:58 - app.main - INFO - main.py:304 - Creating table: attachments
2025-08-02 20:49:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.347s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 20:49:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00131s] {}
2025-08-02 20:49:58 - app.main - INFO - main.py:306 - Table created: attachments
2025-08-02 20:49:58 - app.main - INFO - main.py:304 - Creating table: activity_logs
2025-08-02 20:49:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.508s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:49:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00171s] {}
2025-08-02 20:49:58 - app.main - INFO - main.py:306 - Table created: activity_logs
2025-08-02 20:49:58 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 20:49:58 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x0000021F0B1EFEF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 20:49:58 - app.main - INFO - main.py:295 - Dropped table: activity_logs
2025-08-02 20:49:58 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x0000021F0B1EFEF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 20:49:58 - app.main - INFO - main.py:293 - Dropping table: attachments
2025-08-02 20:49:58 - app.main - INFO - main.py:311 - All database tables created successfully
2025-08-02 20:49:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 20:49:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00077s] {}
2025-08-02 20:49:58 - app.main - INFO - main.py:295 - Dropped table: attachments
2025-08-02 20:49:58 - app.main - INFO - main.py:293 - Dropping table: comments
2025-08-02 20:49:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 20:49:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00109s] {}
2025-08-02 20:49:58 - app.main - INFO - main.py:295 - Dropped table: comments
2025-08-02 20:49:58 - app.main - INFO - main.py:293 - Dropping table: environments
2025-08-02 20:49:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 20:49:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00070s] {}
2025-08-02 20:49:58 - app.main - INFO - main.py:295 - Dropped table: environments
2025-08-02 20:49:58 - app.main - INFO - main.py:293 - Dropping table: projects
2025-08-02 20:49:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 20:49:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00107s] {}
2025-08-02 20:49:58 - app.main - INFO - main.py:295 - Dropped table: projects
2025-08-02 20:49:58 - app.main - INFO - main.py:293 - Dropping table: team_members
2025-08-02 20:49:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 20:49:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00099s] {}
2025-08-02 20:49:58 - app.main - INFO - main.py:295 - Dropped table: team_members
2025-08-02 20:49:58 - app.main - INFO - main.py:293 - Dropping table: teams
2025-08-02 20:49:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 20:49:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00091s] {}
2025-08-02 20:49:58 - app.main - INFO - main.py:295 - Dropped table: teams
2025-08-02 20:49:58 - app.main - INFO - main.py:293 - Dropping table: test_cases
2025-08-02 20:49:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 20:49:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00095s] {}
2025-08-02 20:49:59 - app.main - INFO - main.py:295 - Dropped table: test_cases
2025-08-02 20:49:59 - app.main - INFO - main.py:293 - Dropping table: test_executions
2025-08-02 20:49:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 20:49:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00082s] {}
2025-08-02 20:49:59 - app.main - INFO - main.py:295 - Dropped table: test_executions
2025-08-02 20:49:59 - app.main - INFO - main.py:293 - Dropping table: test_plan_test_cases
2025-08-02 20:49:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 20:49:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00083s] {}
2025-08-02 20:49:59 - app.main - INFO - main.py:295 - Dropped table: test_plan_test_cases
2025-08-02 20:49:59 - app.main - INFO - main.py:293 - Dropping table: test_plans
2025-08-02 20:49:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 20:49:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00054s] {}
2025-08-02 20:49:59 - app.main - INFO - main.py:295 - Dropped table: test_plans
2025-08-02 20:49:59 - app.main - INFO - main.py:293 - Dropping table: test_steps
2025-08-02 20:49:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 20:49:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00075s] {}
2025-08-02 20:49:59 - app.main - INFO - main.py:295 - Dropped table: test_steps
2025-08-02 20:49:59 - app.main - INFO - main.py:293 - Dropping table: users
2025-08-02 20:49:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 20:49:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00067s] {}
2025-08-02 20:49:59 - app.main - INFO - main.py:295 - Dropped table: users
2025-08-02 20:49:59 - app.main - INFO - main.py:301 - Creating database tables in order...
2025-08-02 20:49:59 - app.main - INFO - main.py:304 - Creating table: users
2025-08-02 20:49:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00121s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 20:49:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00174s] {}
2025-08-02 20:49:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 20:49:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00111s] {}
2025-08-02 20:49:59 - app.main - INFO - main.py:306 - Table created: users
2025-08-02 20:49:59 - app.main - INFO - main.py:304 - Creating table: teams
2025-08-02 20:49:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2668s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:49:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:49:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00187s] {}
2025-08-02 20:49:59 - app.main - INFO - main.py:306 - Table created: teams
2025-08-02 20:49:59 - app.main - INFO - main.py:304 - Creating table: projects
2025-08-02 20:49:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:49:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4516s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 20:50:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00201s] {}
2025-08-02 20:50:00 - app.main - INFO - main.py:306 - Table created: projects
2025-08-02 20:50:00 - app.main - INFO - main.py:304 - Creating table: environments
2025-08-02 20:50:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6326s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 20:50:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00279s] {}
2025-08-02 20:50:00 - app.main - INFO - main.py:306 - Table created: environments
2025-08-02 20:50:00 - app.main - INFO - main.py:304 - Creating table: test_cases
2025-08-02 20:50:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.8136s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00130s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.0884s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1777s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 20:50:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00118s] {}
2025-08-02 20:50:00 - app.main - INFO - main.py:306 - Table created: test_cases
2025-08-02 20:50:00 - app.main - INFO - main.py:304 - Creating table: test_steps
2025-08-02 20:50:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.261s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 20:50:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00092s] {}
2025-08-02 20:50:00 - app.main - INFO - main.py:306 - Table created: test_steps
2025-08-02 20:50:00 - app.main - INFO - main.py:304 - Creating table: test_plans
2025-08-02 20:50:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.443s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6284s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:50:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00154s] {}
2025-08-02 20:50:01 - app.main - INFO - main.py:306 - Table created: test_plans
2025-08-02 20:50:01 - app.main - INFO - main.py:304 - Creating table: test_plan_test_cases
2025-08-02 20:50:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.709s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:50:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00135s] {}
2025-08-02 20:50:01 - app.main - INFO - main.py:306 - Table created: test_plan_test_cases
2025-08-02 20:50:01 - app.main - INFO - main.py:304 - Creating table: test_executions
2025-08-02 20:50:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.891s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.077s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 20:50:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00129s] {}
2025-08-02 20:50:01 - app.main - INFO - main.py:306 - Table created: test_executions
2025-08-02 20:50:01 - app.main - INFO - main.py:304 - Creating table: comments
2025-08-02 20:50:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.157s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.342s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 20:50:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00182s] {}
2025-08-02 20:50:01 - app.main - INFO - main.py:306 - Table created: comments
2025-08-02 20:50:01 - app.main - INFO - main.py:304 - Creating table: team_members
2025-08-02 20:50:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.424s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:50:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00210s] {}
2025-08-02 20:50:02 - app.main - INFO - main.py:306 - Table created: team_members
2025-08-02 20:50:02 - app.main - INFO - main.py:304 - Creating table: attachments
2025-08-02 20:50:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.602s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 20:50:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00151s] {}
2025-08-02 20:50:02 - app.main - INFO - main.py:306 - Table created: attachments
2025-08-02 20:50:02 - app.main - INFO - main.py:304 - Creating table: activity_logs
2025-08-02 20:50:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.779s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:50:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00120s] {}
2025-08-02 20:50:02 - app.main - INFO - main.py:306 - Table created: activity_logs
2025-08-02 20:50:02 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 20:50:02 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x000001F901F57EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 20:50:02 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x000001F901F57EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 20:50:02 - app.main - INFO - main.py:311 - All database tables created successfully
2025-08-02 20:50:04 - root - INFO - main.py:87 - ================================================================================
2025-08-02 20:50:04 - root - INFO - main.py:88 - Application starting with enhanced logging (level: DEBUG)
2025-08-02 20:50:04 - root - INFO - main.py:89 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 20:50:04 - root - INFO - main.py:90 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 20:50:04 - root - INFO - main.py:91 - ================================================================================
2025-08-02 20:50:04 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-08-02 20:50:04 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-08-02 20:50:04 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-08-02 20:50:04 - passlib.registry - DEBUG - registry.py:296 - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
2025-08-02 20:50:04 - app.api.v1.routes.auth - DEBUG - auth.py:34 - Environment variables: {
  "ALLUSERSPROFILE": "C:\\ProgramData",
  "APPDATA": "C:\\Users\\kunal\\AppData\\Roaming",
  "C:\\USERS\\KUNAL\\DOWNLOADS\\EMERGENTINTELLITEST-MAIN": "C:\\Program Files\\nodejs\\",
  "CHROME_CRASHPAD_PIPE_NAME": "\\\\.\\pipe\\crashpad_11300_YGFLEAWXLMRVRBOK",
  "COMMONPROGRAMFILES": "C:\\Program Files\\Common Files",
  "COMMONPROGRAMFILES(X86)": "C:\\Program Files (x86)\\Common Files",
  "COMMONPROGRAMW6432": "C:\\Program Files\\Common Files",
  "COMPUTERNAME": "KUNALDELL",
  "COMSPEC": "C:\\Windows\\system32\\cmd.exe",
  "DRIVERDATA": "C:\\Windows\\System32\\Drivers\\DriverData",
  "EFC_5864_1592913036": "1",
  "HOMEDRIVE": "C:",
  "HOMEPATH": "\\Users\\kunal",
  "LOCALAPPDATA": "C:\\Users\\kunal\\AppData\\Local",
  "LOGONSERVER": "\\\\KUNALDELL",
  "LOG_LEVEL": "DEBUG",
  "NUMBER_OF_PROCESSORS": "22",
  "ONEDRIVE": "C:\\Users\\kunal\\OneDrive",
  "ONEDRIVECONSUMER": "C:\\Users\\kunal\\OneDrive",
  "ORIGINAL_XDG_CURRENT_DESKTOP": "undefined",
  "OS": "Windows_NT",
  "PATH": "C:\\Program Files\\Python312\\Scripts\\;C:\\Program Files\\Python312\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files\\Git\\cmd;c:\\Users\\kunal\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Program Files\\nodejs\\;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\kunal\\AppData\\Local\\Programs\\Windsurf\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WinGet\\Links;C:\\Program Files\\nodejs;C:\\Users\\kunal\\AppData\\Roaming\\npm;C:\\Program Files\\Git\\bin;C:\\Users\\kunal\\.deno\\bin;c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\scripts\\noConfigScripts",
  "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL",
  "POSTGRESQL": "C:\\Program Files\\PostgreSQL\\17\\bin\\bin",
  "PROCESSOR_ARCHITECTURE": "AMD64",
  "PROCESSOR_IDENTIFIER": "Intel64 Family 6 Model 170 Stepping 4, GenuineIntel",
  "PROCESSOR_LEVEL": "6",
  "PROCESSOR_REVISION": "aa04",
  "PROGRAMDATA": "C:\\ProgramData",
  "PROGRAMFILES": "C:\\Program Files",
  "PROGRAMFILES(X86)": "C:\\Program Files (x86)",
  "PROGRAMW6432": "C:\\Program Files",
  "PSMODULEPATH": "C:\\Users\\kunal\\OneDrive\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules",
  "PUBLIC": "C:\\Users\\Public",
  "PYTHONUNBUFFERED": "1",
  "SESSIONNAME": "Console",
  "SYSTEMDRIVE": "C:",
  "SYSTEMROOT": "C:\\Windows",
  "TEMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "TMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "USERDOMAIN": "KUNALDELL",
  "USERDOMAIN_ROAMINGPROFILE": "KUNALDELL",
  "USERNAME": "kunal",
  "USERPROFILE": "C:\\Users\\kunal",
  "WINDIR": "C:\\Windows",
  "ZES_ENABLE_SYSMAN": "1",
  "PAGER": "cat",
  "TERM_PROGRAM": "vscode",
  "TERM_PROGRAM_VERSION": "1.99.3",
  "LANG": "en_US.UTF-8",
  "COLORTERM": "truecolor",
  "VSCODE_GIT_IPC_HANDLE": "\\\\.\\pipe\\vscode-git-fccd44132c-sock",
  "PYDEVD_DISABLE_FILE_VALIDATION": "1",
  "VSCODE_DEBUGPY_ADAPTER_ENDPOINTS": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\.noConfigDebugAdapterEndpoints\\endpoint-875e116b470e769c.txt",
  "BUNDLED_DEBUGPY_PATH": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\libs\\debugpy",
  "VSCODE_INJECTION": "1",
  "PROJECT_NAME": "IntelliTest AI Automation Platform",
  "ACCESS_TOKEN_EXPIRE_MINUTES": "11520",
  "SERVER_NAME": "localhost",
  "SERVER_HOST": "http://localhost:8001",
  "DATABASE_URL": "postgresql://postgres.lflecyuvttemfoyixngi:Ayeshaayesha121@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres",
  "SMTP_TLS": "true",
  "SMTP_PORT": "587",
  "SMTP_HOST": "smtp.gmail.com",
  "SMTP_USER": "your-email@gmail.com",
  "EMAILS_FROM_EMAIL": "your-email@gmail.com",
  "EMAILS_FROM_NAME": "IntelliTest Platform",
  "OPENAI_API_KEY": "your-openai-api-key-here",
  "AWS_ACCESS_KEY_ID": "your-aws-access-key",
  "AWS_DEFAULT_REGION": "us-east-1",
  "UPLOAD_DIR": "uploads",
  "MAX_UPLOAD_SIZE": "10485760",
  "ALLOWED_FILE_TYPES": "jpg,jpeg,png,gif,pdf,txt,csv,json",
  "TESTING": "false"
}
2025-08-02 20:50:04 - app.api.v1.routes.auth - DEBUG - auth.py:45 - Database URL: postgresql://postgres.lflecyuvttemfoyixngi:*****@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres
2025-08-02 20:50:05 - app.main - INFO - main.py:1371 - Initializing API routers...
2025-08-02 20:50:05 - app.main - INFO - main.py:1383 - API routers initialized successfully
2025-08-02 20:50:05 - app.main - INFO - main.py:245 - Starting database initialization...
2025-08-02 20:50:06 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x000002658EFAFEF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 20:50:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 20:50:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:50:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 20:50:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:50:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 20:50:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:50:07 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x000002658EFAFEF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 20:50:07 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x000002658EFAFEF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 20:50:07 - app.main - INFO - main.py:275 - Disabling foreign key constraints...
2025-08-02 20:50:07 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 20:50:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 20:50:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00136s] {}
2025-08-02 20:50:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 20:50:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00151s] {}
2025-08-02 20:50:07 - app.main - INFO - main.py:290 - Dropping existing tables...
2025-08-02 20:50:07 - app.main - INFO - main.py:293 - Dropping table: activity_logs
2025-08-02 20:50:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 20:50:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00091s] {}
2025-08-02 20:50:07 - app.main - INFO - main.py:295 - Dropped table: activity_logs
2025-08-02 20:50:07 - app.main - INFO - main.py:293 - Dropping table: attachments
2025-08-02 20:50:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 20:50:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00109s] {}
2025-08-02 20:50:07 - app.main - INFO - main.py:295 - Dropped table: attachments
2025-08-02 20:50:07 - app.main - INFO - main.py:293 - Dropping table: comments
2025-08-02 20:50:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 20:50:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00066s] {}
2025-08-02 20:50:07 - app.main - INFO - main.py:295 - Dropped table: comments
2025-08-02 20:50:07 - app.main - INFO - main.py:293 - Dropping table: environments
2025-08-02 20:50:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 20:50:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00062s] {}
2025-08-02 20:50:07 - app.main - INFO - main.py:295 - Dropped table: environments
2025-08-02 20:50:07 - app.main - INFO - main.py:293 - Dropping table: projects
2025-08-02 20:50:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 20:50:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00069s] {}
2025-08-02 20:50:07 - app.main - INFO - main.py:295 - Dropped table: projects
2025-08-02 20:50:07 - app.main - INFO - main.py:293 - Dropping table: team_members
2025-08-02 20:50:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 20:50:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00102s] {}
2025-08-02 20:50:07 - app.main - INFO - main.py:295 - Dropped table: team_members
2025-08-02 20:50:07 - app.main - INFO - main.py:293 - Dropping table: teams
2025-08-02 20:50:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 20:50:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00094s] {}
2025-08-02 20:50:08 - app.main - INFO - main.py:295 - Dropped table: teams
2025-08-02 20:50:08 - app.main - INFO - main.py:293 - Dropping table: test_cases
2025-08-02 20:50:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 20:50:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00111s] {}
2025-08-02 20:50:08 - app.main - INFO - main.py:295 - Dropped table: test_cases
2025-08-02 20:50:08 - app.main - INFO - main.py:293 - Dropping table: test_executions
2025-08-02 20:50:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 20:50:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00103s] {}
2025-08-02 20:50:08 - app.main - INFO - main.py:295 - Dropped table: test_executions
2025-08-02 20:50:08 - app.main - INFO - main.py:293 - Dropping table: test_plan_test_cases
2025-08-02 20:50:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 20:50:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00106s] {}
2025-08-02 20:50:08 - app.main - INFO - main.py:295 - Dropped table: test_plan_test_cases
2025-08-02 20:50:08 - app.main - INFO - main.py:293 - Dropping table: test_plans
2025-08-02 20:50:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 20:50:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00097s] {}
2025-08-02 20:50:08 - app.main - INFO - main.py:295 - Dropped table: test_plans
2025-08-02 20:50:08 - app.main - INFO - main.py:293 - Dropping table: test_steps
2025-08-02 20:50:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 20:50:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00080s] {}
2025-08-02 20:50:08 - app.main - INFO - main.py:295 - Dropped table: test_steps
2025-08-02 20:50:08 - app.main - INFO - main.py:293 - Dropping table: users
2025-08-02 20:50:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 20:50:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00065s] {}
2025-08-02 20:50:08 - app.main - INFO - main.py:295 - Dropped table: users
2025-08-02 20:50:08 - app.main - INFO - main.py:301 - Creating database tables in order...
2025-08-02 20:50:08 - app.main - INFO - main.py:304 - Creating table: users
2025-08-02 20:50:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00101s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 20:50:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00147s] {}
2025-08-02 20:50:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 20:50:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00101s] {}
2025-08-02 20:50:08 - app.main - INFO - main.py:306 - Table created: users
2025-08-02 20:50:08 - app.main - INFO - main.py:304 - Creating table: teams
2025-08-02 20:50:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.248s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:50:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00142s] {}
2025-08-02 20:50:09 - app.main - INFO - main.py:306 - Table created: teams
2025-08-02 20:50:09 - app.main - INFO - main.py:304 - Creating table: projects
2025-08-02 20:50:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4153s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 20:50:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00112s] {}
2025-08-02 20:50:09 - app.main - INFO - main.py:306 - Table created: projects
2025-08-02 20:50:09 - app.main - INFO - main.py:304 - Creating table: environments
2025-08-02 20:50:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.584s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 20:50:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00109s] {}
2025-08-02 20:50:09 - app.main - INFO - main.py:306 - Table created: environments
2025-08-02 20:50:09 - app.main - INFO - main.py:304 - Creating table: test_cases
2025-08-02 20:50:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7576s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00101s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.08229s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1645s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 20:50:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00201s] {}
2025-08-02 20:50:09 - app.main - INFO - main.py:306 - Table created: test_cases
2025-08-02 20:50:09 - app.main - INFO - main.py:304 - Creating table: test_steps
2025-08-02 20:50:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.17s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 20:50:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00127s] {}
2025-08-02 20:50:09 - app.main - INFO - main.py:306 - Table created: test_steps
2025-08-02 20:50:09 - app.main - INFO - main.py:304 - Creating table: test_plans
2025-08-02 20:50:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.337s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.581s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:50:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00170s] {}
2025-08-02 20:50:10 - app.main - INFO - main.py:306 - Table created: test_plans
2025-08-02 20:50:10 - app.main - INFO - main.py:304 - Creating table: test_plan_test_cases
2025-08-02 20:50:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.591s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:50:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00139s] {}
2025-08-02 20:50:10 - app.main - INFO - main.py:306 - Table created: test_plan_test_cases
2025-08-02 20:50:10 - app.main - INFO - main.py:304 - Creating table: test_executions
2025-08-02 20:50:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.365s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.608s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 20:50:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00183s] {}
2025-08-02 20:50:11 - app.main - INFO - main.py:306 - Table created: test_executions
2025-08-02 20:50:11 - app.main - INFO - main.py:304 - Creating table: comments
2025-08-02 20:50:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.617s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.859s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 20:50:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00165s] {}
2025-08-02 20:50:11 - app.main - INFO - main.py:306 - Table created: comments
2025-08-02 20:50:11 - app.main - INFO - main.py:304 - Creating table: team_members
2025-08-02 20:50:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.87s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:50:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00196s] {}
2025-08-02 20:50:11 - app.main - INFO - main.py:306 - Table created: team_members
2025-08-02 20:50:11 - app.main - INFO - main.py:304 - Creating table: attachments
2025-08-02 20:50:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 3.038s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:11 - app.main - INFO - main.py:319 - Application shutdown
2025-08-02 20:50:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 20:50:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00157s] {}
2025-08-02 20:50:11 - app.main - INFO - main.py:306 - Table created: attachments
2025-08-02 20:50:11 - app.main - INFO - main.py:304 - Creating table: activity_logs
2025-08-02 20:50:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 3.209s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:50:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00180s] {}
2025-08-02 20:50:11 - app.main - INFO - main.py:306 - Table created: activity_logs
2025-08-02 20:50:11 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 20:50:12 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x000002658EFAFEF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 20:50:12 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x000002658EFAFEF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 20:50:12 - app.main - INFO - main.py:311 - All database tables created successfully
2025-08-02 20:50:13 - root - INFO - main.py:87 - ================================================================================
2025-08-02 20:50:13 - root - INFO - main.py:88 - Application starting with enhanced logging (level: INFO)
2025-08-02 20:50:13 - root - INFO - main.py:89 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 20:50:13 - root - INFO - main.py:90 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 20:50:13 - root - INFO - main.py:91 - ================================================================================
2025-08-02 20:50:14 - app.main - INFO - main.py:1371 - Initializing API routers...
2025-08-02 20:50:14 - app.main - INFO - main.py:1383 - API routers initialized successfully
2025-08-02 20:50:14 - app.main - INFO - main.py:245 - Starting database initialization...
2025-08-02 20:50:15 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x0000015C86447EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 20:50:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 20:50:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:50:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 20:50:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:50:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 20:50:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:50:16 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x0000015C86447EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 20:50:16 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x0000015C86447EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 20:50:16 - app.main - INFO - main.py:275 - Disabling foreign key constraints...
2025-08-02 20:50:16 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 20:50:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 20:50:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00187s] {}
2025-08-02 20:50:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 20:50:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00102s] {}
2025-08-02 20:50:16 - app.main - INFO - main.py:290 - Dropping existing tables...
2025-08-02 20:50:16 - app.main - INFO - main.py:293 - Dropping table: activity_logs
2025-08-02 20:50:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 20:50:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00103s] {}
2025-08-02 20:50:16 - app.main - INFO - main.py:295 - Dropped table: activity_logs
2025-08-02 20:50:16 - app.main - INFO - main.py:293 - Dropping table: attachments
2025-08-02 20:50:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 20:50:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00102s] {}
2025-08-02 20:50:16 - app.main - INFO - main.py:295 - Dropped table: attachments
2025-08-02 20:50:16 - app.main - INFO - main.py:293 - Dropping table: comments
2025-08-02 20:50:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 20:50:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00110s] {}
2025-08-02 20:50:16 - app.main - INFO - main.py:295 - Dropped table: comments
2025-08-02 20:50:16 - app.main - INFO - main.py:293 - Dropping table: environments
2025-08-02 20:50:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 20:50:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00084s] {}
2025-08-02 20:50:16 - app.main - INFO - main.py:295 - Dropped table: environments
2025-08-02 20:50:16 - app.main - INFO - main.py:293 - Dropping table: projects
2025-08-02 20:50:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 20:50:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00091s] {}
2025-08-02 20:50:16 - app.main - INFO - main.py:295 - Dropped table: projects
2025-08-02 20:50:16 - app.main - INFO - main.py:293 - Dropping table: team_members
2025-08-02 20:50:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 20:50:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00096s] {}
2025-08-02 20:50:16 - app.main - INFO - main.py:295 - Dropped table: team_members
2025-08-02 20:50:16 - app.main - INFO - main.py:293 - Dropping table: teams
2025-08-02 20:50:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 20:50:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00109s] {}
2025-08-02 20:50:17 - app.main - INFO - main.py:295 - Dropped table: teams
2025-08-02 20:50:17 - app.main - INFO - main.py:293 - Dropping table: test_cases
2025-08-02 20:50:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 20:50:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00098s] {}
2025-08-02 20:50:17 - app.main - INFO - main.py:295 - Dropped table: test_cases
2025-08-02 20:50:17 - app.main - INFO - main.py:293 - Dropping table: test_executions
2025-08-02 20:50:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 20:50:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00091s] {}
2025-08-02 20:50:17 - app.main - INFO - main.py:295 - Dropped table: test_executions
2025-08-02 20:50:17 - app.main - INFO - main.py:293 - Dropping table: test_plan_test_cases
2025-08-02 20:50:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 20:50:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00071s] {}
2025-08-02 20:50:17 - app.main - INFO - main.py:295 - Dropped table: test_plan_test_cases
2025-08-02 20:50:17 - app.main - INFO - main.py:293 - Dropping table: test_plans
2025-08-02 20:50:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 20:50:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00095s] {}
2025-08-02 20:50:17 - app.main - INFO - main.py:295 - Dropped table: test_plans
2025-08-02 20:50:17 - app.main - INFO - main.py:293 - Dropping table: test_steps
2025-08-02 20:50:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 20:50:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00103s] {}
2025-08-02 20:50:17 - app.main - INFO - main.py:295 - Dropped table: test_steps
2025-08-02 20:50:17 - app.main - INFO - main.py:293 - Dropping table: users
2025-08-02 20:50:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 20:50:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00183s] {}
2025-08-02 20:50:17 - app.main - INFO - main.py:295 - Dropped table: users
2025-08-02 20:50:17 - app.main - INFO - main.py:301 - Creating database tables in order...
2025-08-02 20:50:17 - app.main - INFO - main.py:304 - Creating table: users
2025-08-02 20:50:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00201s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 20:50:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00168s] {}
2025-08-02 20:50:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 20:50:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00154s] {}
2025-08-02 20:50:17 - app.main - INFO - main.py:306 - Table created: users
2025-08-02 20:50:18 - app.main - INFO - main.py:304 - Creating table: teams
2025-08-02 20:50:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2982s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:50:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00271s] {}
2025-08-02 20:50:18 - app.main - INFO - main.py:306 - Table created: teams
2025-08-02 20:50:18 - app.main - INFO - main.py:304 - Creating table: projects
2025-08-02 20:50:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5107s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 20:50:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00496s] {}
2025-08-02 20:50:18 - app.main - INFO - main.py:306 - Table created: projects
2025-08-02 20:50:18 - app.main - INFO - main.py:304 - Creating table: environments
2025-08-02 20:50:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7639s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 20:50:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00212s] {}
2025-08-02 20:50:18 - app.main - INFO - main.py:306 - Table created: environments
2025-08-02 20:50:18 - app.main - INFO - main.py:304 - Creating table: test_cases
2025-08-02 20:50:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.9634s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00138s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.08942s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1768s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 20:50:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00192s] {}
2025-08-02 20:50:19 - app.main - INFO - main.py:306 - Table created: test_cases
2025-08-02 20:50:19 - app.main - INFO - main.py:304 - Creating table: test_steps
2025-08-02 20:50:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.421s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 20:50:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00167s] {}
2025-08-02 20:50:19 - app.main - INFO - main.py:306 - Table created: test_steps
2025-08-02 20:50:19 - app.main - INFO - main.py:304 - Creating table: test_plans
2025-08-02 20:50:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.599s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.619s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:50:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00196s] {}
2025-08-02 20:50:19 - app.main - INFO - main.py:306 - Table created: test_plans
2025-08-02 20:50:19 - app.main - INFO - main.py:304 - Creating table: test_plan_test_cases
2025-08-02 20:50:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.863s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:50:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00374s] {}
2025-08-02 20:50:19 - app.main - INFO - main.py:306 - Table created: test_plan_test_cases
2025-08-02 20:50:19 - app.main - INFO - main.py:304 - Creating table: test_executions
2025-08-02 20:50:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.045s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.067s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 20:50:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00384s] {}
2025-08-02 20:50:20 - app.main - INFO - main.py:306 - Table created: test_executions
2025-08-02 20:50:20 - app.main - INFO - main.py:304 - Creating table: comments
2025-08-02 20:50:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.311s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.331s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 20:50:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00179s] {}
2025-08-02 20:50:20 - app.main - INFO - main.py:306 - Table created: comments
2025-08-02 20:50:20 - app.main - INFO - main.py:304 - Creating table: team_members
2025-08-02 20:50:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.573s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:50:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00162s] {}
2025-08-02 20:50:20 - app.main - INFO - main.py:306 - Table created: team_members
2025-08-02 20:50:20 - app.main - INFO - main.py:304 - Creating table: attachments
2025-08-02 20:50:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.748s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 20:50:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00153s] {}
2025-08-02 20:50:20 - app.main - INFO - main.py:306 - Table created: attachments
2025-08-02 20:50:20 - app.main - INFO - main.py:304 - Creating table: activity_logs
2025-08-02 20:50:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.924s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:50:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00149s] {}
2025-08-02 20:50:20 - app.main - INFO - main.py:306 - Table created: activity_logs
2025-08-02 20:50:20 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 20:50:20 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x0000015C86447EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 20:50:20 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x0000015C86447EF0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 20:50:20 - app.main - INFO - main.py:311 - All database tables created successfully
2025-08-02 20:50:27 - app.auth.security - INFO - security.py:142 - 
================================================================================
2025-08-02 20:50:27 - app.auth.security - INFO - security.py:143 - Authenticating request to http://127.0.0.1:8001/api/v1/test-cases/
2025-08-02 20:50:27 - app.auth.security - INFO - security.py:144 - Token: eyJhbGciOiJIUzI1NiIs...
2025-08-02 20:50:27 - app.auth.security - INFO - security.py:148 - Decoding JWT token...
2025-08-02 20:50:27 - app.auth.security - INFO - security.py:150 - Decoded payload: {'sub': 'd6663135-0f41-403f-bccb-684231c91a81', 'exp': 1754148099}
2025-08-02 20:50:27 - app.auth.security - INFO - security.py:157 - Looking up user with ID: d6663135-0f41-403f-bccb-684231c91a81
2025-08-02 20:50:27 - app.auth.security - ERROR - security.py:191 - Unexpected error during authentication: 'AsyncSession' object has no attribute 'query'
2025-08-02 20:50:27 - app.auth.security - ERROR - security.py:192 - Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 160, in get_current_user
    user = db.query(models.User).filter(models.User.id == user_id).first()
           ^^^^^^^^
AttributeError: 'AsyncSession' object has no attribute 'query'

2025-08-02 20:50:27 - app.db.session - ERROR - session.py:101 - Database session error: 500: An error occurred during authentication: 'AsyncSession' object has no attribute 'query'
2025-08-02 20:50:27 - app.main - WARNING - main.py:381 - HTTP Exception: 500 - An error occurred during authentication: 'AsyncSession' object has no attribute 'query' - Path: /api/v1/test-cases/
2025-08-02 20:50:50 - app.main - INFO - main.py:319 - Application shutdown
2025-08-02 20:50:52 - root - INFO - main.py:87 - ================================================================================
2025-08-02 20:50:52 - root - INFO - main.py:88 - Application starting with enhanced logging (level: DEBUG)
2025-08-02 20:50:52 - root - INFO - main.py:89 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 20:50:52 - root - INFO - main.py:90 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 20:50:52 - root - INFO - main.py:91 - ================================================================================
2025-08-02 20:50:52 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-08-02 20:50:52 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-08-02 20:50:52 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-08-02 20:50:52 - passlib.registry - DEBUG - registry.py:296 - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
2025-08-02 20:50:52 - app.api.v1.routes.auth - DEBUG - auth.py:34 - Environment variables: {
  "ALLUSERSPROFILE": "C:\\ProgramData",
  "APPDATA": "C:\\Users\\kunal\\AppData\\Roaming",
  "C:\\USERS\\KUNAL\\DOWNLOADS\\EMERGENTINTELLITEST-MAIN": "C:\\Program Files\\nodejs\\",
  "CHROME_CRASHPAD_PIPE_NAME": "\\\\.\\pipe\\crashpad_11300_YGFLEAWXLMRVRBOK",
  "COMMONPROGRAMFILES": "C:\\Program Files\\Common Files",
  "COMMONPROGRAMFILES(X86)": "C:\\Program Files (x86)\\Common Files",
  "COMMONPROGRAMW6432": "C:\\Program Files\\Common Files",
  "COMPUTERNAME": "KUNALDELL",
  "COMSPEC": "C:\\Windows\\system32\\cmd.exe",
  "DRIVERDATA": "C:\\Windows\\System32\\Drivers\\DriverData",
  "EFC_5864_1592913036": "1",
  "HOMEDRIVE": "C:",
  "HOMEPATH": "\\Users\\kunal",
  "LOCALAPPDATA": "C:\\Users\\kunal\\AppData\\Local",
  "LOGONSERVER": "\\\\KUNALDELL",
  "LOG_LEVEL": "DEBUG",
  "NUMBER_OF_PROCESSORS": "22",
  "ONEDRIVE": "C:\\Users\\kunal\\OneDrive",
  "ONEDRIVECONSUMER": "C:\\Users\\kunal\\OneDrive",
  "ORIGINAL_XDG_CURRENT_DESKTOP": "undefined",
  "OS": "Windows_NT",
  "PATH": "C:\\Program Files\\Python312\\Scripts\\;C:\\Program Files\\Python312\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files\\Git\\cmd;c:\\Users\\kunal\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Program Files\\nodejs\\;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\kunal\\AppData\\Local\\Programs\\Windsurf\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WinGet\\Links;C:\\Program Files\\nodejs;C:\\Users\\kunal\\AppData\\Roaming\\npm;C:\\Program Files\\Git\\bin;C:\\Users\\kunal\\.deno\\bin;c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\scripts\\noConfigScripts",
  "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL",
  "POSTGRESQL": "C:\\Program Files\\PostgreSQL\\17\\bin\\bin",
  "PROCESSOR_ARCHITECTURE": "AMD64",
  "PROCESSOR_IDENTIFIER": "Intel64 Family 6 Model 170 Stepping 4, GenuineIntel",
  "PROCESSOR_LEVEL": "6",
  "PROCESSOR_REVISION": "aa04",
  "PROGRAMDATA": "C:\\ProgramData",
  "PROGRAMFILES": "C:\\Program Files",
  "PROGRAMFILES(X86)": "C:\\Program Files (x86)",
  "PROGRAMW6432": "C:\\Program Files",
  "PSMODULEPATH": "C:\\Users\\kunal\\OneDrive\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules",
  "PUBLIC": "C:\\Users\\Public",
  "PYTHONUNBUFFERED": "1",
  "SESSIONNAME": "Console",
  "SYSTEMDRIVE": "C:",
  "SYSTEMROOT": "C:\\Windows",
  "TEMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "TMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "USERDOMAIN": "KUNALDELL",
  "USERDOMAIN_ROAMINGPROFILE": "KUNALDELL",
  "USERNAME": "kunal",
  "USERPROFILE": "C:\\Users\\kunal",
  "WINDIR": "C:\\Windows",
  "ZES_ENABLE_SYSMAN": "1",
  "PAGER": "cat",
  "TERM_PROGRAM": "vscode",
  "TERM_PROGRAM_VERSION": "1.99.3",
  "LANG": "en_US.UTF-8",
  "COLORTERM": "truecolor",
  "VSCODE_GIT_IPC_HANDLE": "\\\\.\\pipe\\vscode-git-fccd44132c-sock",
  "PYDEVD_DISABLE_FILE_VALIDATION": "1",
  "VSCODE_DEBUGPY_ADAPTER_ENDPOINTS": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\.noConfigDebugAdapterEndpoints\\endpoint-875e116b470e769c.txt",
  "BUNDLED_DEBUGPY_PATH": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\libs\\debugpy",
  "VSCODE_INJECTION": "1",
  "PROJECT_NAME": "IntelliTest AI Automation Platform",
  "ACCESS_TOKEN_EXPIRE_MINUTES": "11520",
  "SERVER_NAME": "localhost",
  "SERVER_HOST": "http://localhost:8001",
  "DATABASE_URL": "postgresql://postgres.lflecyuvttemfoyixngi:Ayeshaayesha121@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres",
  "SMTP_TLS": "true",
  "SMTP_PORT": "587",
  "SMTP_HOST": "smtp.gmail.com",
  "SMTP_USER": "your-email@gmail.com",
  "EMAILS_FROM_EMAIL": "your-email@gmail.com",
  "EMAILS_FROM_NAME": "IntelliTest Platform",
  "OPENAI_API_KEY": "your-openai-api-key-here",
  "AWS_ACCESS_KEY_ID": "your-aws-access-key",
  "AWS_DEFAULT_REGION": "us-east-1",
  "UPLOAD_DIR": "uploads",
  "MAX_UPLOAD_SIZE": "10485760",
  "ALLOWED_FILE_TYPES": "jpg,jpeg,png,gif,pdf,txt,csv,json",
  "TESTING": "false"
}
2025-08-02 20:50:52 - app.api.v1.routes.auth - DEBUG - auth.py:45 - Database URL: postgresql://postgres.lflecyuvttemfoyixngi:*****@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres
2025-08-02 20:50:53 - app.main - INFO - main.py:1371 - Initializing API routers...
2025-08-02 20:50:53 - app.main - INFO - main.py:1383 - API routers initialized successfully
2025-08-02 20:50:53 - app.main - INFO - main.py:245 - Starting database initialization...
2025-08-02 20:50:54 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x000002928452FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 20:50:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 20:50:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:50:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 20:50:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:50:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 20:50:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:50:55 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x000002928452FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 20:50:55 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x000002928452FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 20:50:55 - app.main - INFO - main.py:275 - Disabling foreign key constraints...
2025-08-02 20:50:55 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 20:50:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 20:50:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00175s] {}
2025-08-02 20:50:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 20:50:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00129s] {}
2025-08-02 20:50:55 - app.main - INFO - main.py:290 - Dropping existing tables...
2025-08-02 20:50:55 - app.main - INFO - main.py:293 - Dropping table: activity_logs
2025-08-02 20:50:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 20:50:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00118s] {}
2025-08-02 20:50:55 - app.main - INFO - main.py:295 - Dropped table: activity_logs
2025-08-02 20:50:55 - app.main - INFO - main.py:293 - Dropping table: attachments
2025-08-02 20:50:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 20:50:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00087s] {}
2025-08-02 20:50:55 - app.main - INFO - main.py:295 - Dropped table: attachments
2025-08-02 20:50:55 - app.main - INFO - main.py:293 - Dropping table: comments
2025-08-02 20:50:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 20:50:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00098s] {}
2025-08-02 20:50:55 - app.main - INFO - main.py:295 - Dropped table: comments
2025-08-02 20:50:55 - app.main - INFO - main.py:293 - Dropping table: environments
2025-08-02 20:50:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 20:50:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00083s] {}
2025-08-02 20:50:55 - app.main - INFO - main.py:295 - Dropped table: environments
2025-08-02 20:50:55 - app.main - INFO - main.py:293 - Dropping table: projects
2025-08-02 20:50:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 20:50:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00100s] {}
2025-08-02 20:50:55 - app.main - INFO - main.py:295 - Dropped table: projects
2025-08-02 20:50:55 - app.main - INFO - main.py:293 - Dropping table: team_members
2025-08-02 20:50:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 20:50:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00058s] {}
2025-08-02 20:50:56 - app.main - INFO - main.py:295 - Dropped table: team_members
2025-08-02 20:50:56 - app.main - INFO - main.py:293 - Dropping table: teams
2025-08-02 20:50:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 20:50:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00077s] {}
2025-08-02 20:50:56 - app.main - INFO - main.py:295 - Dropped table: teams
2025-08-02 20:50:56 - app.main - INFO - main.py:293 - Dropping table: test_cases
2025-08-02 20:50:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 20:50:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00095s] {}
2025-08-02 20:50:56 - app.main - INFO - main.py:295 - Dropped table: test_cases
2025-08-02 20:50:56 - app.main - INFO - main.py:293 - Dropping table: test_executions
2025-08-02 20:50:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 20:50:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00108s] {}
2025-08-02 20:50:56 - app.main - INFO - main.py:295 - Dropped table: test_executions
2025-08-02 20:50:56 - app.main - INFO - main.py:293 - Dropping table: test_plan_test_cases
2025-08-02 20:50:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 20:50:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00102s] {}
2025-08-02 20:50:56 - app.main - INFO - main.py:295 - Dropped table: test_plan_test_cases
2025-08-02 20:50:56 - app.main - INFO - main.py:293 - Dropping table: test_plans
2025-08-02 20:50:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 20:50:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00060s] {}
2025-08-02 20:50:56 - app.main - INFO - main.py:295 - Dropped table: test_plans
2025-08-02 20:50:56 - app.main - INFO - main.py:293 - Dropping table: test_steps
2025-08-02 20:50:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 20:50:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00100s] {}
2025-08-02 20:50:56 - app.main - INFO - main.py:295 - Dropped table: test_steps
2025-08-02 20:50:56 - app.main - INFO - main.py:293 - Dropping table: users
2025-08-02 20:50:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 20:50:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00134s] {}
2025-08-02 20:50:56 - app.main - INFO - main.py:295 - Dropped table: users
2025-08-02 20:50:56 - app.main - INFO - main.py:301 - Creating database tables in order...
2025-08-02 20:50:56 - app.main - INFO - main.py:304 - Creating table: users
2025-08-02 20:50:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00109s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:56 - app.main - INFO - main.py:319 - Application shutdown
2025-08-02 20:50:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 20:50:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00223s] {}
2025-08-02 20:50:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 20:50:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00199s] {}
2025-08-02 20:50:56 - app.main - INFO - main.py:306 - Table created: users
2025-08-02 20:50:56 - app.main - INFO - main.py:304 - Creating table: teams
2025-08-02 20:50:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2642s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:50:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00163s] {}
2025-08-02 20:50:57 - app.main - INFO - main.py:306 - Table created: teams
2025-08-02 20:50:57 - app.main - INFO - main.py:304 - Creating table: projects
2025-08-02 20:50:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4374s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 20:50:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00123s] {}
2025-08-02 20:50:57 - app.main - INFO - main.py:306 - Table created: projects
2025-08-02 20:50:57 - app.main - INFO - main.py:304 - Creating table: environments
2025-08-02 20:50:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6104s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 20:50:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00152s] {}
2025-08-02 20:50:57 - app.main - INFO - main.py:306 - Table created: environments
2025-08-02 20:50:57 - app.main - INFO - main.py:304 - Creating table: test_cases
2025-08-02 20:50:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7832s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00158s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.08585s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1694s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 20:50:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00146s] {}
2025-08-02 20:50:57 - app.main - INFO - main.py:306 - Table created: test_cases
2025-08-02 20:50:57 - app.main - INFO - main.py:304 - Creating table: test_steps
2025-08-02 20:50:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.21s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 20:50:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00093s] {}
2025-08-02 20:50:57 - app.main - INFO - main.py:306 - Table created: test_steps
2025-08-02 20:50:57 - app.main - INFO - main.py:304 - Creating table: test_plans
2025-08-02 20:50:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.381s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5949s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:50:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00109s] {}
2025-08-02 20:50:58 - app.main - INFO - main.py:306 - Table created: test_plans
2025-08-02 20:50:58 - app.main - INFO - main.py:304 - Creating table: test_plan_test_cases
2025-08-02 20:50:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.645s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:50:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00124s] {}
2025-08-02 20:50:58 - app.main - INFO - main.py:306 - Table created: test_plan_test_cases
2025-08-02 20:50:58 - app.main - INFO - main.py:304 - Creating table: test_executions
2025-08-02 20:50:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.819s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.036s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 20:50:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00243s] {}
2025-08-02 20:50:58 - app.main - INFO - main.py:306 - Table created: test_executions
2025-08-02 20:50:58 - app.main - INFO - main.py:304 - Creating table: comments
2025-08-02 20:50:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.097s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.314s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 20:50:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00104s] {}
2025-08-02 20:50:58 - app.main - INFO - main.py:306 - Table created: comments
2025-08-02 20:50:58 - app.main - INFO - main.py:304 - Creating table: team_members
2025-08-02 20:50:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.365s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:59 - root - INFO - main.py:87 - ================================================================================
2025-08-02 20:50:59 - root - INFO - main.py:88 - Application starting with enhanced logging (level: INFO)
2025-08-02 20:50:59 - root - INFO - main.py:89 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 20:50:59 - root - INFO - main.py:90 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 20:50:59 - root - INFO - main.py:91 - ================================================================================
2025-08-02 20:50:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:50:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00107s] {}
2025-08-02 20:50:59 - app.main - INFO - main.py:306 - Table created: team_members
2025-08-02 20:50:59 - app.main - INFO - main.py:304 - Creating table: attachments
2025-08-02 20:50:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.538s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 20:50:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00124s] {}
2025-08-02 20:50:59 - app.main - INFO - main.py:306 - Table created: attachments
2025-08-02 20:50:59 - app.main - INFO - main.py:304 - Creating table: activity_logs
2025-08-02 20:50:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:50:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.808s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:50:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:50:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00132s] {}
2025-08-02 20:50:59 - app.main - INFO - main.py:306 - Table created: activity_logs
2025-08-02 20:50:59 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 20:50:59 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x000002928452FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 20:50:59 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x000002928452FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 20:50:59 - app.main - INFO - main.py:311 - All database tables created successfully
2025-08-02 20:51:00 - app.main - INFO - main.py:1371 - Initializing API routers...
2025-08-02 20:51:00 - app.main - INFO - main.py:1383 - API routers initialized successfully
2025-08-02 20:51:00 - app.main - INFO - main.py:245 - Starting database initialization...
2025-08-02 20:51:00 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x000001FE7762FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 20:51:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 20:51:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:51:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 20:51:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:51:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 20:51:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 20:51:01 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x000001FE7762FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 20:51:01 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x000001FE7762FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 20:51:01 - app.main - INFO - main.py:275 - Disabling foreign key constraints...
2025-08-02 20:51:01 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 20:51:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 20:51:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00112s] {}
2025-08-02 20:51:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 20:51:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00169s] {}
2025-08-02 20:51:01 - app.main - INFO - main.py:290 - Dropping existing tables...
2025-08-02 20:51:01 - app.main - INFO - main.py:293 - Dropping table: activity_logs
2025-08-02 20:51:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 20:51:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00082s] {}
2025-08-02 20:51:01 - app.main - INFO - main.py:295 - Dropped table: activity_logs
2025-08-02 20:51:01 - app.main - INFO - main.py:293 - Dropping table: attachments
2025-08-02 20:51:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 20:51:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00135s] {}
2025-08-02 20:51:02 - app.main - INFO - main.py:295 - Dropped table: attachments
2025-08-02 20:51:02 - app.main - INFO - main.py:293 - Dropping table: comments
2025-08-02 20:51:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 20:51:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00119s] {}
2025-08-02 20:51:02 - app.main - INFO - main.py:295 - Dropped table: comments
2025-08-02 20:51:02 - app.main - INFO - main.py:293 - Dropping table: environments
2025-08-02 20:51:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 20:51:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00070s] {}
2025-08-02 20:51:02 - app.main - INFO - main.py:295 - Dropped table: environments
2025-08-02 20:51:02 - app.main - INFO - main.py:293 - Dropping table: projects
2025-08-02 20:51:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 20:51:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00090s] {}
2025-08-02 20:51:02 - app.main - INFO - main.py:295 - Dropped table: projects
2025-08-02 20:51:02 - app.main - INFO - main.py:293 - Dropping table: team_members
2025-08-02 20:51:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 20:51:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00143s] {}
2025-08-02 20:51:02 - app.main - INFO - main.py:295 - Dropped table: team_members
2025-08-02 20:51:02 - app.main - INFO - main.py:293 - Dropping table: teams
2025-08-02 20:51:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 20:51:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00132s] {}
2025-08-02 20:51:02 - app.main - INFO - main.py:295 - Dropped table: teams
2025-08-02 20:51:02 - app.main - INFO - main.py:293 - Dropping table: test_cases
2025-08-02 20:51:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 20:51:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00107s] {}
2025-08-02 20:51:02 - app.main - INFO - main.py:295 - Dropped table: test_cases
2025-08-02 20:51:02 - app.main - INFO - main.py:293 - Dropping table: test_executions
2025-08-02 20:51:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 20:51:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00071s] {}
2025-08-02 20:51:02 - app.main - INFO - main.py:295 - Dropped table: test_executions
2025-08-02 20:51:02 - app.main - INFO - main.py:293 - Dropping table: test_plan_test_cases
2025-08-02 20:51:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 20:51:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00080s] {}
2025-08-02 20:51:02 - app.main - INFO - main.py:295 - Dropped table: test_plan_test_cases
2025-08-02 20:51:02 - app.main - INFO - main.py:293 - Dropping table: test_plans
2025-08-02 20:51:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 20:51:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00095s] {}
2025-08-02 20:51:02 - app.main - INFO - main.py:295 - Dropped table: test_plans
2025-08-02 20:51:02 - app.main - INFO - main.py:293 - Dropping table: test_steps
2025-08-02 20:51:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 20:51:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00068s] {}
2025-08-02 20:51:02 - app.main - INFO - main.py:295 - Dropped table: test_steps
2025-08-02 20:51:02 - app.main - INFO - main.py:293 - Dropping table: users
2025-08-02 20:51:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 20:51:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00086s] {}
2025-08-02 20:51:03 - app.main - INFO - main.py:295 - Dropped table: users
2025-08-02 20:51:03 - app.main - INFO - main.py:301 - Creating database tables in order...
2025-08-02 20:51:03 - app.main - INFO - main.py:304 - Creating table: users
2025-08-02 20:51:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:51:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00113s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:51:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 20:51:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00158s] {}
2025-08-02 20:51:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 20:51:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00124s] {}
2025-08-02 20:51:03 - app.main - INFO - main.py:306 - Table created: users
2025-08-02 20:51:03 - app.main - INFO - main.py:304 - Creating table: teams
2025-08-02 20:51:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:51:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2705s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:51:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:51:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00164s] {}
2025-08-02 20:51:03 - app.main - INFO - main.py:306 - Table created: teams
2025-08-02 20:51:03 - app.main - INFO - main.py:304 - Creating table: projects
2025-08-02 20:51:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:51:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4527s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:51:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 20:51:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00179s] {}
2025-08-02 20:51:03 - app.main - INFO - main.py:306 - Table created: projects
2025-08-02 20:51:03 - app.main - INFO - main.py:304 - Creating table: environments
2025-08-02 20:51:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:51:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6332s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:51:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 20:51:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00096s] {}
2025-08-02 20:51:03 - app.main - INFO - main.py:306 - Table created: environments
2025-08-02 20:51:03 - app.main - INFO - main.py:304 - Creating table: test_cases
2025-08-02 20:51:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:51:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.8138s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:51:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:51:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00091s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:51:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:51:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.08981s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 20:51:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:51:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1795s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:51:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 20:51:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00165s] {}
2025-08-02 20:51:04 - app.main - INFO - main.py:306 - Table created: test_cases
2025-08-02 20:51:04 - app.main - INFO - main.py:304 - Creating table: test_steps
2025-08-02 20:51:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:51:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.271s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:51:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 20:51:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00151s] {}
2025-08-02 20:51:04 - app.main - INFO - main.py:306 - Table created: test_steps
2025-08-02 20:51:04 - app.main - INFO - main.py:304 - Creating table: test_plans
2025-08-02 20:51:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:51:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.453s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:51:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:51:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6316s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 20:51:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:51:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00188s] {}
2025-08-02 20:51:04 - app.main - INFO - main.py:306 - Table created: test_plans
2025-08-02 20:51:04 - app.main - INFO - main.py:304 - Creating table: test_plan_test_cases
2025-08-02 20:51:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:51:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.723s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:51:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 20:51:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00115s] {}
2025-08-02 20:51:04 - app.main - INFO - main.py:306 - Table created: test_plan_test_cases
2025-08-02 20:51:04 - app.main - INFO - main.py:304 - Creating table: test_executions
2025-08-02 20:51:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:51:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.905s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:51:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:51:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.085s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 20:51:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 20:51:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00150s] {}
2025-08-02 20:51:05 - app.main - INFO - main.py:306 - Table created: test_executions
2025-08-02 20:51:05 - app.main - INFO - main.py:304 - Creating table: comments
2025-08-02 20:51:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:51:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.177s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:51:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:51:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.356s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 20:51:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 20:51:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00155s] {}
2025-08-02 20:51:05 - app.main - INFO - main.py:306 - Table created: comments
2025-08-02 20:51:05 - app.main - INFO - main.py:304 - Creating table: team_members
2025-08-02 20:51:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:51:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.453s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:51:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:51:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00207s] {}
2025-08-02 20:51:05 - app.main - INFO - main.py:306 - Table created: team_members
2025-08-02 20:51:05 - app.main - INFO - main.py:304 - Creating table: attachments
2025-08-02 20:51:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:51:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.642s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:51:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 20:51:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00124s] {}
2025-08-02 20:51:05 - app.main - INFO - main.py:306 - Table created: attachments
2025-08-02 20:51:05 - app.main - INFO - main.py:304 - Creating table: activity_logs
2025-08-02 20:51:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 20:51:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.824s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 20:51:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 20:51:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00157s] {}
2025-08-02 20:51:06 - app.main - INFO - main.py:306 - Table created: activity_logs
2025-08-02 20:51:06 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 20:51:06 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x000001FE7762FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 20:51:06 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x000001FE7762FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 20:51:06 - app.main - INFO - main.py:311 - All database tables created successfully
2025-08-02 20:51:52 - app.main - INFO - main.py:456 - [REGISTER-37b1a6a9-de0f-4c2d-8a10-29c5cf6d3a41] Starting registration for email: test@example.com
2025-08-02 20:51:52 - app.main - INFO - main.py:470 - [REGISTER-37b1a6a9-de0f-4c2d-8a10-29c5cf6d3a41] Initializing AuthService
2025-08-02 20:51:52 - app.main - INFO - main.py:481 - [REGISTER] User data prepared: {'email': 'test@example.com', 'password': 'test1234', 'full_name': 'Test User', 'role': 'tester'}
2025-08-02 20:51:52 - app.main - INFO - main.py:484 - [REGISTER] Calling auth_service.create_user
2025-08-02 20:51:52 - app.auth.security - INFO - security.py:303 - [AUTH_SERVICE] Starting user creation for email: test@example.com
2025-08-02 20:51:55 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:898 - Created new connection <AdaptedConnection <asyncpg.connection.Connection object at 0x000001FE776DFD40>>
2025-08-02 20:51:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 20:51:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] ()
2025-08-02 20:51:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 20:51:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] ()
2025-08-02 20:51:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 20:51:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] ()
2025-08-02 20:51:56 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:739 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x000001FE776DFD40>> checked out from pool
2025-08-02 20:51:56 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:1313 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x000001FE776DFD40>> is fresh, skipping pre-ping
2025-08-02 20:51:56 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _post_configure_properties() started
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop created_test_cases
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - User.created_test_cases setup primary join users.id = test_cases.created_by
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - User.created_test_cases setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - User.created_test_cases synchronize pairs [(users.id => test_cases.created_by)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - User.created_test_cases secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - User.created_test_cases local/remote pairs [(users.id / test_cases.created_by)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - User.created_test_cases remote columns [test_cases.created_by]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - User.created_test_cases local columns [users.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - User.created_test_cases relationship direction RelationshipDirection.ONETOMANY
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - User.created_test_cases lazy loading clause :param_1 = test_cases.created_by
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop assigned_test_cases
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - User.assigned_test_cases setup primary join users.id = test_cases.assigned_to
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - User.assigned_test_cases setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - User.assigned_test_cases synchronize pairs [(users.id => test_cases.assigned_to)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - User.assigned_test_cases secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - User.assigned_test_cases local/remote pairs [(users.id / test_cases.assigned_to)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - User.assigned_test_cases remote columns [test_cases.assigned_to]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - User.assigned_test_cases local columns [users.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - User.assigned_test_cases relationship direction RelationshipDirection.ONETOMANY
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - User.assigned_test_cases lazy loading clause :param_1 = test_cases.assigned_to
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop activity_logs
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - User.activity_logs setup primary join users.id = activity_logs.user_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - User.activity_logs setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - User.activity_logs synchronize pairs [(users.id => activity_logs.user_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - User.activity_logs secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - User.activity_logs local/remote pairs [(users.id / activity_logs.user_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - User.activity_logs remote columns [activity_logs.user_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - User.activity_logs local columns [users.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - User.activity_logs relationship direction RelationshipDirection.ONETOMANY
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - User.activity_logs lazy loading clause :param_1 = activity_logs.user_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop comments
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - User.comments setup primary join users.id = comments.user_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - User.comments setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - User.comments synchronize pairs [(users.id => comments.user_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - User.comments secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - User.comments local/remote pairs [(users.id / comments.user_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - User.comments remote columns [comments.user_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - User.comments local columns [users.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - User.comments relationship direction RelationshipDirection.ONETOMANY
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - User.comments lazy loading clause :param_1 = comments.user_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop test_executions
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - User.test_executions setup primary join users.id = test_executions.executed_by
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - User.test_executions setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - User.test_executions synchronize pairs [(users.id => test_executions.executed_by)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - User.test_executions secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - User.test_executions local/remote pairs [(users.id / test_executions.executed_by)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - User.test_executions remote columns [test_executions.executed_by]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - User.test_executions local columns [users.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - User.test_executions relationship direction RelationshipDirection.ONETOMANY
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - User.test_executions lazy loading clause :param_1 = test_executions.executed_by
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop created_projects
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - User.created_projects setup primary join users.id = projects.created_by
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - User.created_projects setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - User.created_projects synchronize pairs [(users.id => projects.created_by)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - User.created_projects secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - User.created_projects local/remote pairs [(users.id / projects.created_by)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - User.created_projects remote columns [projects.created_by]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - User.created_projects local columns [users.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - User.created_projects relationship direction RelationshipDirection.ONETOMANY
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - User.created_projects lazy loading clause :param_1 = projects.created_by
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop team_memberships
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - User.team_memberships setup primary join users.id = team_members.user_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - User.team_memberships setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - User.team_memberships synchronize pairs [(users.id => team_members.user_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - User.team_memberships secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - User.team_memberships local/remote pairs [(users.id / team_members.user_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - User.team_memberships remote columns [team_members.user_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - User.team_memberships local columns [users.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - User.team_memberships relationship direction RelationshipDirection.ONETOMANY
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - User.team_memberships lazy loading clause :param_1 = team_members.user_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop uploaded_attachments
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - User.uploaded_attachments setup primary join users.id = attachments.uploaded_by
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - User.uploaded_attachments setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - User.uploaded_attachments synchronize pairs [(users.id => attachments.uploaded_by)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - User.uploaded_attachments secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - User.uploaded_attachments local/remote pairs [(users.id / attachments.uploaded_by)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - User.uploaded_attachments remote columns [attachments.uploaded_by]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - User.uploaded_attachments local columns [users.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - User.uploaded_attachments relationship direction RelationshipDirection.ONETOMANY
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - User.uploaded_attachments lazy loading clause :param_1 = attachments.uploaded_by
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop email
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop full_name
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop hashed_password
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop role
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop is_active
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop created_at
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop updated_at
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _post_configure_properties() complete
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _post_configure_properties() started
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop creator
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Project.creator setup primary join users.id = projects.created_by
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Project.creator setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Project.creator synchronize pairs [(users.id => projects.created_by)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Project.creator secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Project.creator local/remote pairs [(projects.created_by / users.id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Project.creator remote columns [users.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Project.creator local columns [projects.created_by]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Project.creator relationship direction RelationshipDirection.MANYTOONE
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Project.creator lazy loading clause users.id = :param_1
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - Project.creator will use Session.get() to optimize instance loads
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop team
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Project.team setup primary join teams.id = projects.team_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Project.team setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Project.team synchronize pairs [(teams.id => projects.team_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Project.team secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Project.team local/remote pairs [(projects.team_id / teams.id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Project.team remote columns [teams.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Project.team local columns [projects.team_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Project.team relationship direction RelationshipDirection.MANYTOONE
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Project.team lazy loading clause teams.id = :param_1
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - Project.team will use Session.get() to optimize instance loads
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop test_cases
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Project.test_cases setup primary join projects.id = test_cases.project_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Project.test_cases setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Project.test_cases synchronize pairs [(projects.id => test_cases.project_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Project.test_cases secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Project.test_cases local/remote pairs [(projects.id / test_cases.project_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Project.test_cases remote columns [test_cases.project_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Project.test_cases local columns [projects.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Project.test_cases relationship direction RelationshipDirection.ONETOMANY
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Project.test_cases lazy loading clause :param_1 = test_cases.project_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop test_plans
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Project.test_plans setup primary join projects.id = test_plans.project_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Project.test_plans setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Project.test_plans synchronize pairs [(projects.id => test_plans.project_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Project.test_plans secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Project.test_plans local/remote pairs [(projects.id / test_plans.project_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Project.test_plans remote columns [test_plans.project_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Project.test_plans local columns [projects.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Project.test_plans relationship direction RelationshipDirection.ONETOMANY
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Project.test_plans lazy loading clause :param_1 = test_plans.project_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop environments
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Project.environments setup primary join projects.id = environments.project_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Project.environments setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Project.environments synchronize pairs [(projects.id => environments.project_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Project.environments secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Project.environments local/remote pairs [(projects.id / environments.project_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Project.environments remote columns [environments.project_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Project.environments local columns [projects.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Project.environments relationship direction RelationshipDirection.ONETOMANY
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Project.environments lazy loading clause :param_1 = environments.project_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop name
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop description
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop created_by
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop team_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop is_active
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop created_at
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop updated_at
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _post_configure_properties() complete
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _post_configure_properties() started
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) initialize prop test_case
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestStep.test_case setup primary join test_cases.id = test_steps.test_case_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestStep.test_case setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestStep.test_case synchronize pairs [(test_cases.id => test_steps.test_case_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestStep.test_case secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestStep.test_case local/remote pairs [(test_steps.test_case_id / test_cases.id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestStep.test_case remote columns [test_cases.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestStep.test_case local columns [test_steps.test_case_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestStep.test_case relationship direction RelationshipDirection.MANYTOONE
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestStep.test_case lazy loading clause test_cases.id = :param_1
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestStep.test_case will use Session.get() to optimize instance loads
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) initialize prop id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) initialize prop test_case_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) initialize prop step_number
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) initialize prop description
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) initialize prop expected_result
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) initialize prop actual_result
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) initialize prop status
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _post_configure_properties() complete
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _post_configure_properties() started
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop project
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestCase.project setup primary join projects.id = test_cases.project_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestCase.project setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestCase.project synchronize pairs [(projects.id => test_cases.project_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestCase.project secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestCase.project local/remote pairs [(test_cases.project_id / projects.id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestCase.project remote columns [projects.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestCase.project local columns [test_cases.project_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestCase.project relationship direction RelationshipDirection.MANYTOONE
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestCase.project lazy loading clause projects.id = :param_1
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestCase.project will use Session.get() to optimize instance loads
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop creator
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestCase.creator setup primary join users.id = test_cases.created_by
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestCase.creator setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestCase.creator synchronize pairs [(users.id => test_cases.created_by)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestCase.creator secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestCase.creator local/remote pairs [(test_cases.created_by / users.id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestCase.creator remote columns [users.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestCase.creator local columns [test_cases.created_by]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestCase.creator relationship direction RelationshipDirection.MANYTOONE
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestCase.creator lazy loading clause users.id = :param_1
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestCase.creator will use Session.get() to optimize instance loads
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop assignee
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestCase.assignee setup primary join users.id = test_cases.assigned_to
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestCase.assignee setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestCase.assignee synchronize pairs [(users.id => test_cases.assigned_to)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestCase.assignee secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestCase.assignee local/remote pairs [(test_cases.assigned_to / users.id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestCase.assignee remote columns [users.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestCase.assignee local columns [test_cases.assigned_to]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestCase.assignee relationship direction RelationshipDirection.MANYTOONE
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestCase.assignee lazy loading clause users.id = :param_1
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestCase.assignee will use Session.get() to optimize instance loads
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop steps
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestCase.steps setup primary join test_cases.id = test_steps.test_case_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestCase.steps setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestCase.steps synchronize pairs [(test_cases.id => test_steps.test_case_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestCase.steps secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestCase.steps local/remote pairs [(test_cases.id / test_steps.test_case_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestCase.steps remote columns [test_steps.test_case_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestCase.steps local columns [test_cases.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestCase.steps relationship direction RelationshipDirection.ONETOMANY
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestCase.steps lazy loading clause :param_1 = test_steps.test_case_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop test_executions
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestCase.test_executions setup primary join test_cases.id = test_executions.test_case_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestCase.test_executions setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestCase.test_executions synchronize pairs [(test_cases.id => test_executions.test_case_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestCase.test_executions secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestCase.test_executions local/remote pairs [(test_cases.id / test_executions.test_case_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestCase.test_executions remote columns [test_executions.test_case_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestCase.test_executions local columns [test_cases.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestCase.test_executions relationship direction RelationshipDirection.ONETOMANY
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestCase.test_executions lazy loading clause :param_1 = test_executions.test_case_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop comments
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestCase.comments setup primary join test_cases.id = comments.test_case_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestCase.comments setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestCase.comments synchronize pairs [(test_cases.id => comments.test_case_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestCase.comments secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestCase.comments local/remote pairs [(test_cases.id / comments.test_case_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestCase.comments remote columns [comments.test_case_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestCase.comments local columns [test_cases.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestCase.comments relationship direction RelationshipDirection.ONETOMANY
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestCase.comments lazy loading clause :param_1 = comments.test_case_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop test_plans
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestCase.test_plans setup primary join test_cases.id = test_plan_test_cases.test_case_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestCase.test_plans setup secondary join test_plans.id = test_plan_test_cases.test_plan_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestCase.test_plans synchronize pairs [(test_cases.id => test_plan_test_cases.test_case_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestCase.test_plans secondary synchronize pairs [(test_plans.id => test_plan_test_cases.test_plan_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestCase.test_plans local/remote pairs [(test_cases.id / test_plan_test_cases.test_case_id),(test_plans.id / test_plan_test_cases.test_plan_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestCase.test_plans remote columns [test_plan_test_cases.test_plan_id,test_plan_test_cases.test_case_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestCase.test_plans local columns [test_cases.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestCase.test_plans relationship direction RelationshipDirection.MANYTOMANY
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestCase.test_plans lazy loading clause :param_1 = test_plan_test_cases.test_case_id AND test_plans.id = test_plan_test_cases.test_plan_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop test_plan_test_cases
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestCase.test_plan_test_cases setup primary join test_cases.id = test_plan_test_cases.test_case_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestCase.test_plan_test_cases setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestCase.test_plan_test_cases synchronize pairs [(test_cases.id => test_plan_test_cases.test_case_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestCase.test_plan_test_cases secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestCase.test_plan_test_cases local/remote pairs [(test_cases.id / test_plan_test_cases.test_case_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestCase.test_plan_test_cases remote columns [test_plan_test_cases.test_case_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestCase.test_plan_test_cases local columns [test_cases.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestCase.test_plan_test_cases relationship direction RelationshipDirection.ONETOMANY
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestCase.test_plan_test_cases lazy loading clause :param_1 = test_plan_test_cases.test_case_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop title
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop description
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop project_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop test_type
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop priority
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop status
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop expected_result
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop created_by
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop assigned_to
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop tags
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop ai_generated
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop self_healing_enabled
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop prerequisites
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop test_data
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop automation_config
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop created_at
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop updated_at
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _post_configure_properties() complete
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _post_configure_properties() started
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop project
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestPlan.project setup primary join projects.id = test_plans.project_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestPlan.project setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestPlan.project synchronize pairs [(projects.id => test_plans.project_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestPlan.project secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestPlan.project local/remote pairs [(test_plans.project_id / projects.id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestPlan.project remote columns [projects.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestPlan.project local columns [test_plans.project_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestPlan.project relationship direction RelationshipDirection.MANYTOONE
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestPlan.project lazy loading clause projects.id = :param_1
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestPlan.project will use Session.get() to optimize instance loads
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop test_executions
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestPlan.test_executions setup primary join test_plans.id = test_executions.test_plan_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestPlan.test_executions setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestPlan.test_executions synchronize pairs [(test_plans.id => test_executions.test_plan_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestPlan.test_executions secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestPlan.test_executions local/remote pairs [(test_plans.id / test_executions.test_plan_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestPlan.test_executions remote columns [test_executions.test_plan_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestPlan.test_executions local columns [test_plans.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestPlan.test_executions relationship direction RelationshipDirection.ONETOMANY
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestPlan.test_executions lazy loading clause :param_1 = test_executions.test_plan_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop test_cases
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestPlan.test_cases setup primary join test_plans.id = test_plan_test_cases.test_plan_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestPlan.test_cases setup secondary join test_cases.id = test_plan_test_cases.test_case_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestPlan.test_cases synchronize pairs [(test_plans.id => test_plan_test_cases.test_plan_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestPlan.test_cases secondary synchronize pairs [(test_cases.id => test_plan_test_cases.test_case_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestPlan.test_cases local/remote pairs [(test_plans.id / test_plan_test_cases.test_plan_id),(test_cases.id / test_plan_test_cases.test_case_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestPlan.test_cases remote columns [test_plan_test_cases.test_plan_id,test_plan_test_cases.test_case_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestPlan.test_cases local columns [test_plans.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestPlan.test_cases relationship direction RelationshipDirection.MANYTOMANY
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestPlan.test_cases lazy loading clause :param_1 = test_plan_test_cases.test_plan_id AND test_cases.id = test_plan_test_cases.test_case_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop test_plan_test_cases
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestPlan.test_plan_test_cases setup primary join test_plans.id = test_plan_test_cases.test_plan_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestPlan.test_plan_test_cases setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestPlan.test_plan_test_cases synchronize pairs [(test_plans.id => test_plan_test_cases.test_plan_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestPlan.test_plan_test_cases secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestPlan.test_plan_test_cases local/remote pairs [(test_plans.id / test_plan_test_cases.test_plan_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestPlan.test_plan_test_cases remote columns [test_plan_test_cases.test_plan_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestPlan.test_plan_test_cases local columns [test_plans.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestPlan.test_plan_test_cases relationship direction RelationshipDirection.ONETOMANY
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestPlan.test_plan_test_cases lazy loading clause :param_1 = test_plan_test_cases.test_plan_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop name
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop description
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop project_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop created_by
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop status
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop scheduled_start
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop scheduled_end
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop created_at
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop updated_at
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _post_configure_properties() complete
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _post_configure_properties() started
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop test_case
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestExecution.test_case setup primary join test_cases.id = test_executions.test_case_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestExecution.test_case setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestExecution.test_case synchronize pairs [(test_cases.id => test_executions.test_case_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestExecution.test_case secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestExecution.test_case local/remote pairs [(test_executions.test_case_id / test_cases.id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestExecution.test_case remote columns [test_cases.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestExecution.test_case local columns [test_executions.test_case_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestExecution.test_case relationship direction RelationshipDirection.MANYTOONE
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestExecution.test_case lazy loading clause test_cases.id = :param_1
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestExecution.test_case will use Session.get() to optimize instance loads
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop test_plan
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestExecution.test_plan setup primary join test_plans.id = test_executions.test_plan_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestExecution.test_plan setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestExecution.test_plan synchronize pairs [(test_plans.id => test_executions.test_plan_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestExecution.test_plan secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestExecution.test_plan local/remote pairs [(test_executions.test_plan_id / test_plans.id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestExecution.test_plan remote columns [test_plans.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestExecution.test_plan local columns [test_executions.test_plan_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestExecution.test_plan relationship direction RelationshipDirection.MANYTOONE
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestExecution.test_plan lazy loading clause test_plans.id = :param_1
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestExecution.test_plan will use Session.get() to optimize instance loads
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop executor
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestExecution.executor setup primary join users.id = test_executions.executed_by
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestExecution.executor setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestExecution.executor synchronize pairs [(users.id => test_executions.executed_by)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestExecution.executor secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestExecution.executor local/remote pairs [(test_executions.executed_by / users.id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestExecution.executor remote columns [users.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestExecution.executor local columns [test_executions.executed_by]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestExecution.executor relationship direction RelationshipDirection.MANYTOONE
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestExecution.executor lazy loading clause users.id = :param_1
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestExecution.executor will use Session.get() to optimize instance loads
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop environment
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestExecution.environment setup primary join environments.id = test_executions.environment_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestExecution.environment setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestExecution.environment synchronize pairs [(environments.id => test_executions.environment_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestExecution.environment secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestExecution.environment local/remote pairs [(test_executions.environment_id / environments.id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestExecution.environment remote columns [environments.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestExecution.environment local columns [test_executions.environment_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestExecution.environment relationship direction RelationshipDirection.MANYTOONE
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestExecution.environment lazy loading clause environments.id = :param_1
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestExecution.environment will use Session.get() to optimize instance loads
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop test_case_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop test_plan_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop executed_by
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop environment_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop status
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop started_at
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop completed_at
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop duration
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop result
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop logs
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop screenshots
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop error_message
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop ai_analysis
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop created_at
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop updated_at
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _post_configure_properties() complete
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _post_configure_properties() started
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop test_case
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Comment.test_case setup primary join test_cases.id = comments.test_case_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Comment.test_case setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Comment.test_case synchronize pairs [(test_cases.id => comments.test_case_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Comment.test_case secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Comment.test_case local/remote pairs [(comments.test_case_id / test_cases.id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Comment.test_case remote columns [test_cases.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Comment.test_case local columns [comments.test_case_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Comment.test_case relationship direction RelationshipDirection.MANYTOONE
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Comment.test_case lazy loading clause test_cases.id = :param_1
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - Comment.test_case will use Session.get() to optimize instance loads
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop user
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Comment.user setup primary join users.id = comments.user_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Comment.user setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Comment.user synchronize pairs [(users.id => comments.user_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Comment.user secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Comment.user local/remote pairs [(comments.user_id / users.id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Comment.user remote columns [users.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Comment.user local columns [comments.user_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Comment.user relationship direction RelationshipDirection.MANYTOONE
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Comment.user lazy loading clause users.id = :param_1
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - Comment.user will use Session.get() to optimize instance loads
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop parent_comment
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Comment.parent_comment setup primary join comments.id = comments.parent_comment_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Comment.parent_comment setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Comment.parent_comment synchronize pairs [(comments.id => comments.parent_comment_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Comment.parent_comment secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Comment.parent_comment local/remote pairs [(comments.parent_comment_id / comments.id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Comment.parent_comment remote columns [comments.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Comment.parent_comment local columns [comments.parent_comment_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Comment.parent_comment relationship direction RelationshipDirection.MANYTOONE
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Comment.parent_comment lazy loading clause comments.id = :param_1
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - Comment.parent_comment will use Session.get() to optimize instance loads
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop replies
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Comment.replies setup primary join comments.id = comments.parent_comment_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Comment.replies setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Comment.replies synchronize pairs [(comments.id => comments.parent_comment_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Comment.replies secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Comment.replies local/remote pairs [(comments.id / comments.parent_comment_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Comment.replies remote columns [comments.parent_comment_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Comment.replies local columns [comments.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Comment.replies relationship direction RelationshipDirection.ONETOMANY
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Comment.replies lazy loading clause :param_1 = comments.parent_comment_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop test_case_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop user_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop user_name
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop comment_type
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop content
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop parent_comment_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop resolved
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop created_at
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop updated_at
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _post_configure_properties() complete
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _post_configure_properties() started
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) initialize prop members
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Team.members setup primary join teams.id = team_members.team_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Team.members setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Team.members synchronize pairs [(teams.id => team_members.team_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Team.members secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Team.members local/remote pairs [(teams.id / team_members.team_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Team.members remote columns [team_members.team_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Team.members local columns [teams.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Team.members relationship direction RelationshipDirection.ONETOMANY
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Team.members lazy loading clause :param_1 = team_members.team_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) initialize prop projects
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Team.projects setup primary join teams.id = projects.team_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Team.projects setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Team.projects synchronize pairs [(teams.id => projects.team_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Team.projects secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Team.projects local/remote pairs [(teams.id / projects.team_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Team.projects remote columns [projects.team_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Team.projects local columns [teams.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Team.projects relationship direction RelationshipDirection.ONETOMANY
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Team.projects lazy loading clause :param_1 = projects.team_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) initialize prop id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) initialize prop name
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) initialize prop description
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) initialize prop created_by
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) initialize prop created_at
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) initialize prop updated_at
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _post_configure_properties() complete
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _post_configure_properties() started
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) initialize prop team
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TeamMember.team setup primary join teams.id = team_members.team_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TeamMember.team setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TeamMember.team synchronize pairs [(teams.id => team_members.team_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TeamMember.team secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TeamMember.team local/remote pairs [(team_members.team_id / teams.id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TeamMember.team remote columns [teams.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TeamMember.team local columns [team_members.team_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TeamMember.team relationship direction RelationshipDirection.MANYTOONE
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TeamMember.team lazy loading clause teams.id = :param_1
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TeamMember.team will use Session.get() to optimize instance loads
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) initialize prop user
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TeamMember.user setup primary join users.id = team_members.user_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TeamMember.user setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TeamMember.user synchronize pairs [(users.id => team_members.user_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TeamMember.user secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TeamMember.user local/remote pairs [(team_members.user_id / users.id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TeamMember.user remote columns [users.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TeamMember.user local columns [team_members.user_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TeamMember.user relationship direction RelationshipDirection.MANYTOONE
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TeamMember.user lazy loading clause users.id = :param_1
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TeamMember.user will use Session.get() to optimize instance loads
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) initialize prop id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) initialize prop team_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) initialize prop user_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) initialize prop role
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) initialize prop joined_at
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _post_configure_properties() complete
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _post_configure_properties() started
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop project
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Environment.project setup primary join projects.id = environments.project_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Environment.project setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Environment.project synchronize pairs [(projects.id => environments.project_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Environment.project secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Environment.project local/remote pairs [(environments.project_id / projects.id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Environment.project remote columns [projects.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Environment.project local columns [environments.project_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Environment.project relationship direction RelationshipDirection.MANYTOONE
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Environment.project lazy loading clause projects.id = :param_1
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - Environment.project will use Session.get() to optimize instance loads
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop test_executions
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Environment.test_executions setup primary join environments.id = test_executions.environment_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Environment.test_executions setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Environment.test_executions synchronize pairs [(environments.id => test_executions.environment_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Environment.test_executions secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Environment.test_executions local/remote pairs [(environments.id / test_executions.environment_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Environment.test_executions remote columns [test_executions.environment_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Environment.test_executions local columns [environments.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Environment.test_executions relationship direction RelationshipDirection.ONETOMANY
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Environment.test_executions lazy loading clause :param_1 = test_executions.environment_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop name
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop description
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop base_url
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop project_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop is_active
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop variables
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop created_at
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop updated_at
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _post_configure_properties() complete
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _post_configure_properties() started
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop uploader
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Attachment.uploader setup primary join users.id = attachments.uploaded_by
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Attachment.uploader setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Attachment.uploader synchronize pairs [(users.id => attachments.uploaded_by)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Attachment.uploader secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Attachment.uploader local/remote pairs [(attachments.uploaded_by / users.id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Attachment.uploader remote columns [users.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Attachment.uploader local columns [attachments.uploaded_by]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Attachment.uploader relationship direction RelationshipDirection.MANYTOONE
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Attachment.uploader lazy loading clause users.id = :param_1
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - Attachment.uploader will use Session.get() to optimize instance loads
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop file_name
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop file_path
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop file_size
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop file_type
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop entity_type
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop entity_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop uploaded_by
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop description
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop created_at
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _post_configure_properties() complete
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _post_configure_properties() started
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) initialize prop test_plan
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestPlanTestCase.test_plan setup primary join test_plans.id = test_plan_test_cases.test_plan_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestPlanTestCase.test_plan setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestPlanTestCase.test_plan synchronize pairs [(test_plans.id => test_plan_test_cases.test_plan_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestPlanTestCase.test_plan secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestPlanTestCase.test_plan local/remote pairs [(test_plan_test_cases.test_plan_id / test_plans.id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestPlanTestCase.test_plan remote columns [test_plans.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestPlanTestCase.test_plan local columns [test_plan_test_cases.test_plan_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestPlanTestCase.test_plan relationship direction RelationshipDirection.MANYTOONE
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestPlanTestCase.test_plan lazy loading clause test_plans.id = :param_1
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestPlanTestCase.test_plan will use Session.get() to optimize instance loads
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) initialize prop test_case
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestPlanTestCase.test_case setup primary join test_cases.id = test_plan_test_cases.test_case_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestPlanTestCase.test_case setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestPlanTestCase.test_case synchronize pairs [(test_cases.id => test_plan_test_cases.test_case_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestPlanTestCase.test_case secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestPlanTestCase.test_case local/remote pairs [(test_plan_test_cases.test_case_id / test_cases.id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestPlanTestCase.test_case remote columns [test_cases.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestPlanTestCase.test_case local columns [test_plan_test_cases.test_case_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestPlanTestCase.test_case relationship direction RelationshipDirection.MANYTOONE
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestPlanTestCase.test_case lazy loading clause test_cases.id = :param_1
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestPlanTestCase.test_case will use Session.get() to optimize instance loads
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) initialize prop creator
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestPlanTestCase.creator setup primary join users.id = test_plan_test_cases.created_by
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestPlanTestCase.creator setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestPlanTestCase.creator synchronize pairs [(users.id => test_plan_test_cases.created_by)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestPlanTestCase.creator secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestPlanTestCase.creator local/remote pairs [(test_plan_test_cases.created_by / users.id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestPlanTestCase.creator remote columns [users.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestPlanTestCase.creator local columns [test_plan_test_cases.created_by]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestPlanTestCase.creator relationship direction RelationshipDirection.MANYTOONE
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestPlanTestCase.creator lazy loading clause users.id = :param_1
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestPlanTestCase.creator will use Session.get() to optimize instance loads
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) initialize prop id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) initialize prop test_plan_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) initialize prop test_case_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) initialize prop order
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) initialize prop is_mandatory
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) initialize prop created_at
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) initialize prop created_by
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _post_configure_properties() complete
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _post_configure_properties() started
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop user
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - ActivityLog.user setup primary join users.id = activity_logs.user_id
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - ActivityLog.user setup secondary join None
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - ActivityLog.user synchronize pairs [(users.id => activity_logs.user_id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - ActivityLog.user secondary synchronize pairs []
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - ActivityLog.user local/remote pairs [(activity_logs.user_id / users.id)]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - ActivityLog.user remote columns [users.id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - ActivityLog.user local columns [activity_logs.user_id]
2025-08-02 20:51:56 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - ActivityLog.user relationship direction RelationshipDirection.MANYTOONE
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - ActivityLog.user lazy loading clause users.id = :param_1
2025-08-02 20:51:56 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - ActivityLog.user will use Session.get() to optimize instance loads
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop user_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop user_name
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop action
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop target_type
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop target_id
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop target_name
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop details
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop ip_address
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop user_agent
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop created_at
2025-08-02 20:51:56 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _post_configure_properties() complete
2025-08-02 20:51:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT users.id, users.email, users.full_name, users.hashed_password, users.role, users.is_active, users.created_at, users.updated_at 
FROM users 
WHERE users.email = $1::VARCHAR
2025-08-02 20:51:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00242s] ('test@example.com',)
2025-08-02 20:51:57 - app.auth.security - WARNING - security.py:237 - [AUTH_SERVICE] Email already registered: test@example.com
2025-08-02 20:51:57 - app.auth.security - WARNING - security.py:353 - [AUTH_SERVICE] Validation error: Email already registered
2025-08-02 20:51:57 - app.main - ERROR - main.py:517 - [REGISTER] HTTP Exception: Email already registered
2025-08-02 20:51:57 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 20:51:57 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:972 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x000001FE776DFD40>> being returned to pool
2025-08-02 20:51:57 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:1429 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x000001FE776DFD40>> rollback-on-return
2025-08-02 20:51:57 - app.db.session - ERROR - session.py:101 - Database session error: 400: Email already registered
2025-08-02 20:51:57 - app.main - WARNING - main.py:381 - HTTP Exception: 400 - Email already registered - Path: /api/auth/register
2025-08-02 21:01:35 - app.auth.security - INFO - security.py:424 - [AUTH_SERVICE] Starting authentication for email: test@example.com
2025-08-02 21:01:35 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - INFO - base.py:843 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x000001FE776DFD40>> exceeded timeout; recycling
2025-08-02 21:01:35 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:367 - Hard-closing connection <AdaptedConnection <asyncpg.connection.Connection object at 0x000001FE776DFD40>>
2025-08-02 21:01:36 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:898 - Created new connection <AdaptedConnection <asyncpg.connection.Connection object at 0x000001FE776DF7A0>>
2025-08-02 21:01:37 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:739 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x000001FE776DF7A0>> checked out from pool
2025-08-02 21:01:37 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:1313 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x000001FE776DF7A0>> is fresh, skipping pre-ping
2025-08-02 21:01:37 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:01:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT users.id, users.email, users.full_name, users.hashed_password, users.role, users.is_active, users.created_at, users.updated_at 
FROM users 
WHERE users.email = $1::VARCHAR
2025-08-02 21:01:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 580.2s ago] ('test@example.com',)
2025-08-02 21:01:37 - passlib.handlers.bcrypt - WARNING - bcrypt.py:622 - (trapped) error reading bcrypt version
Traceback (most recent call last):
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\passlib\handlers\bcrypt.py", line 620, in _load_backend_mixin
    version = _bcrypt.__about__.__version__
              ^^^^^^^^^^^^^^^^^
AttributeError: module 'bcrypt' has no attribute '__about__'
2025-08-02 21:01:38 - app.auth.security - INFO - security.py:494 - [AUTH_SERVICE] Authentication successful for user ID: d6663135-0f41-403f-bccb-684231c91a81
2025-08-02 21:01:38 - app.main - INFO - main.py:582 - User logged in: test@example.com
2025-08-02 21:01:38 - sqlalchemy.engine.Engine - INFO - base.py:2704 - COMMIT
2025-08-02 21:01:38 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:972 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x000001FE776DF7A0>> being returned to pool
2025-08-02 21:01:38 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:1429 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x000001FE776DF7A0>> rollback-on-return
2025-08-02 21:01:38 - app.auth.security - INFO - security.py:142 - 
================================================================================
2025-08-02 21:01:38 - app.auth.security - INFO - security.py:143 - Authenticating request to http://127.0.0.1:8001/api/v1/test-cases/
2025-08-02 21:01:38 - app.auth.security - INFO - security.py:144 - Token: eyJhbGciOiJIUzI1NiIs...
2025-08-02 21:01:38 - app.auth.security - INFO - security.py:148 - Decoding JWT token...
2025-08-02 21:01:38 - app.auth.security - INFO - security.py:150 - Decoded payload: {'sub': 'd6663135-0f41-403f-bccb-684231c91a81', 'exp': 1754150498}
2025-08-02 21:01:38 - app.auth.security - INFO - security.py:157 - Looking up user with ID: d6663135-0f41-403f-bccb-684231c91a81
2025-08-02 21:01:38 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:739 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x000001FE776DF7A0>> checked out from pool
2025-08-02 21:01:38 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:1297 - Pool pre-ping on connection <AdaptedConnection <asyncpg.connection.Connection object at 0x000001FE776DF7A0>>
2025-08-02 21:01:38 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:01:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT users.id, users.email, users.full_name, users.hashed_password, users.role, users.is_active, users.created_at, users.updated_at 
FROM users 
WHERE users.id = $1::VARCHAR
2025-08-02 21:01:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00156s] ('d6663135-0f41-403f-bccb-684231c91a81',)
2025-08-02 21:01:38 - app.auth.security - INFO - security.py:170 - Successfully authenticated user: test@example.com (ID: d6663135-0f41-403f-bccb-684231c91a81)
2025-08-02 21:01:38 - app.auth.security - INFO - security.py:182 - Returning user info: {'id': 'd6663135-0f41-403f-bccb-684231c91a81', 'email': 'test@example.com', 'full_name': 'Test User', 'role': 'admin', 'created_at': '2025-08-01T02:01:02.487819', 'updated_at': '2025-08-01T02:01:02.487819'}
2025-08-02 21:01:38 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:01:38 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:972 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x000001FE776DF7A0>> being returned to pool
2025-08-02 21:01:38 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:1429 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x000001FE776DF7A0>> rollback-on-return
2025-08-02 21:01:38 - app.db.session - ERROR - session.py:101 - Database session error: type object 'TestCase' has no attribute 'test_steps'
2025-08-02 21:01:38 - app.main - ERROR - main.py:400 - Unhandled Exception: type object 'TestCase' has no attribute 'test_steps' - Path: /api/v1/test-cases/
2025-08-02 21:02:51 - app.main - INFO - main.py:319 - Application shutdown
2025-08-02 21:02:53 - root - INFO - main.py:87 - ================================================================================
2025-08-02 21:02:53 - root - INFO - main.py:88 - Application starting with enhanced logging (level: DEBUG)
2025-08-02 21:02:53 - root - INFO - main.py:89 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 21:02:53 - root - INFO - main.py:90 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 21:02:53 - root - INFO - main.py:91 - ================================================================================
2025-08-02 21:02:53 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-08-02 21:02:53 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-08-02 21:02:53 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-08-02 21:02:53 - passlib.registry - DEBUG - registry.py:296 - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
2025-08-02 21:02:53 - app.api.v1.routes.auth - DEBUG - auth.py:34 - Environment variables: {
  "ALLUSERSPROFILE": "C:\\ProgramData",
  "APPDATA": "C:\\Users\\kunal\\AppData\\Roaming",
  "C:\\USERS\\KUNAL\\DOWNLOADS\\EMERGENTINTELLITEST-MAIN": "C:\\Program Files\\nodejs\\",
  "CHROME_CRASHPAD_PIPE_NAME": "\\\\.\\pipe\\crashpad_11300_YGFLEAWXLMRVRBOK",
  "COMMONPROGRAMFILES": "C:\\Program Files\\Common Files",
  "COMMONPROGRAMFILES(X86)": "C:\\Program Files (x86)\\Common Files",
  "COMMONPROGRAMW6432": "C:\\Program Files\\Common Files",
  "COMPUTERNAME": "KUNALDELL",
  "COMSPEC": "C:\\Windows\\system32\\cmd.exe",
  "DRIVERDATA": "C:\\Windows\\System32\\Drivers\\DriverData",
  "EFC_5864_1592913036": "1",
  "HOMEDRIVE": "C:",
  "HOMEPATH": "\\Users\\kunal",
  "LOCALAPPDATA": "C:\\Users\\kunal\\AppData\\Local",
  "LOGONSERVER": "\\\\KUNALDELL",
  "LOG_LEVEL": "DEBUG",
  "NUMBER_OF_PROCESSORS": "22",
  "ONEDRIVE": "C:\\Users\\kunal\\OneDrive",
  "ONEDRIVECONSUMER": "C:\\Users\\kunal\\OneDrive",
  "ORIGINAL_XDG_CURRENT_DESKTOP": "undefined",
  "OS": "Windows_NT",
  "PATH": "C:\\Program Files\\Python312\\Scripts\\;C:\\Program Files\\Python312\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files\\Git\\cmd;c:\\Users\\kunal\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Program Files\\nodejs\\;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\kunal\\AppData\\Local\\Programs\\Windsurf\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WinGet\\Links;C:\\Program Files\\nodejs;C:\\Users\\kunal\\AppData\\Roaming\\npm;C:\\Program Files\\Git\\bin;C:\\Users\\kunal\\.deno\\bin;c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\scripts\\noConfigScripts",
  "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL",
  "POSTGRESQL": "C:\\Program Files\\PostgreSQL\\17\\bin\\bin",
  "PROCESSOR_ARCHITECTURE": "AMD64",
  "PROCESSOR_IDENTIFIER": "Intel64 Family 6 Model 170 Stepping 4, GenuineIntel",
  "PROCESSOR_LEVEL": "6",
  "PROCESSOR_REVISION": "aa04",
  "PROGRAMDATA": "C:\\ProgramData",
  "PROGRAMFILES": "C:\\Program Files",
  "PROGRAMFILES(X86)": "C:\\Program Files (x86)",
  "PROGRAMW6432": "C:\\Program Files",
  "PSMODULEPATH": "C:\\Users\\kunal\\OneDrive\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules",
  "PUBLIC": "C:\\Users\\Public",
  "PYTHONUNBUFFERED": "1",
  "SESSIONNAME": "Console",
  "SYSTEMDRIVE": "C:",
  "SYSTEMROOT": "C:\\Windows",
  "TEMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "TMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "USERDOMAIN": "KUNALDELL",
  "USERDOMAIN_ROAMINGPROFILE": "KUNALDELL",
  "USERNAME": "kunal",
  "USERPROFILE": "C:\\Users\\kunal",
  "WINDIR": "C:\\Windows",
  "ZES_ENABLE_SYSMAN": "1",
  "PAGER": "cat",
  "TERM_PROGRAM": "vscode",
  "TERM_PROGRAM_VERSION": "1.99.3",
  "LANG": "en_US.UTF-8",
  "COLORTERM": "truecolor",
  "VSCODE_GIT_IPC_HANDLE": "\\\\.\\pipe\\vscode-git-fccd44132c-sock",
  "PYDEVD_DISABLE_FILE_VALIDATION": "1",
  "VSCODE_DEBUGPY_ADAPTER_ENDPOINTS": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\.noConfigDebugAdapterEndpoints\\endpoint-875e116b470e769c.txt",
  "BUNDLED_DEBUGPY_PATH": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\libs\\debugpy",
  "VSCODE_INJECTION": "1",
  "PROJECT_NAME": "IntelliTest AI Automation Platform",
  "ACCESS_TOKEN_EXPIRE_MINUTES": "11520",
  "SERVER_NAME": "localhost",
  "SERVER_HOST": "http://localhost:8001",
  "DATABASE_URL": "postgresql://postgres.lflecyuvttemfoyixngi:Ayeshaayesha121@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres",
  "SMTP_TLS": "true",
  "SMTP_PORT": "587",
  "SMTP_HOST": "smtp.gmail.com",
  "SMTP_USER": "your-email@gmail.com",
  "EMAILS_FROM_EMAIL": "your-email@gmail.com",
  "EMAILS_FROM_NAME": "IntelliTest Platform",
  "OPENAI_API_KEY": "your-openai-api-key-here",
  "AWS_ACCESS_KEY_ID": "your-aws-access-key",
  "AWS_DEFAULT_REGION": "us-east-1",
  "UPLOAD_DIR": "uploads",
  "MAX_UPLOAD_SIZE": "10485760",
  "ALLOWED_FILE_TYPES": "jpg,jpeg,png,gif,pdf,txt,csv,json",
  "TESTING": "false"
}
2025-08-02 21:02:53 - app.api.v1.routes.auth - DEBUG - auth.py:45 - Database URL: postgresql://postgres.lflecyuvttemfoyixngi:*****@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres
2025-08-02 21:02:54 - app.main - INFO - main.py:1371 - Initializing API routers...
2025-08-02 21:02:54 - app.main - INFO - main.py:1383 - API routers initialized successfully
2025-08-02 21:02:54 - app.main - INFO - main.py:245 - Starting database initialization...
2025-08-02 21:02:55 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x000002359A20FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 21:02:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:02:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:02:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:02:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:02:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:02:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:02:56 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x000002359A20FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 21:02:56 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x000002359A20FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 21:02:56 - app.main - INFO - main.py:275 - Disabling foreign key constraints...
2025-08-02 21:02:56 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:02:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 21:02:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00156s] {}
2025-08-02 21:02:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 21:02:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00127s] {}
2025-08-02 21:02:56 - app.main - INFO - main.py:290 - Dropping existing tables...
2025-08-02 21:02:56 - app.main - INFO - main.py:293 - Dropping table: activity_logs
2025-08-02 21:02:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 21:02:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00080s] {}
2025-08-02 21:02:56 - app.main - INFO - main.py:295 - Dropped table: activity_logs
2025-08-02 21:02:56 - app.main - INFO - main.py:293 - Dropping table: attachments
2025-08-02 21:02:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 21:02:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00062s] {}
2025-08-02 21:02:56 - app.main - INFO - main.py:295 - Dropped table: attachments
2025-08-02 21:02:56 - app.main - INFO - main.py:293 - Dropping table: comments
2025-08-02 21:02:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 21:02:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00089s] {}
2025-08-02 21:02:56 - app.main - INFO - main.py:295 - Dropped table: comments
2025-08-02 21:02:56 - app.main - INFO - main.py:293 - Dropping table: environments
2025-08-02 21:02:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 21:02:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00111s] {}
2025-08-02 21:02:56 - app.main - INFO - main.py:295 - Dropped table: environments
2025-08-02 21:02:56 - app.main - INFO - main.py:293 - Dropping table: projects
2025-08-02 21:02:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 21:02:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00075s] {}
2025-08-02 21:02:56 - app.main - INFO - main.py:295 - Dropped table: projects
2025-08-02 21:02:56 - app.main - INFO - main.py:293 - Dropping table: team_members
2025-08-02 21:02:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 21:02:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00064s] {}
2025-08-02 21:02:56 - app.main - INFO - main.py:295 - Dropped table: team_members
2025-08-02 21:02:56 - app.main - INFO - main.py:293 - Dropping table: teams
2025-08-02 21:02:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 21:02:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00052s] {}
2025-08-02 21:02:56 - app.main - INFO - main.py:319 - Application shutdown
2025-08-02 21:02:57 - app.main - INFO - main.py:295 - Dropped table: teams
2025-08-02 21:02:57 - app.main - INFO - main.py:293 - Dropping table: test_cases
2025-08-02 21:02:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 21:02:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00094s] {}
2025-08-02 21:02:57 - app.main - INFO - main.py:295 - Dropped table: test_cases
2025-08-02 21:02:57 - app.main - INFO - main.py:293 - Dropping table: test_executions
2025-08-02 21:02:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 21:02:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00036s] {}
2025-08-02 21:02:57 - app.main - INFO - main.py:295 - Dropped table: test_executions
2025-08-02 21:02:57 - app.main - INFO - main.py:293 - Dropping table: test_plan_test_cases
2025-08-02 21:02:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 21:02:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00091s] {}
2025-08-02 21:02:57 - app.main - INFO - main.py:295 - Dropped table: test_plan_test_cases
2025-08-02 21:02:57 - app.main - INFO - main.py:293 - Dropping table: test_plans
2025-08-02 21:02:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 21:02:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00097s] {}
2025-08-02 21:02:57 - app.main - INFO - main.py:295 - Dropped table: test_plans
2025-08-02 21:02:57 - app.main - INFO - main.py:293 - Dropping table: test_steps
2025-08-02 21:02:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 21:02:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00079s] {}
2025-08-02 21:02:57 - app.main - INFO - main.py:295 - Dropped table: test_steps
2025-08-02 21:02:57 - app.main - INFO - main.py:293 - Dropping table: users
2025-08-02 21:02:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 21:02:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00095s] {}
2025-08-02 21:02:57 - app.main - INFO - main.py:295 - Dropped table: users
2025-08-02 21:02:57 - app.main - INFO - main.py:301 - Creating database tables in order...
2025-08-02 21:02:57 - app.main - INFO - main.py:304 - Creating table: users
2025-08-02 21:02:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:02:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00132s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:02:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 21:02:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00076s] {}
2025-08-02 21:02:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 21:02:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00073s] {}
2025-08-02 21:02:57 - app.main - INFO - main.py:306 - Table created: users
2025-08-02 21:02:57 - app.main - INFO - main.py:304 - Creating table: teams
2025-08-02 21:02:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:02:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2507s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:02:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:02:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00136s] {}
2025-08-02 21:02:57 - app.main - INFO - main.py:306 - Table created: teams
2025-08-02 21:02:57 - app.main - INFO - main.py:304 - Creating table: projects
2025-08-02 21:02:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:02:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4157s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:02:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 21:02:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00098s] {}
2025-08-02 21:02:58 - app.main - INFO - main.py:306 - Table created: projects
2025-08-02 21:02:58 - app.main - INFO - main.py:304 - Creating table: environments
2025-08-02 21:02:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:02:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5781s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:02:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 21:02:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00089s] {}
2025-08-02 21:02:58 - app.main - INFO - main.py:306 - Table created: environments
2025-08-02 21:02:58 - app.main - INFO - main.py:304 - Creating table: test_cases
2025-08-02 21:02:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:02:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7791s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:02:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:02:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00098s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:02:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:02:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.09026s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 21:02:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:02:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1954s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:02:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 21:02:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00120s] {}
2025-08-02 21:02:58 - app.main - INFO - main.py:306 - Table created: test_cases
2025-08-02 21:02:58 - app.main - INFO - main.py:304 - Creating table: test_steps
2025-08-02 21:02:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:02:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.24s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:02:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 21:02:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00079s] {}
2025-08-02 21:02:58 - root - INFO - main.py:87 - ================================================================================
2025-08-02 21:02:58 - root - INFO - main.py:88 - Application starting with enhanced logging (level: INFO)
2025-08-02 21:02:58 - root - INFO - main.py:89 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 21:02:58 - root - INFO - main.py:90 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 21:02:58 - root - INFO - main.py:91 - ================================================================================
2025-08-02 21:02:58 - app.main - INFO - main.py:306 - Table created: test_steps
2025-08-02 21:02:58 - app.main - INFO - main.py:304 - Creating table: test_plans
2025-08-02 21:02:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:02:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.416s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:02:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:02:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6231s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:02:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:02:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00189s] {}
2025-08-02 21:02:59 - app.main - INFO - main.py:306 - Table created: test_plans
2025-08-02 21:02:59 - app.main - INFO - main.py:304 - Creating table: test_plan_test_cases
2025-08-02 21:02:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:02:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.662s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:02:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:02:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00143s] {}
2025-08-02 21:02:59 - app.main - INFO - main.py:306 - Table created: test_plan_test_cases
2025-08-02 21:02:59 - app.main - INFO - main.py:304 - Creating table: test_executions
2025-08-02 21:02:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:02:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.845s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:02:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:02:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.055s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 21:02:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 21:02:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00124s] {}
2025-08-02 21:02:59 - app.main - INFO - main.py:306 - Table created: test_executions
2025-08-02 21:02:59 - app.main - INFO - main.py:304 - Creating table: comments
2025-08-02 21:02:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:02:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.093s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:02:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:02:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.301s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:02:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 21:02:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00141s] {}
2025-08-02 21:02:59 - app.main - INFO - main.py:306 - Table created: comments
2025-08-02 21:02:59 - app.main - INFO - main.py:304 - Creating table: team_members
2025-08-02 21:02:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:02:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.338s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:02:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:02:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00147s] {}
2025-08-02 21:03:00 - app.main - INFO - main.py:306 - Table created: team_members
2025-08-02 21:03:00 - app.main - INFO - main.py:304 - Creating table: attachments
2025-08-02 21:03:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.502s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:00 - app.main - INFO - main.py:1371 - Initializing API routers...
2025-08-02 21:03:00 - app.main - INFO - main.py:1383 - API routers initialized successfully
2025-08-02 21:03:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 21:03:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00092s] {}
2025-08-02 21:03:00 - app.main - INFO - main.py:245 - Starting database initialization...
2025-08-02 21:03:00 - app.main - INFO - main.py:306 - Table created: attachments
2025-08-02 21:03:00 - app.main - INFO - main.py:304 - Creating table: activity_logs
2025-08-02 21:03:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.667s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:03:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00191s] {}
2025-08-02 21:03:00 - app.main - INFO - main.py:306 - Table created: activity_logs
2025-08-02 21:03:00 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:03:00 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x000002359A20FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 21:03:00 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x000002359A20FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 21:03:00 - app.main - INFO - main.py:311 - All database tables created successfully
2025-08-02 21:03:00 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x0000021523FFFDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 21:03:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:03:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:03:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:03:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:03:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:03:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:03:01 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x0000021523FFFDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 21:03:01 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x0000021523FFFDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 21:03:01 - app.main - INFO - main.py:275 - Disabling foreign key constraints...
2025-08-02 21:03:01 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:03:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 21:03:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00441s] {}
2025-08-02 21:03:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 21:03:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00293s] {}
2025-08-02 21:03:01 - app.main - INFO - main.py:290 - Dropping existing tables...
2025-08-02 21:03:01 - app.main - INFO - main.py:293 - Dropping table: activity_logs
2025-08-02 21:03:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 21:03:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00082s] {}
2025-08-02 21:03:01 - app.main - INFO - main.py:295 - Dropped table: activity_logs
2025-08-02 21:03:01 - app.main - INFO - main.py:293 - Dropping table: attachments
2025-08-02 21:03:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 21:03:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00075s] {}
2025-08-02 21:03:01 - app.main - INFO - main.py:295 - Dropped table: attachments
2025-08-02 21:03:01 - app.main - INFO - main.py:293 - Dropping table: comments
2025-08-02 21:03:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 21:03:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00074s] {}
2025-08-02 21:03:01 - app.main - INFO - main.py:295 - Dropped table: comments
2025-08-02 21:03:01 - app.main - INFO - main.py:293 - Dropping table: environments
2025-08-02 21:03:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 21:03:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00078s] {}
2025-08-02 21:03:01 - app.main - INFO - main.py:295 - Dropped table: environments
2025-08-02 21:03:01 - app.main - INFO - main.py:293 - Dropping table: projects
2025-08-02 21:03:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 21:03:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00066s] {}
2025-08-02 21:03:01 - app.main - INFO - main.py:295 - Dropped table: projects
2025-08-02 21:03:01 - app.main - INFO - main.py:293 - Dropping table: team_members
2025-08-02 21:03:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 21:03:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00084s] {}
2025-08-02 21:03:02 - app.main - INFO - main.py:295 - Dropped table: team_members
2025-08-02 21:03:02 - app.main - INFO - main.py:293 - Dropping table: teams
2025-08-02 21:03:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 21:03:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00070s] {}
2025-08-02 21:03:02 - app.main - INFO - main.py:295 - Dropped table: teams
2025-08-02 21:03:02 - app.main - INFO - main.py:293 - Dropping table: test_cases
2025-08-02 21:03:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 21:03:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00068s] {}
2025-08-02 21:03:02 - app.main - INFO - main.py:295 - Dropped table: test_cases
2025-08-02 21:03:02 - app.main - INFO - main.py:293 - Dropping table: test_executions
2025-08-02 21:03:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 21:03:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00104s] {}
2025-08-02 21:03:02 - app.main - INFO - main.py:295 - Dropped table: test_executions
2025-08-02 21:03:02 - app.main - INFO - main.py:293 - Dropping table: test_plan_test_cases
2025-08-02 21:03:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 21:03:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00050s] {}
2025-08-02 21:03:02 - app.main - INFO - main.py:295 - Dropped table: test_plan_test_cases
2025-08-02 21:03:02 - app.main - INFO - main.py:293 - Dropping table: test_plans
2025-08-02 21:03:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 21:03:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00060s] {}
2025-08-02 21:03:02 - app.main - INFO - main.py:295 - Dropped table: test_plans
2025-08-02 21:03:02 - app.main - INFO - main.py:293 - Dropping table: test_steps
2025-08-02 21:03:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 21:03:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00049s] {}
2025-08-02 21:03:02 - app.main - INFO - main.py:295 - Dropped table: test_steps
2025-08-02 21:03:02 - app.main - INFO - main.py:293 - Dropping table: users
2025-08-02 21:03:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 21:03:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00083s] {}
2025-08-02 21:03:02 - app.main - INFO - main.py:295 - Dropped table: users
2025-08-02 21:03:02 - app.main - INFO - main.py:301 - Creating database tables in order...
2025-08-02 21:03:02 - app.main - INFO - main.py:304 - Creating table: users
2025-08-02 21:03:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00116s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 21:03:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00170s] {}
2025-08-02 21:03:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 21:03:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00236s] {}
2025-08-02 21:03:02 - app.main - INFO - main.py:306 - Table created: users
2025-08-02 21:03:02 - app.main - INFO - main.py:304 - Creating table: teams
2025-08-02 21:03:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2447s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:03:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00312s] {}
2025-08-02 21:03:02 - app.main - INFO - main.py:306 - Table created: teams
2025-08-02 21:03:02 - app.main - INFO - main.py:304 - Creating table: projects
2025-08-02 21:03:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4064s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 21:03:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00261s] {}
2025-08-02 21:03:03 - app.main - INFO - main.py:306 - Table created: projects
2025-08-02 21:03:03 - app.main - INFO - main.py:304 - Creating table: environments
2025-08-02 21:03:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5661s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 21:03:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00173s] {}
2025-08-02 21:03:03 - app.main - INFO - main.py:306 - Table created: environments
2025-08-02 21:03:03 - app.main - INFO - main.py:304 - Creating table: test_cases
2025-08-02 21:03:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7268s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00216s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.08142s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1604s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 21:03:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00270s] {}
2025-08-02 21:03:03 - app.main - INFO - main.py:306 - Table created: test_cases
2025-08-02 21:03:03 - app.main - INFO - main.py:304 - Creating table: test_steps
2025-08-02 21:03:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.133s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 21:03:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00207s] {}
2025-08-02 21:03:03 - app.main - INFO - main.py:306 - Table created: test_steps
2025-08-02 21:03:03 - app.main - INFO - main.py:304 - Creating table: test_plans
2025-08-02 21:03:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.291s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5638s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:03:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00206s] {}
2025-08-02 21:03:04 - app.main - INFO - main.py:306 - Table created: test_plans
2025-08-02 21:03:04 - app.main - INFO - main.py:304 - Creating table: test_plan_test_cases
2025-08-02 21:03:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.529s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:03:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00185s] {}
2025-08-02 21:03:04 - app.main - INFO - main.py:306 - Table created: test_plan_test_cases
2025-08-02 21:03:04 - app.main - INFO - main.py:304 - Creating table: test_executions
2025-08-02 21:03:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.689s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.9628s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 21:03:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00192s] {}
2025-08-02 21:03:04 - app.main - INFO - main.py:306 - Table created: test_executions
2025-08-02 21:03:04 - app.main - INFO - main.py:304 - Creating table: comments
2025-08-02 21:03:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.927s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.205s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 21:03:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00266s] {}
2025-08-02 21:03:04 - app.main - INFO - main.py:306 - Table created: comments
2025-08-02 21:03:04 - app.main - INFO - main.py:304 - Creating table: team_members
2025-08-02 21:03:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.171s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:03:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00300s] {}
2025-08-02 21:03:04 - app.main - INFO - main.py:306 - Table created: team_members
2025-08-02 21:03:04 - app.main - INFO - main.py:304 - Creating table: attachments
2025-08-02 21:03:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.332s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 21:03:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00169s] {}
2025-08-02 21:03:05 - app.main - INFO - main.py:306 - Table created: attachments
2025-08-02 21:03:05 - app.main - INFO - main.py:304 - Creating table: activity_logs
2025-08-02 21:03:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.492s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:03:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00118s] {}
2025-08-02 21:03:05 - app.main - INFO - main.py:306 - Table created: activity_logs
2025-08-02 21:03:05 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:03:05 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x0000021523FFFDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 21:03:05 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x0000021523FFFDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 21:03:05 - app.main - INFO - main.py:311 - All database tables created successfully
2025-08-02 21:03:41 - app.main - INFO - main.py:319 - Application shutdown
2025-08-02 21:03:42 - app.main - INFO - main.py:319 - Application shutdown
2025-08-02 21:03:43 - root - INFO - main.py:88 - ================================================================================
2025-08-02 21:03:43 - root - INFO - main.py:89 - Application starting with enhanced logging (level: DEBUG)
2025-08-02 21:03:43 - root - INFO - main.py:90 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 21:03:43 - root - INFO - main.py:91 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 21:03:43 - root - INFO - main.py:92 - ================================================================================
2025-08-02 21:03:43 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-08-02 21:03:43 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-08-02 21:03:43 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-08-02 21:03:43 - passlib.registry - DEBUG - registry.py:296 - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
2025-08-02 21:03:43 - app.api.v1.routes.auth - DEBUG - auth.py:34 - Environment variables: {
  "ALLUSERSPROFILE": "C:\\ProgramData",
  "APPDATA": "C:\\Users\\kunal\\AppData\\Roaming",
  "C:\\USERS\\KUNAL\\DOWNLOADS\\EMERGENTINTELLITEST-MAIN": "C:\\Program Files\\nodejs\\",
  "CHROME_CRASHPAD_PIPE_NAME": "\\\\.\\pipe\\crashpad_11300_YGFLEAWXLMRVRBOK",
  "COMMONPROGRAMFILES": "C:\\Program Files\\Common Files",
  "COMMONPROGRAMFILES(X86)": "C:\\Program Files (x86)\\Common Files",
  "COMMONPROGRAMW6432": "C:\\Program Files\\Common Files",
  "COMPUTERNAME": "KUNALDELL",
  "COMSPEC": "C:\\Windows\\system32\\cmd.exe",
  "DRIVERDATA": "C:\\Windows\\System32\\Drivers\\DriverData",
  "EFC_5864_1592913036": "1",
  "HOMEDRIVE": "C:",
  "HOMEPATH": "\\Users\\kunal",
  "LOCALAPPDATA": "C:\\Users\\kunal\\AppData\\Local",
  "LOGONSERVER": "\\\\KUNALDELL",
  "LOG_LEVEL": "DEBUG",
  "NUMBER_OF_PROCESSORS": "22",
  "ONEDRIVE": "C:\\Users\\kunal\\OneDrive",
  "ONEDRIVECONSUMER": "C:\\Users\\kunal\\OneDrive",
  "ORIGINAL_XDG_CURRENT_DESKTOP": "undefined",
  "OS": "Windows_NT",
  "PATH": "C:\\Program Files\\Python312\\Scripts\\;C:\\Program Files\\Python312\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files\\Git\\cmd;c:\\Users\\kunal\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Program Files\\nodejs\\;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\kunal\\AppData\\Local\\Programs\\Windsurf\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WinGet\\Links;C:\\Program Files\\nodejs;C:\\Users\\kunal\\AppData\\Roaming\\npm;C:\\Program Files\\Git\\bin;C:\\Users\\kunal\\.deno\\bin;c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\scripts\\noConfigScripts",
  "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL",
  "POSTGRESQL": "C:\\Program Files\\PostgreSQL\\17\\bin\\bin",
  "PROCESSOR_ARCHITECTURE": "AMD64",
  "PROCESSOR_IDENTIFIER": "Intel64 Family 6 Model 170 Stepping 4, GenuineIntel",
  "PROCESSOR_LEVEL": "6",
  "PROCESSOR_REVISION": "aa04",
  "PROGRAMDATA": "C:\\ProgramData",
  "PROGRAMFILES": "C:\\Program Files",
  "PROGRAMFILES(X86)": "C:\\Program Files (x86)",
  "PROGRAMW6432": "C:\\Program Files",
  "PSMODULEPATH": "C:\\Users\\kunal\\OneDrive\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules",
  "PUBLIC": "C:\\Users\\Public",
  "PYTHONUNBUFFERED": "1",
  "SESSIONNAME": "Console",
  "SYSTEMDRIVE": "C:",
  "SYSTEMROOT": "C:\\Windows",
  "TEMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "TMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "USERDOMAIN": "KUNALDELL",
  "USERDOMAIN_ROAMINGPROFILE": "KUNALDELL",
  "USERNAME": "kunal",
  "USERPROFILE": "C:\\Users\\kunal",
  "WINDIR": "C:\\Windows",
  "ZES_ENABLE_SYSMAN": "1",
  "PAGER": "cat",
  "TERM_PROGRAM": "vscode",
  "TERM_PROGRAM_VERSION": "1.99.3",
  "LANG": "en_US.UTF-8",
  "COLORTERM": "truecolor",
  "VSCODE_GIT_IPC_HANDLE": "\\\\.\\pipe\\vscode-git-fccd44132c-sock",
  "PYDEVD_DISABLE_FILE_VALIDATION": "1",
  "VSCODE_DEBUGPY_ADAPTER_ENDPOINTS": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\.noConfigDebugAdapterEndpoints\\endpoint-875e116b470e769c.txt",
  "BUNDLED_DEBUGPY_PATH": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\libs\\debugpy",
  "VSCODE_INJECTION": "1",
  "PROJECT_NAME": "IntelliTest AI Automation Platform",
  "ACCESS_TOKEN_EXPIRE_MINUTES": "11520",
  "SERVER_NAME": "localhost",
  "SERVER_HOST": "http://localhost:8001",
  "DATABASE_URL": "postgresql://postgres.lflecyuvttemfoyixngi:Ayeshaayesha121@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres",
  "SMTP_TLS": "true",
  "SMTP_PORT": "587",
  "SMTP_HOST": "smtp.gmail.com",
  "SMTP_USER": "your-email@gmail.com",
  "EMAILS_FROM_EMAIL": "your-email@gmail.com",
  "EMAILS_FROM_NAME": "IntelliTest Platform",
  "OPENAI_API_KEY": "your-openai-api-key-here",
  "AWS_ACCESS_KEY_ID": "your-aws-access-key",
  "AWS_DEFAULT_REGION": "us-east-1",
  "UPLOAD_DIR": "uploads",
  "MAX_UPLOAD_SIZE": "10485760",
  "ALLOWED_FILE_TYPES": "jpg,jpeg,png,gif,pdf,txt,csv,json",
  "TESTING": "false"
}
2025-08-02 21:03:43 - app.api.v1.routes.auth - DEBUG - auth.py:45 - Database URL: postgresql://postgres.lflecyuvttemfoyixngi:*****@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres
2025-08-02 21:03:43 - root - INFO - main.py:88 - ================================================================================
2025-08-02 21:03:43 - root - INFO - main.py:89 - Application starting with enhanced logging (level: INFO)
2025-08-02 21:03:43 - root - INFO - main.py:90 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 21:03:43 - root - INFO - main.py:91 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 21:03:43 - root - INFO - main.py:92 - ================================================================================
2025-08-02 21:03:44 - app.main - INFO - main.py:1372 - Initializing API routers...
2025-08-02 21:03:44 - app.main - INFO - main.py:1384 - API routers initialized successfully
2025-08-02 21:03:44 - app.main - INFO - main.py:246 - Starting database initialization...
2025-08-02 21:03:44 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x0000027B6EF4BAB0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 21:03:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:03:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:03:44 - app.main - INFO - main.py:1372 - Initializing API routers...
2025-08-02 21:03:44 - app.main - INFO - main.py:1384 - API routers initialized successfully
2025-08-02 21:03:44 - app.main - INFO - main.py:246 - Starting database initialization...
2025-08-02 21:03:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:03:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:03:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:03:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:03:45 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x0000027B6EF4BAB0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 21:03:45 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x0000027B6EF4BAB0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 21:03:45 - app.main - INFO - main.py:276 - Disabling foreign key constraints...
2025-08-02 21:03:45 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:03:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 21:03:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00132s] {}
2025-08-02 21:03:45 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x0000026A53DAFDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 21:03:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 21:03:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00136s] {}
2025-08-02 21:03:45 - app.main - INFO - main.py:291 - Dropping existing tables...
2025-08-02 21:03:45 - app.main - INFO - main.py:294 - Dropping table: activity_logs
2025-08-02 21:03:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 21:03:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00092s] {}
2025-08-02 21:03:45 - app.main - INFO - main.py:296 - Dropped table: activity_logs
2025-08-02 21:03:45 - app.main - INFO - main.py:294 - Dropping table: attachments
2025-08-02 21:03:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 21:03:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00248s] {}
2025-08-02 21:03:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:03:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:03:45 - app.main - INFO - main.py:296 - Dropped table: attachments
2025-08-02 21:03:45 - app.main - INFO - main.py:294 - Dropping table: comments
2025-08-02 21:03:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 21:03:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00244s] {}
2025-08-02 21:03:45 - app.main - INFO - main.py:296 - Dropped table: comments
2025-08-02 21:03:45 - app.main - INFO - main.py:294 - Dropping table: environments
2025-08-02 21:03:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 21:03:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00120s] {}
2025-08-02 21:03:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:03:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:03:45 - app.main - INFO - main.py:296 - Dropped table: environments
2025-08-02 21:03:45 - app.main - INFO - main.py:294 - Dropping table: projects
2025-08-02 21:03:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 21:03:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00090s] {}
2025-08-02 21:03:46 - app.main - INFO - main.py:296 - Dropped table: projects
2025-08-02 21:03:46 - app.main - INFO - main.py:294 - Dropping table: team_members
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00102s] {}
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:03:46 - app.main - INFO - main.py:296 - Dropped table: team_members
2025-08-02 21:03:46 - app.main - INFO - main.py:294 - Dropping table: teams
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00145s] {}
2025-08-02 21:03:46 - app.main - INFO - main.py:296 - Dropped table: teams
2025-08-02 21:03:46 - app.main - INFO - main.py:294 - Dropping table: test_cases
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00116s] {}
2025-08-02 21:03:46 - app.main - INFO - main.py:296 - Dropped table: test_cases
2025-08-02 21:03:46 - app.main - INFO - main.py:294 - Dropping table: test_executions
2025-08-02 21:03:46 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x0000026A53DAFDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 21:03:46 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x0000026A53DAFDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 21:03:46 - app.main - INFO - main.py:276 - Disabling foreign key constraints...
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00180s] {}
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00101s] {}
2025-08-02 21:03:46 - app.main - INFO - main.py:296 - Dropped table: test_executions
2025-08-02 21:03:46 - app.main - INFO - main.py:294 - Dropping table: test_plan_test_cases
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00045s] {}
2025-08-02 21:03:46 - app.main - INFO - main.py:296 - Dropped table: test_plan_test_cases
2025-08-02 21:03:46 - app.main - INFO - main.py:294 - Dropping table: test_plans
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00095s] {}
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00116s] {}
2025-08-02 21:03:46 - app.main - INFO - main.py:296 - Dropped table: test_plans
2025-08-02 21:03:46 - app.main - INFO - main.py:294 - Dropping table: test_steps
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00088s] {}
2025-08-02 21:03:46 - app.main - INFO - main.py:291 - Dropping existing tables...
2025-08-02 21:03:46 - app.main - INFO - main.py:294 - Dropping table: activity_logs
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00078s] {}
2025-08-02 21:03:46 - app.main - INFO - main.py:296 - Dropped table: test_steps
2025-08-02 21:03:46 - app.main - INFO - main.py:294 - Dropping table: users
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00103s] {}
2025-08-02 21:03:46 - app.main - INFO - main.py:296 - Dropped table: users
2025-08-02 21:03:46 - app.main - INFO - main.py:302 - Creating database tables in order...
2025-08-02 21:03:46 - app.main - INFO - main.py:305 - Creating table: users
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00134s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00143s] {}
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00148s] {}
2025-08-02 21:03:46 - app.main - INFO - main.py:307 - Table created: users
2025-08-02 21:03:46 - app.main - INFO - main.py:305 - Creating table: teams
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2465s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:03:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00087s] {}
2025-08-02 21:03:47 - app.main - INFO - main.py:307 - Table created: teams
2025-08-02 21:03:47 - app.main - INFO - main.py:305 - Creating table: projects
2025-08-02 21:03:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4149s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 21:03:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00238s] {}
2025-08-02 21:03:47 - app.main - INFO - main.py:307 - Table created: projects
2025-08-02 21:03:47 - app.main - INFO - main.py:305 - Creating table: environments
2025-08-02 21:03:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5856s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 21:03:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00245s] {}
2025-08-02 21:03:47 - app.main - INFO - main.py:307 - Table created: environments
2025-08-02 21:03:47 - app.main - INFO - main.py:305 - Creating table: test_cases
2025-08-02 21:03:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.75s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00156s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.08445s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1655s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 21:03:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00179s] {}
2025-08-02 21:03:47 - app.main - INFO - main.py:307 - Table created: test_cases
2025-08-02 21:03:47 - app.main - INFO - main.py:305 - Creating table: test_steps
2025-08-02 21:03:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.165s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 21:03:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00135s] {}
2025-08-02 21:03:48 - app.main - INFO - main.py:307 - Table created: test_steps
2025-08-02 21:03:48 - app.main - INFO - main.py:305 - Creating table: test_plans
2025-08-02 21:03:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.906s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.159s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:03:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00101s] {}
2025-08-02 21:03:48 - app.main - INFO - main.py:307 - Table created: test_plans
2025-08-02 21:03:48 - app.main - INFO - main.py:305 - Creating table: test_plan_test_cases
2025-08-02 21:03:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.159s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:03:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00162s] {}
2025-08-02 21:03:49 - app.main - INFO - main.py:307 - Table created: test_plan_test_cases
2025-08-02 21:03:49 - app.main - INFO - main.py:305 - Creating table: test_executions
2025-08-02 21:03:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.327s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.58s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 21:03:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00268s] {}
2025-08-02 21:03:49 - app.main - INFO - main.py:307 - Table created: test_executions
2025-08-02 21:03:49 - app.main - INFO - main.py:305 - Creating table: comments
2025-08-02 21:03:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.578s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.828s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 21:03:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00209s] {}
2025-08-02 21:03:49 - app.main - INFO - main.py:307 - Table created: comments
2025-08-02 21:03:49 - app.main - INFO - main.py:305 - Creating table: team_members
2025-08-02 21:03:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.828s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:03:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00462s] {}
2025-08-02 21:03:49 - app.main - INFO - main.py:307 - Table created: team_members
2025-08-02 21:03:49 - app.main - INFO - main.py:305 - Creating table: attachments
2025-08-02 21:03:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.996s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 21:03:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00213s] {}
2025-08-02 21:03:49 - app.main - INFO - main.py:307 - Table created: attachments
2025-08-02 21:03:49 - app.main - INFO - main.py:305 - Creating table: activity_logs
2025-08-02 21:03:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 3.165s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:03:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00271s] {}
2025-08-02 21:03:50 - app.main - INFO - main.py:307 - Table created: activity_logs
2025-08-02 21:03:50 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:03:50 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x0000027B6EF4BAB0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 21:03:50 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x0000027B6EF4BAB0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 21:03:50 - app.main - INFO - main.py:312 - All database tables created successfully
2025-08-02 21:03:50 - app.main - INFO - main.py:296 - Dropped table: activity_logs
2025-08-02 21:03:50 - app.main - INFO - main.py:294 - Dropping table: attachments
2025-08-02 21:03:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 21:03:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00194s] {}
2025-08-02 21:03:50 - app.main - INFO - main.py:296 - Dropped table: attachments
2025-08-02 21:03:50 - app.main - INFO - main.py:294 - Dropping table: comments
2025-08-02 21:03:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 21:03:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00069s] {}
2025-08-02 21:03:50 - app.main - INFO - main.py:296 - Dropped table: comments
2025-08-02 21:03:50 - app.main - INFO - main.py:294 - Dropping table: environments
2025-08-02 21:03:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 21:03:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00096s] {}
2025-08-02 21:03:50 - app.main - INFO - main.py:296 - Dropped table: environments
2025-08-02 21:03:50 - app.main - INFO - main.py:294 - Dropping table: projects
2025-08-02 21:03:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 21:03:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00093s] {}
2025-08-02 21:03:50 - app.main - INFO - main.py:296 - Dropped table: projects
2025-08-02 21:03:50 - app.main - INFO - main.py:294 - Dropping table: team_members
2025-08-02 21:03:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 21:03:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00063s] {}
2025-08-02 21:03:50 - app.main - INFO - main.py:296 - Dropped table: team_members
2025-08-02 21:03:50 - app.main - INFO - main.py:294 - Dropping table: teams
2025-08-02 21:03:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 21:03:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00111s] {}
2025-08-02 21:03:50 - app.main - INFO - main.py:296 - Dropped table: teams
2025-08-02 21:03:50 - app.main - INFO - main.py:294 - Dropping table: test_cases
2025-08-02 21:03:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 21:03:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00073s] {}
2025-08-02 21:03:50 - app.main - INFO - main.py:296 - Dropped table: test_cases
2025-08-02 21:03:50 - app.main - INFO - main.py:294 - Dropping table: test_executions
2025-08-02 21:03:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 21:03:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00063s] {}
2025-08-02 21:03:50 - app.main - INFO - main.py:296 - Dropped table: test_executions
2025-08-02 21:03:50 - app.main - INFO - main.py:294 - Dropping table: test_plan_test_cases
2025-08-02 21:03:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 21:03:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00080s] {}
2025-08-02 21:03:50 - app.main - INFO - main.py:296 - Dropped table: test_plan_test_cases
2025-08-02 21:03:50 - app.main - INFO - main.py:294 - Dropping table: test_plans
2025-08-02 21:03:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 21:03:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00114s] {}
2025-08-02 21:03:51 - app.main - INFO - main.py:296 - Dropped table: test_plans
2025-08-02 21:03:51 - app.main - INFO - main.py:294 - Dropping table: test_steps
2025-08-02 21:03:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 21:03:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00124s] {}
2025-08-02 21:03:51 - app.main - INFO - main.py:296 - Dropped table: test_steps
2025-08-02 21:03:51 - app.main - INFO - main.py:294 - Dropping table: users
2025-08-02 21:03:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 21:03:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00069s] {}
2025-08-02 21:03:51 - app.main - INFO - main.py:296 - Dropped table: users
2025-08-02 21:03:51 - app.main - INFO - main.py:302 - Creating database tables in order...
2025-08-02 21:03:51 - app.main - INFO - main.py:305 - Creating table: users
2025-08-02 21:03:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00107s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 21:03:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00142s] {}
2025-08-02 21:03:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 21:03:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00237s] {}
2025-08-02 21:03:51 - app.main - INFO - main.py:307 - Table created: users
2025-08-02 21:03:51 - app.main - INFO - main.py:305 - Creating table: teams
2025-08-02 21:03:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2725s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:03:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00130s] {}
2025-08-02 21:03:51 - app.main - INFO - main.py:307 - Table created: teams
2025-08-02 21:03:51 - app.main - INFO - main.py:305 - Creating table: projects
2025-08-02 21:03:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4517s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 21:03:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00144s] {}
2025-08-02 21:03:51 - app.main - INFO - main.py:307 - Table created: projects
2025-08-02 21:03:51 - app.main - INFO - main.py:305 - Creating table: environments
2025-08-02 21:03:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6307s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 21:03:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00313s] {}
2025-08-02 21:03:52 - app.main - INFO - main.py:307 - Table created: environments
2025-08-02 21:03:52 - app.main - INFO - main.py:305 - Creating table: test_cases
2025-08-02 21:03:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.8144s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00141s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.09314s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1831s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 21:03:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00319s] {}
2025-08-02 21:03:52 - app.main - INFO - main.py:307 - Table created: test_cases
2025-08-02 21:03:52 - app.main - INFO - main.py:305 - Creating table: test_steps
2025-08-02 21:03:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.267s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 21:03:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00120s] {}
2025-08-02 21:03:52 - app.main - INFO - main.py:307 - Table created: test_steps
2025-08-02 21:03:52 - app.main - INFO - main.py:305 - Creating table: test_plans
2025-08-02 21:03:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.448s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6342s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:03:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00170s] {}
2025-08-02 21:03:52 - app.main - INFO - main.py:307 - Table created: test_plans
2025-08-02 21:03:52 - app.main - INFO - main.py:305 - Creating table: test_plan_test_cases
2025-08-02 21:03:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.719s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:03:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00165s] {}
2025-08-02 21:03:53 - app.main - INFO - main.py:307 - Table created: test_plan_test_cases
2025-08-02 21:03:53 - app.main - INFO - main.py:305 - Creating table: test_executions
2025-08-02 21:03:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.901s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.087s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 21:03:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00163s] {}
2025-08-02 21:03:53 - app.main - INFO - main.py:307 - Table created: test_executions
2025-08-02 21:03:53 - app.main - INFO - main.py:305 - Creating table: comments
2025-08-02 21:03:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.172s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.357s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 21:03:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00197s] {}
2025-08-02 21:03:53 - app.main - INFO - main.py:307 - Table created: comments
2025-08-02 21:03:53 - app.main - INFO - main.py:305 - Creating table: team_members
2025-08-02 21:03:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.448s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:03:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00292s] {}
2025-08-02 21:03:53 - app.main - INFO - main.py:307 - Table created: team_members
2025-08-02 21:03:53 - app.main - INFO - main.py:305 - Creating table: attachments
2025-08-02 21:03:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.631s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 21:03:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00152s] {}
2025-08-02 21:03:54 - app.main - INFO - main.py:307 - Table created: attachments
2025-08-02 21:03:54 - app.main - INFO - main.py:305 - Creating table: activity_logs
2025-08-02 21:03:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:03:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.811s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:03:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:03:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00354s] {}
2025-08-02 21:03:54 - app.main - INFO - main.py:307 - Table created: activity_logs
2025-08-02 21:03:54 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:03:54 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x0000026A53DAFDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 21:03:54 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x0000026A53DAFDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 21:03:54 - app.main - INFO - main.py:312 - All database tables created successfully
2025-08-02 21:04:06 - app.main - INFO - main.py:320 - Application shutdown
2025-08-02 21:04:08 - root - INFO - main.py:88 - ================================================================================
2025-08-02 21:04:08 - root - INFO - main.py:89 - Application starting with enhanced logging (level: DEBUG)
2025-08-02 21:04:08 - root - INFO - main.py:90 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 21:04:08 - root - INFO - main.py:91 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 21:04:08 - root - INFO - main.py:92 - ================================================================================
2025-08-02 21:04:08 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-08-02 21:04:08 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-08-02 21:04:08 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-08-02 21:04:08 - passlib.registry - DEBUG - registry.py:296 - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
2025-08-02 21:04:08 - app.api.v1.routes.auth - DEBUG - auth.py:34 - Environment variables: {
  "ALLUSERSPROFILE": "C:\\ProgramData",
  "APPDATA": "C:\\Users\\kunal\\AppData\\Roaming",
  "C:\\USERS\\KUNAL\\DOWNLOADS\\EMERGENTINTELLITEST-MAIN": "C:\\Program Files\\nodejs\\",
  "CHROME_CRASHPAD_PIPE_NAME": "\\\\.\\pipe\\crashpad_11300_YGFLEAWXLMRVRBOK",
  "COMMONPROGRAMFILES": "C:\\Program Files\\Common Files",
  "COMMONPROGRAMFILES(X86)": "C:\\Program Files (x86)\\Common Files",
  "COMMONPROGRAMW6432": "C:\\Program Files\\Common Files",
  "COMPUTERNAME": "KUNALDELL",
  "COMSPEC": "C:\\Windows\\system32\\cmd.exe",
  "DRIVERDATA": "C:\\Windows\\System32\\Drivers\\DriverData",
  "EFC_5864_1592913036": "1",
  "HOMEDRIVE": "C:",
  "HOMEPATH": "\\Users\\kunal",
  "LOCALAPPDATA": "C:\\Users\\kunal\\AppData\\Local",
  "LOGONSERVER": "\\\\KUNALDELL",
  "LOG_LEVEL": "DEBUG",
  "NUMBER_OF_PROCESSORS": "22",
  "ONEDRIVE": "C:\\Users\\kunal\\OneDrive",
  "ONEDRIVECONSUMER": "C:\\Users\\kunal\\OneDrive",
  "ORIGINAL_XDG_CURRENT_DESKTOP": "undefined",
  "OS": "Windows_NT",
  "PATH": "C:\\Program Files\\Python312\\Scripts\\;C:\\Program Files\\Python312\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files\\Git\\cmd;c:\\Users\\kunal\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Program Files\\nodejs\\;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\kunal\\AppData\\Local\\Programs\\Windsurf\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WinGet\\Links;C:\\Program Files\\nodejs;C:\\Users\\kunal\\AppData\\Roaming\\npm;C:\\Program Files\\Git\\bin;C:\\Users\\kunal\\.deno\\bin;c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\scripts\\noConfigScripts",
  "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL",
  "POSTGRESQL": "C:\\Program Files\\PostgreSQL\\17\\bin\\bin",
  "PROCESSOR_ARCHITECTURE": "AMD64",
  "PROCESSOR_IDENTIFIER": "Intel64 Family 6 Model 170 Stepping 4, GenuineIntel",
  "PROCESSOR_LEVEL": "6",
  "PROCESSOR_REVISION": "aa04",
  "PROGRAMDATA": "C:\\ProgramData",
  "PROGRAMFILES": "C:\\Program Files",
  "PROGRAMFILES(X86)": "C:\\Program Files (x86)",
  "PROGRAMW6432": "C:\\Program Files",
  "PSMODULEPATH": "C:\\Users\\kunal\\OneDrive\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules",
  "PUBLIC": "C:\\Users\\Public",
  "PYTHONUNBUFFERED": "1",
  "SESSIONNAME": "Console",
  "SYSTEMDRIVE": "C:",
  "SYSTEMROOT": "C:\\Windows",
  "TEMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "TMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "USERDOMAIN": "KUNALDELL",
  "USERDOMAIN_ROAMINGPROFILE": "KUNALDELL",
  "USERNAME": "kunal",
  "USERPROFILE": "C:\\Users\\kunal",
  "WINDIR": "C:\\Windows",
  "ZES_ENABLE_SYSMAN": "1",
  "PAGER": "cat",
  "TERM_PROGRAM": "vscode",
  "TERM_PROGRAM_VERSION": "1.99.3",
  "LANG": "en_US.UTF-8",
  "COLORTERM": "truecolor",
  "VSCODE_GIT_IPC_HANDLE": "\\\\.\\pipe\\vscode-git-fccd44132c-sock",
  "PYDEVD_DISABLE_FILE_VALIDATION": "1",
  "VSCODE_DEBUGPY_ADAPTER_ENDPOINTS": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\.noConfigDebugAdapterEndpoints\\endpoint-875e116b470e769c.txt",
  "BUNDLED_DEBUGPY_PATH": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\libs\\debugpy",
  "VSCODE_INJECTION": "1",
  "PROJECT_NAME": "IntelliTest AI Automation Platform",
  "ACCESS_TOKEN_EXPIRE_MINUTES": "11520",
  "SERVER_NAME": "localhost",
  "SERVER_HOST": "http://localhost:8001",
  "DATABASE_URL": "postgresql://postgres.lflecyuvttemfoyixngi:Ayeshaayesha121@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres",
  "SMTP_TLS": "true",
  "SMTP_PORT": "587",
  "SMTP_HOST": "smtp.gmail.com",
  "SMTP_USER": "your-email@gmail.com",
  "EMAILS_FROM_EMAIL": "your-email@gmail.com",
  "EMAILS_FROM_NAME": "IntelliTest Platform",
  "OPENAI_API_KEY": "your-openai-api-key-here",
  "AWS_ACCESS_KEY_ID": "your-aws-access-key",
  "AWS_DEFAULT_REGION": "us-east-1",
  "UPLOAD_DIR": "uploads",
  "MAX_UPLOAD_SIZE": "10485760",
  "ALLOWED_FILE_TYPES": "jpg,jpeg,png,gif,pdf,txt,csv,json",
  "TESTING": "false"
}
2025-08-02 21:04:08 - app.api.v1.routes.auth - DEBUG - auth.py:45 - Database URL: postgresql://postgres.lflecyuvttemfoyixngi:*****@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres
2025-08-02 21:04:09 - app.main - INFO - main.py:1372 - Initializing API routers...
2025-08-02 21:04:09 - app.main - INFO - main.py:1384 - API routers initialized successfully
2025-08-02 21:04:09 - app.main - INFO - main.py:246 - Starting database initialization...
2025-08-02 21:04:10 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x00000223292CFDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 21:04:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:04:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:04:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:04:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:04:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:04:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:04:11 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x00000223292CFDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 21:04:11 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x00000223292CFDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 21:04:11 - app.main - INFO - main.py:276 - Disabling foreign key constraints...
2025-08-02 21:04:11 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:04:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 21:04:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00197s] {}
2025-08-02 21:04:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 21:04:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00170s] {}
2025-08-02 21:04:11 - app.main - INFO - main.py:291 - Dropping existing tables...
2025-08-02 21:04:11 - app.main - INFO - main.py:294 - Dropping table: activity_logs
2025-08-02 21:04:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 21:04:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00083s] {}
2025-08-02 21:04:12 - app.main - INFO - main.py:320 - Application shutdown
2025-08-02 21:04:12 - app.main - INFO - main.py:296 - Dropped table: activity_logs
2025-08-02 21:04:12 - app.main - INFO - main.py:294 - Dropping table: attachments
2025-08-02 21:04:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 21:04:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00087s] {}
2025-08-02 21:04:12 - app.main - INFO - main.py:296 - Dropped table: attachments
2025-08-02 21:04:12 - app.main - INFO - main.py:294 - Dropping table: comments
2025-08-02 21:04:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 21:04:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00087s] {}
2025-08-02 21:04:12 - app.main - INFO - main.py:296 - Dropped table: comments
2025-08-02 21:04:12 - app.main - INFO - main.py:294 - Dropping table: environments
2025-08-02 21:04:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 21:04:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00078s] {}
2025-08-02 21:04:12 - app.main - INFO - main.py:296 - Dropped table: environments
2025-08-02 21:04:12 - app.main - INFO - main.py:294 - Dropping table: projects
2025-08-02 21:04:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 21:04:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00096s] {}
2025-08-02 21:04:12 - app.main - INFO - main.py:296 - Dropped table: projects
2025-08-02 21:04:12 - app.main - INFO - main.py:294 - Dropping table: team_members
2025-08-02 21:04:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 21:04:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00076s] {}
2025-08-02 21:04:12 - app.main - INFO - main.py:296 - Dropped table: team_members
2025-08-02 21:04:12 - app.main - INFO - main.py:294 - Dropping table: teams
2025-08-02 21:04:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 21:04:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00079s] {}
2025-08-02 21:04:12 - app.main - INFO - main.py:296 - Dropped table: teams
2025-08-02 21:04:12 - app.main - INFO - main.py:294 - Dropping table: test_cases
2025-08-02 21:04:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 21:04:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00064s] {}
2025-08-02 21:04:12 - app.main - INFO - main.py:296 - Dropped table: test_cases
2025-08-02 21:04:12 - app.main - INFO - main.py:294 - Dropping table: test_executions
2025-08-02 21:04:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 21:04:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00095s] {}
2025-08-02 21:04:12 - app.main - INFO - main.py:296 - Dropped table: test_executions
2025-08-02 21:04:12 - app.main - INFO - main.py:294 - Dropping table: test_plan_test_cases
2025-08-02 21:04:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 21:04:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00069s] {}
2025-08-02 21:04:12 - app.main - INFO - main.py:296 - Dropped table: test_plan_test_cases
2025-08-02 21:04:12 - app.main - INFO - main.py:294 - Dropping table: test_plans
2025-08-02 21:04:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 21:04:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00082s] {}
2025-08-02 21:04:12 - app.main - INFO - main.py:296 - Dropped table: test_plans
2025-08-02 21:04:12 - app.main - INFO - main.py:294 - Dropping table: test_steps
2025-08-02 21:04:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 21:04:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00080s] {}
2025-08-02 21:04:12 - app.main - INFO - main.py:296 - Dropped table: test_steps
2025-08-02 21:04:12 - app.main - INFO - main.py:294 - Dropping table: users
2025-08-02 21:04:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 21:04:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00107s] {}
2025-08-02 21:04:13 - app.main - INFO - main.py:296 - Dropped table: users
2025-08-02 21:04:13 - app.main - INFO - main.py:302 - Creating database tables in order...
2025-08-02 21:04:13 - app.main - INFO - main.py:305 - Creating table: users
2025-08-02 21:04:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00228s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 21:04:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00124s] {}
2025-08-02 21:04:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 21:04:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00219s] {}
2025-08-02 21:04:13 - app.main - INFO - main.py:307 - Table created: users
2025-08-02 21:04:13 - app.main - INFO - main.py:305 - Creating table: teams
2025-08-02 21:04:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2557s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:04:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00148s] {}
2025-08-02 21:04:13 - app.main - INFO - main.py:307 - Table created: teams
2025-08-02 21:04:13 - app.main - INFO - main.py:305 - Creating table: projects
2025-08-02 21:04:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4222s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 21:04:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00107s] {}
2025-08-02 21:04:13 - app.main - INFO - main.py:307 - Table created: projects
2025-08-02 21:04:13 - app.main - INFO - main.py:305 - Creating table: environments
2025-08-02 21:04:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5912s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 21:04:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00138s] {}
2025-08-02 21:04:13 - app.main - INFO - main.py:307 - Table created: environments
2025-08-02 21:04:13 - app.main - INFO - main.py:305 - Creating table: test_cases
2025-08-02 21:04:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.758s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00096s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.08321s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1662s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 21:04:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00227s] {}
2025-08-02 21:04:14 - root - INFO - main.py:88 - ================================================================================
2025-08-02 21:04:14 - root - INFO - main.py:89 - Application starting with enhanced logging (level: INFO)
2025-08-02 21:04:14 - root - INFO - main.py:90 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 21:04:14 - root - INFO - main.py:91 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 21:04:14 - root - INFO - main.py:92 - ================================================================================
2025-08-02 21:04:14 - app.main - INFO - main.py:307 - Table created: test_cases
2025-08-02 21:04:14 - app.main - INFO - main.py:305 - Creating table: test_steps
2025-08-02 21:04:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.173s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 21:04:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00087s] {}
2025-08-02 21:04:14 - app.main - INFO - main.py:307 - Table created: test_steps
2025-08-02 21:04:14 - app.main - INFO - main.py:305 - Creating table: test_plans
2025-08-02 21:04:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.338s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5799s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:04:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00128s] {}
2025-08-02 21:04:14 - app.main - INFO - main.py:307 - Table created: test_plans
2025-08-02 21:04:14 - app.main - INFO - main.py:305 - Creating table: test_plan_test_cases
2025-08-02 21:04:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.588s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:04:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00127s] {}
2025-08-02 21:04:14 - app.main - INFO - main.py:307 - Table created: test_plan_test_cases
2025-08-02 21:04:14 - app.main - INFO - main.py:305 - Creating table: test_executions
2025-08-02 21:04:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.756s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.9977s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 21:04:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00137s] {}
2025-08-02 21:04:15 - app.main - INFO - main.py:307 - Table created: test_executions
2025-08-02 21:04:15 - app.main - INFO - main.py:305 - Creating table: comments
2025-08-02 21:04:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.007s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.25s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 21:04:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00159s] {}
2025-08-02 21:04:15 - app.main - INFO - main.py:307 - Table created: comments
2025-08-02 21:04:15 - app.main - INFO - main.py:305 - Creating table: team_members
2025-08-02 21:04:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.257s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:15 - app.main - INFO - main.py:1372 - Initializing API routers...
2025-08-02 21:04:15 - app.main - INFO - main.py:1384 - API routers initialized successfully
2025-08-02 21:04:15 - app.main - INFO - main.py:246 - Starting database initialization...
2025-08-02 21:04:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:04:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00131s] {}
2025-08-02 21:04:15 - app.main - INFO - main.py:307 - Table created: team_members
2025-08-02 21:04:15 - app.main - INFO - main.py:305 - Creating table: attachments
2025-08-02 21:04:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.421s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 21:04:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00118s] {}
2025-08-02 21:04:15 - app.main - INFO - main.py:307 - Table created: attachments
2025-08-02 21:04:15 - app.main - INFO - main.py:305 - Creating table: activity_logs
2025-08-02 21:04:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.589s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:04:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00138s] {}
2025-08-02 21:04:15 - app.main - INFO - main.py:307 - Table created: activity_logs
2025-08-02 21:04:15 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:04:15 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x00000223292CFDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 21:04:15 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x00000223292CFDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 21:04:15 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x00000140A587FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 21:04:15 - app.main - INFO - main.py:312 - All database tables created successfully
2025-08-02 21:04:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:04:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:04:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:04:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:04:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:04:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:04:16 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x00000140A587FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 21:04:16 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x00000140A587FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 21:04:16 - app.main - INFO - main.py:276 - Disabling foreign key constraints...
2025-08-02 21:04:16 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:04:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 21:04:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00209s] {}
2025-08-02 21:04:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 21:04:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00209s] {}
2025-08-02 21:04:16 - app.main - INFO - main.py:291 - Dropping existing tables...
2025-08-02 21:04:16 - app.main - INFO - main.py:294 - Dropping table: activity_logs
2025-08-02 21:04:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 21:04:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00103s] {}
2025-08-02 21:04:17 - app.main - INFO - main.py:296 - Dropped table: activity_logs
2025-08-02 21:04:17 - app.main - INFO - main.py:294 - Dropping table: attachments
2025-08-02 21:04:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 21:04:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00091s] {}
2025-08-02 21:04:17 - app.main - INFO - main.py:296 - Dropped table: attachments
2025-08-02 21:04:17 - app.main - INFO - main.py:294 - Dropping table: comments
2025-08-02 21:04:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 21:04:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00261s] {}
2025-08-02 21:04:17 - app.main - INFO - main.py:296 - Dropped table: comments
2025-08-02 21:04:17 - app.main - INFO - main.py:294 - Dropping table: environments
2025-08-02 21:04:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 21:04:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00074s] {}
2025-08-02 21:04:17 - app.main - INFO - main.py:296 - Dropped table: environments
2025-08-02 21:04:17 - app.main - INFO - main.py:294 - Dropping table: projects
2025-08-02 21:04:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 21:04:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00095s] {}
2025-08-02 21:04:17 - app.main - INFO - main.py:296 - Dropped table: projects
2025-08-02 21:04:17 - app.main - INFO - main.py:294 - Dropping table: team_members
2025-08-02 21:04:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 21:04:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00050s] {}
2025-08-02 21:04:17 - app.main - INFO - main.py:296 - Dropped table: team_members
2025-08-02 21:04:17 - app.main - INFO - main.py:294 - Dropping table: teams
2025-08-02 21:04:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 21:04:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00176s] {}
2025-08-02 21:04:17 - app.main - INFO - main.py:296 - Dropped table: teams
2025-08-02 21:04:17 - app.main - INFO - main.py:294 - Dropping table: test_cases
2025-08-02 21:04:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 21:04:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00094s] {}
2025-08-02 21:04:17 - app.main - INFO - main.py:296 - Dropped table: test_cases
2025-08-02 21:04:17 - app.main - INFO - main.py:294 - Dropping table: test_executions
2025-08-02 21:04:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 21:04:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00075s] {}
2025-08-02 21:04:17 - app.main - INFO - main.py:296 - Dropped table: test_executions
2025-08-02 21:04:17 - app.main - INFO - main.py:294 - Dropping table: test_plan_test_cases
2025-08-02 21:04:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 21:04:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00088s] {}
2025-08-02 21:04:17 - app.main - INFO - main.py:296 - Dropped table: test_plan_test_cases
2025-08-02 21:04:17 - app.main - INFO - main.py:294 - Dropping table: test_plans
2025-08-02 21:04:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 21:04:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00071s] {}
2025-08-02 21:04:17 - app.main - INFO - main.py:296 - Dropped table: test_plans
2025-08-02 21:04:17 - app.main - INFO - main.py:294 - Dropping table: test_steps
2025-08-02 21:04:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 21:04:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00082s] {}
2025-08-02 21:04:18 - app.main - INFO - main.py:296 - Dropped table: test_steps
2025-08-02 21:04:18 - app.main - INFO - main.py:294 - Dropping table: users
2025-08-02 21:04:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 21:04:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00093s] {}
2025-08-02 21:04:18 - app.main - INFO - main.py:296 - Dropped table: users
2025-08-02 21:04:18 - app.main - INFO - main.py:302 - Creating database tables in order...
2025-08-02 21:04:18 - app.main - INFO - main.py:305 - Creating table: users
2025-08-02 21:04:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00124s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 21:04:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00147s] {}
2025-08-02 21:04:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 21:04:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00091s] {}
2025-08-02 21:04:18 - app.main - INFO - main.py:307 - Table created: users
2025-08-02 21:04:18 - app.main - INFO - main.py:305 - Creating table: teams
2025-08-02 21:04:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2603s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:04:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00143s] {}
2025-08-02 21:04:18 - app.main - INFO - main.py:307 - Table created: teams
2025-08-02 21:04:18 - app.main - INFO - main.py:305 - Creating table: projects
2025-08-02 21:04:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4433s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 21:04:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00160s] {}
2025-08-02 21:04:18 - app.main - INFO - main.py:307 - Table created: projects
2025-08-02 21:04:18 - app.main - INFO - main.py:305 - Creating table: environments
2025-08-02 21:04:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6246s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 21:04:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00144s] {}
2025-08-02 21:04:18 - app.main - INFO - main.py:307 - Table created: environments
2025-08-02 21:04:18 - app.main - INFO - main.py:305 - Creating table: test_cases
2025-08-02 21:04:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.8008s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00123s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.08613s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1773s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 21:04:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00161s] {}
2025-08-02 21:04:19 - app.main - INFO - main.py:307 - Table created: test_cases
2025-08-02 21:04:19 - app.main - INFO - main.py:305 - Creating table: test_steps
2025-08-02 21:04:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.238s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 21:04:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00132s] {}
2025-08-02 21:04:19 - app.main - INFO - main.py:307 - Table created: test_steps
2025-08-02 21:04:19 - app.main - INFO - main.py:305 - Creating table: test_plans
2025-08-02 21:04:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.414s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6147s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:04:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00170s] {}
2025-08-02 21:04:19 - app.main - INFO - main.py:307 - Table created: test_plans
2025-08-02 21:04:19 - app.main - INFO - main.py:305 - Creating table: test_plan_test_cases
2025-08-02 21:04:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.68s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:04:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00208s] {}
2025-08-02 21:04:19 - app.main - INFO - main.py:307 - Table created: test_plan_test_cases
2025-08-02 21:04:19 - app.main - INFO - main.py:305 - Creating table: test_executions
2025-08-02 21:04:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.858s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.06s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 21:04:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00119s] {}
2025-08-02 21:04:20 - app.main - INFO - main.py:307 - Table created: test_executions
2025-08-02 21:04:20 - app.main - INFO - main.py:305 - Creating table: comments
2025-08-02 21:04:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.121s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.32s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 21:04:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00202s] {}
2025-08-02 21:04:20 - app.main - INFO - main.py:307 - Table created: comments
2025-08-02 21:04:20 - app.main - INFO - main.py:305 - Creating table: team_members
2025-08-02 21:04:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.382s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:04:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00156s] {}
2025-08-02 21:04:20 - app.main - INFO - main.py:307 - Table created: team_members
2025-08-02 21:04:20 - app.main - INFO - main.py:305 - Creating table: attachments
2025-08-02 21:04:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.555s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 21:04:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00170s] {}
2025-08-02 21:04:20 - app.main - INFO - main.py:307 - Table created: attachments
2025-08-02 21:04:20 - app.main - INFO - main.py:305 - Creating table: activity_logs
2025-08-02 21:04:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:04:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.732s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:04:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:04:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00168s] {}
2025-08-02 21:04:21 - app.main - INFO - main.py:307 - Table created: activity_logs
2025-08-02 21:04:21 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:04:21 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x00000140A587FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 21:04:21 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x00000140A587FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 21:04:21 - app.main - INFO - main.py:312 - All database tables created successfully
2025-08-02 21:05:18 - app.auth.security - INFO - security.py:142 - 
================================================================================
2025-08-02 21:05:18 - app.auth.security - INFO - security.py:143 - Authenticating request to http://127.0.0.1:8001/api/v1/test-cases/
2025-08-02 21:05:18 - app.auth.security - INFO - security.py:144 - Token: eyJhbGciOiJIUzI1NiIs...
2025-08-02 21:05:18 - app.auth.security - INFO - security.py:148 - Decoding JWT token...
2025-08-02 21:05:18 - app.auth.security - ERROR - security.py:186 - JWT validation error: Signature has expired.
2025-08-02 21:05:18 - app.auth.security - ERROR - security.py:187 - Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkNjY2MzEzNS0wZjQxLTQwM2YtYmNjYi02ODQyMzFjOTFhODEiLCJleHAiOjE3NTQxNDgwOTl9.dQpsuOKejSo29lOlrgN4fqh0csIAipY_2bCV8kHwRJk
2025-08-02 21:05:18 - app.auth.security - ERROR - security.py:188 - Traceback: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 149, in get_current_user
    payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 174, in decode
    _validate_claims(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 497, in _validate_claims
    _validate_exp(claims, leeway=leeway)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 331, in _validate_exp
    raise ExpiredSignatureError("Signature has expired.")
jose.exceptions.ExpiredSignatureError: Signature has expired.

2025-08-02 21:05:18 - app.auth.security - ERROR - security.py:193 - HTTP Exception during authentication: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 149, in get_current_user
    payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 174, in decode
    _validate_claims(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 497, in _validate_claims
    _validate_exp(claims, leeway=leeway)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 331, in _validate_exp
    raise ExpiredSignatureError("Signature has expired.")
jose.exceptions.ExpiredSignatureError: Signature has expired.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 189, in get_current_user
    raise credentials_exception
fastapi.exceptions.HTTPException: 401: Could not validate credentials

2025-08-02 21:05:18 - app.db.session - ERROR - session.py:101 - Database session error: 401: Could not validate credentials
2025-08-02 21:05:18 - app.main - WARNING - main.py:382 - HTTP Exception: 401 - Could not validate credentials - Path: /api/v1/test-cases/
2025-08-02 21:05:24 - app.auth.security - INFO - security.py:142 - 
================================================================================
2025-08-02 21:05:24 - app.auth.security - INFO - security.py:143 - Authenticating request to http://127.0.0.1:8001/api/v1/test-cases/
2025-08-02 21:05:24 - app.auth.security - INFO - security.py:144 - Token: eyJhbGciOiJIUzI1NiIs...
2025-08-02 21:05:24 - app.auth.security - INFO - security.py:148 - Decoding JWT token...
2025-08-02 21:05:24 - app.auth.security - ERROR - security.py:186 - JWT validation error: Signature has expired.
2025-08-02 21:05:24 - app.auth.security - ERROR - security.py:187 - Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkNjY2MzEzNS0wZjQxLTQwM2YtYmNjYi02ODQyMzFjOTFhODEiLCJleHAiOjE3NTQxNDgwOTl9.dQpsuOKejSo29lOlrgN4fqh0csIAipY_2bCV8kHwRJk
2025-08-02 21:05:24 - app.auth.security - ERROR - security.py:188 - Traceback: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 149, in get_current_user
    payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 174, in decode
    _validate_claims(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 497, in _validate_claims
    _validate_exp(claims, leeway=leeway)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 331, in _validate_exp
    raise ExpiredSignatureError("Signature has expired.")
jose.exceptions.ExpiredSignatureError: Signature has expired.

2025-08-02 21:05:24 - app.auth.security - ERROR - security.py:193 - HTTP Exception during authentication: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 149, in get_current_user
    payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 174, in decode
    _validate_claims(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 497, in _validate_claims
    _validate_exp(claims, leeway=leeway)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 331, in _validate_exp
    raise ExpiredSignatureError("Signature has expired.")
jose.exceptions.ExpiredSignatureError: Signature has expired.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 189, in get_current_user
    raise credentials_exception
fastapi.exceptions.HTTPException: 401: Could not validate credentials

2025-08-02 21:05:24 - app.db.session - ERROR - session.py:101 - Database session error: 401: Could not validate credentials
2025-08-02 21:05:24 - app.main - WARNING - main.py:382 - HTTP Exception: 401 - Could not validate credentials - Path: /api/v1/test-cases/
2025-08-02 21:05:28 - app.auth.security - INFO - security.py:142 - 
================================================================================
2025-08-02 21:05:28 - app.auth.security - INFO - security.py:143 - Authenticating request to http://127.0.0.1:8001/api/v1/test-cases/
2025-08-02 21:05:28 - app.auth.security - INFO - security.py:144 - Token: eyJhbGciOiJIUzI1NiIs...
2025-08-02 21:05:28 - app.auth.security - INFO - security.py:148 - Decoding JWT token...
2025-08-02 21:05:28 - app.auth.security - ERROR - security.py:186 - JWT validation error: Signature has expired.
2025-08-02 21:05:28 - app.auth.security - ERROR - security.py:187 - Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkNjY2MzEzNS0wZjQxLTQwM2YtYmNjYi02ODQyMzFjOTFhODEiLCJleHAiOjE3NTQxNDgwOTl9.dQpsuOKejSo29lOlrgN4fqh0csIAipY_2bCV8kHwRJk
2025-08-02 21:05:28 - app.auth.security - ERROR - security.py:188 - Traceback: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 149, in get_current_user
    payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 174, in decode
    _validate_claims(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 497, in _validate_claims
    _validate_exp(claims, leeway=leeway)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 331, in _validate_exp
    raise ExpiredSignatureError("Signature has expired.")
jose.exceptions.ExpiredSignatureError: Signature has expired.

2025-08-02 21:05:28 - app.auth.security - ERROR - security.py:193 - HTTP Exception during authentication: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 149, in get_current_user
    payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 174, in decode
    _validate_claims(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 497, in _validate_claims
    _validate_exp(claims, leeway=leeway)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 331, in _validate_exp
    raise ExpiredSignatureError("Signature has expired.")
jose.exceptions.ExpiredSignatureError: Signature has expired.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 189, in get_current_user
    raise credentials_exception
fastapi.exceptions.HTTPException: 401: Could not validate credentials

2025-08-02 21:05:28 - app.db.session - ERROR - session.py:101 - Database session error: 401: Could not validate credentials
2025-08-02 21:05:28 - app.main - WARNING - main.py:382 - HTTP Exception: 401 - Could not validate credentials - Path: /api/v1/test-cases/
2025-08-02 21:05:28 - app.auth.security - INFO - security.py:142 - 
================================================================================
2025-08-02 21:05:28 - app.auth.security - INFO - security.py:143 - Authenticating request to http://127.0.0.1:8001/api/v1/test-cases/
2025-08-02 21:05:28 - app.auth.security - INFO - security.py:144 - Token: eyJhbGciOiJIUzI1NiIs...
2025-08-02 21:05:28 - app.auth.security - INFO - security.py:148 - Decoding JWT token...
2025-08-02 21:05:28 - app.auth.security - ERROR - security.py:186 - JWT validation error: Signature has expired.
2025-08-02 21:05:28 - app.auth.security - ERROR - security.py:187 - Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkNjY2MzEzNS0wZjQxLTQwM2YtYmNjYi02ODQyMzFjOTFhODEiLCJleHAiOjE3NTQxNDgwOTl9.dQpsuOKejSo29lOlrgN4fqh0csIAipY_2bCV8kHwRJk
2025-08-02 21:05:28 - app.auth.security - ERROR - security.py:188 - Traceback: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 149, in get_current_user
    payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 174, in decode
    _validate_claims(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 497, in _validate_claims
    _validate_exp(claims, leeway=leeway)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 331, in _validate_exp
    raise ExpiredSignatureError("Signature has expired.")
jose.exceptions.ExpiredSignatureError: Signature has expired.

2025-08-02 21:05:28 - app.auth.security - ERROR - security.py:193 - HTTP Exception during authentication: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 149, in get_current_user
    payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 174, in decode
    _validate_claims(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 497, in _validate_claims
    _validate_exp(claims, leeway=leeway)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 331, in _validate_exp
    raise ExpiredSignatureError("Signature has expired.")
jose.exceptions.ExpiredSignatureError: Signature has expired.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 189, in get_current_user
    raise credentials_exception
fastapi.exceptions.HTTPException: 401: Could not validate credentials

2025-08-02 21:05:28 - app.db.session - ERROR - session.py:101 - Database session error: 401: Could not validate credentials
2025-08-02 21:05:28 - app.main - WARNING - main.py:382 - HTTP Exception: 401 - Could not validate credentials - Path: /api/v1/test-cases/
2025-08-02 21:05:29 - app.auth.security - INFO - security.py:142 - 
================================================================================
2025-08-02 21:05:29 - app.auth.security - INFO - security.py:143 - Authenticating request to http://127.0.0.1:8001/api/v1/test-cases/
2025-08-02 21:05:29 - app.auth.security - INFO - security.py:144 - Token: eyJhbGciOiJIUzI1NiIs...
2025-08-02 21:05:29 - app.auth.security - INFO - security.py:148 - Decoding JWT token...
2025-08-02 21:05:29 - app.auth.security - ERROR - security.py:186 - JWT validation error: Signature has expired.
2025-08-02 21:05:29 - app.auth.security - ERROR - security.py:187 - Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkNjY2MzEzNS0wZjQxLTQwM2YtYmNjYi02ODQyMzFjOTFhODEiLCJleHAiOjE3NTQxNDgwOTl9.dQpsuOKejSo29lOlrgN4fqh0csIAipY_2bCV8kHwRJk
2025-08-02 21:05:29 - app.auth.security - ERROR - security.py:188 - Traceback: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 149, in get_current_user
    payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 174, in decode
    _validate_claims(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 497, in _validate_claims
    _validate_exp(claims, leeway=leeway)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 331, in _validate_exp
    raise ExpiredSignatureError("Signature has expired.")
jose.exceptions.ExpiredSignatureError: Signature has expired.

2025-08-02 21:05:29 - app.auth.security - ERROR - security.py:193 - HTTP Exception during authentication: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 149, in get_current_user
    payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 174, in decode
    _validate_claims(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 497, in _validate_claims
    _validate_exp(claims, leeway=leeway)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 331, in _validate_exp
    raise ExpiredSignatureError("Signature has expired.")
jose.exceptions.ExpiredSignatureError: Signature has expired.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 189, in get_current_user
    raise credentials_exception
fastapi.exceptions.HTTPException: 401: Could not validate credentials

2025-08-02 21:05:29 - app.db.session - ERROR - session.py:101 - Database session error: 401: Could not validate credentials
2025-08-02 21:05:29 - app.main - WARNING - main.py:382 - HTTP Exception: 401 - Could not validate credentials - Path: /api/v1/test-cases/
2025-08-02 21:05:30 - app.auth.security - INFO - security.py:142 - 
================================================================================
2025-08-02 21:05:30 - app.auth.security - INFO - security.py:143 - Authenticating request to http://127.0.0.1:8001/api/v1/test-cases/
2025-08-02 21:05:30 - app.auth.security - INFO - security.py:144 - Token: eyJhbGciOiJIUzI1NiIs...
2025-08-02 21:05:30 - app.auth.security - INFO - security.py:148 - Decoding JWT token...
2025-08-02 21:05:30 - app.auth.security - ERROR - security.py:186 - JWT validation error: Signature has expired.
2025-08-02 21:05:30 - app.auth.security - ERROR - security.py:187 - Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkNjY2MzEzNS0wZjQxLTQwM2YtYmNjYi02ODQyMzFjOTFhODEiLCJleHAiOjE3NTQxNDgwOTl9.dQpsuOKejSo29lOlrgN4fqh0csIAipY_2bCV8kHwRJk
2025-08-02 21:05:30 - app.auth.security - ERROR - security.py:188 - Traceback: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 149, in get_current_user
    payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 174, in decode
    _validate_claims(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 497, in _validate_claims
    _validate_exp(claims, leeway=leeway)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 331, in _validate_exp
    raise ExpiredSignatureError("Signature has expired.")
jose.exceptions.ExpiredSignatureError: Signature has expired.

2025-08-02 21:05:30 - app.auth.security - ERROR - security.py:193 - HTTP Exception during authentication: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 149, in get_current_user
    payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 174, in decode
    _validate_claims(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 497, in _validate_claims
    _validate_exp(claims, leeway=leeway)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 331, in _validate_exp
    raise ExpiredSignatureError("Signature has expired.")
jose.exceptions.ExpiredSignatureError: Signature has expired.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 189, in get_current_user
    raise credentials_exception
fastapi.exceptions.HTTPException: 401: Could not validate credentials

2025-08-02 21:05:30 - app.db.session - ERROR - session.py:101 - Database session error: 401: Could not validate credentials
2025-08-02 21:05:30 - app.main - WARNING - main.py:382 - HTTP Exception: 401 - Could not validate credentials - Path: /api/v1/test-cases/
2025-08-02 21:06:26 - app.auth.security - INFO - security.py:142 - 
================================================================================
2025-08-02 21:06:26 - app.auth.security - INFO - security.py:143 - Authenticating request to http://127.0.0.1:8001/api/v1/test-cases/
2025-08-02 21:06:26 - app.auth.security - INFO - security.py:144 - Token: eyJhbGciOiJIUzI1NiIs...
2025-08-02 21:06:26 - app.auth.security - INFO - security.py:148 - Decoding JWT token...
2025-08-02 21:06:26 - app.auth.security - ERROR - security.py:186 - JWT validation error: Signature has expired.
2025-08-02 21:06:26 - app.auth.security - ERROR - security.py:187 - Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkNjY2MzEzNS0wZjQxLTQwM2YtYmNjYi02ODQyMzFjOTFhODEiLCJleHAiOjE3NTQxNDgwOTl9.dQpsuOKejSo29lOlrgN4fqh0csIAipY_2bCV8kHwRJk
2025-08-02 21:06:26 - app.auth.security - ERROR - security.py:188 - Traceback: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 149, in get_current_user
    payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 174, in decode
    _validate_claims(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 497, in _validate_claims
    _validate_exp(claims, leeway=leeway)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 331, in _validate_exp
    raise ExpiredSignatureError("Signature has expired.")
jose.exceptions.ExpiredSignatureError: Signature has expired.

2025-08-02 21:06:26 - app.auth.security - ERROR - security.py:193 - HTTP Exception during authentication: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 149, in get_current_user
    payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 174, in decode
    _validate_claims(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 497, in _validate_claims
    _validate_exp(claims, leeway=leeway)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 331, in _validate_exp
    raise ExpiredSignatureError("Signature has expired.")
jose.exceptions.ExpiredSignatureError: Signature has expired.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 189, in get_current_user
    raise credentials_exception
fastapi.exceptions.HTTPException: 401: Could not validate credentials

2025-08-02 21:06:26 - app.db.session - ERROR - session.py:101 - Database session error: 401: Could not validate credentials
2025-08-02 21:06:26 - app.main - WARNING - main.py:382 - HTTP Exception: 401 - Could not validate credentials - Path: /api/v1/test-cases/
2025-08-02 21:06:29 - app.auth.security - INFO - security.py:142 - 
================================================================================
2025-08-02 21:06:29 - app.auth.security - INFO - security.py:143 - Authenticating request to http://127.0.0.1:8001/api/v1/test-cases/
2025-08-02 21:06:29 - app.auth.security - INFO - security.py:144 - Token: eyJhbGciOiJIUzI1NiIs...
2025-08-02 21:06:29 - app.auth.security - INFO - security.py:148 - Decoding JWT token...
2025-08-02 21:06:29 - app.auth.security - ERROR - security.py:186 - JWT validation error: Signature has expired.
2025-08-02 21:06:29 - app.auth.security - ERROR - security.py:187 - Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkNjY2MzEzNS0wZjQxLTQwM2YtYmNjYi02ODQyMzFjOTFhODEiLCJleHAiOjE3NTQxNDgwOTl9.dQpsuOKejSo29lOlrgN4fqh0csIAipY_2bCV8kHwRJk
2025-08-02 21:06:29 - app.auth.security - ERROR - security.py:188 - Traceback: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 149, in get_current_user
    payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 174, in decode
    _validate_claims(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 497, in _validate_claims
    _validate_exp(claims, leeway=leeway)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 331, in _validate_exp
    raise ExpiredSignatureError("Signature has expired.")
jose.exceptions.ExpiredSignatureError: Signature has expired.

2025-08-02 21:06:29 - app.auth.security - ERROR - security.py:193 - HTTP Exception during authentication: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 149, in get_current_user
    payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 174, in decode
    _validate_claims(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 497, in _validate_claims
    _validate_exp(claims, leeway=leeway)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 331, in _validate_exp
    raise ExpiredSignatureError("Signature has expired.")
jose.exceptions.ExpiredSignatureError: Signature has expired.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 189, in get_current_user
    raise credentials_exception
fastapi.exceptions.HTTPException: 401: Could not validate credentials

2025-08-02 21:06:29 - app.db.session - ERROR - session.py:101 - Database session error: 401: Could not validate credentials
2025-08-02 21:06:29 - app.main - WARNING - main.py:382 - HTTP Exception: 401 - Could not validate credentials - Path: /api/v1/test-cases/
2025-08-02 21:06:30 - app.auth.security - INFO - security.py:142 - 
================================================================================
2025-08-02 21:06:30 - app.auth.security - INFO - security.py:143 - Authenticating request to http://127.0.0.1:8001/api/v1/test-cases/
2025-08-02 21:06:30 - app.auth.security - INFO - security.py:144 - Token: eyJhbGciOiJIUzI1NiIs...
2025-08-02 21:06:30 - app.auth.security - INFO - security.py:148 - Decoding JWT token...
2025-08-02 21:06:30 - app.auth.security - ERROR - security.py:186 - JWT validation error: Signature has expired.
2025-08-02 21:06:30 - app.auth.security - ERROR - security.py:187 - Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkNjY2MzEzNS0wZjQxLTQwM2YtYmNjYi02ODQyMzFjOTFhODEiLCJleHAiOjE3NTQxNDgwOTl9.dQpsuOKejSo29lOlrgN4fqh0csIAipY_2bCV8kHwRJk
2025-08-02 21:06:30 - app.auth.security - ERROR - security.py:188 - Traceback: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 149, in get_current_user
    payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 174, in decode
    _validate_claims(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 497, in _validate_claims
    _validate_exp(claims, leeway=leeway)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 331, in _validate_exp
    raise ExpiredSignatureError("Signature has expired.")
jose.exceptions.ExpiredSignatureError: Signature has expired.

2025-08-02 21:06:30 - app.auth.security - ERROR - security.py:193 - HTTP Exception during authentication: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 149, in get_current_user
    payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 174, in decode
    _validate_claims(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 497, in _validate_claims
    _validate_exp(claims, leeway=leeway)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 331, in _validate_exp
    raise ExpiredSignatureError("Signature has expired.")
jose.exceptions.ExpiredSignatureError: Signature has expired.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 189, in get_current_user
    raise credentials_exception
fastapi.exceptions.HTTPException: 401: Could not validate credentials

2025-08-02 21:06:30 - app.db.session - ERROR - session.py:101 - Database session error: 401: Could not validate credentials
2025-08-02 21:06:30 - app.main - WARNING - main.py:382 - HTTP Exception: 401 - Could not validate credentials - Path: /api/v1/test-cases/
2025-08-02 21:07:44 - root - INFO - main.py:88 - ================================================================================
2025-08-02 21:07:44 - root - INFO - main.py:89 - Application starting with enhanced logging (level: INFO)
2025-08-02 21:07:44 - root - INFO - main.py:90 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 21:07:44 - root - INFO - main.py:91 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 21:07:44 - root - INFO - main.py:92 - ================================================================================
2025-08-02 21:07:46 - app.main - INFO - main.py:1372 - Initializing API routers...
2025-08-02 21:07:46 - app.main - INFO - main.py:1384 - API routers initialized successfully
2025-08-02 21:07:46 - app.main - INFO - main.py:246 - Starting database initialization...
2025-08-02 21:07:47 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x0000023A60A6F780; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 21:07:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:07:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:07:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:07:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:07:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:07:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:07:47 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x0000023A60A6F780; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 21:07:47 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x0000023A60A6F780; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 21:07:47 - app.main - INFO - main.py:276 - Disabling foreign key constraints...
2025-08-02 21:07:47 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:07:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 21:07:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00506s] {}
2025-08-02 21:07:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 21:07:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00157s] {}
2025-08-02 21:07:48 - app.main - INFO - main.py:291 - Dropping existing tables...
2025-08-02 21:07:48 - app.main - INFO - main.py:294 - Dropping table: activity_logs
2025-08-02 21:07:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 21:07:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00119s] {}
2025-08-02 21:07:48 - app.main - INFO - main.py:296 - Dropped table: activity_logs
2025-08-02 21:07:48 - app.main - INFO - main.py:294 - Dropping table: attachments
2025-08-02 21:07:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 21:07:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00165s] {}
2025-08-02 21:07:48 - app.main - INFO - main.py:296 - Dropped table: attachments
2025-08-02 21:07:48 - app.main - INFO - main.py:294 - Dropping table: comments
2025-08-02 21:07:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 21:07:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00084s] {}
2025-08-02 21:07:48 - app.main - INFO - main.py:296 - Dropped table: comments
2025-08-02 21:07:48 - app.main - INFO - main.py:294 - Dropping table: environments
2025-08-02 21:07:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 21:07:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00130s] {}
2025-08-02 21:07:48 - app.main - INFO - main.py:296 - Dropped table: environments
2025-08-02 21:07:48 - app.main - INFO - main.py:294 - Dropping table: projects
2025-08-02 21:07:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 21:07:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00139s] {}
2025-08-02 21:07:48 - app.main - INFO - main.py:296 - Dropped table: projects
2025-08-02 21:07:48 - app.main - INFO - main.py:294 - Dropping table: team_members
2025-08-02 21:07:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 21:07:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00115s] {}
2025-08-02 21:07:48 - app.main - INFO - main.py:296 - Dropped table: team_members
2025-08-02 21:07:48 - app.main - INFO - main.py:294 - Dropping table: teams
2025-08-02 21:07:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 21:07:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00122s] {}
2025-08-02 21:07:48 - app.main - INFO - main.py:296 - Dropped table: teams
2025-08-02 21:07:48 - app.main - INFO - main.py:294 - Dropping table: test_cases
2025-08-02 21:07:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 21:07:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00083s] {}
2025-08-02 21:07:48 - app.main - INFO - main.py:296 - Dropped table: test_cases
2025-08-02 21:07:48 - app.main - INFO - main.py:294 - Dropping table: test_executions
2025-08-02 21:07:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 21:07:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00108s] {}
2025-08-02 21:07:48 - app.main - INFO - main.py:296 - Dropped table: test_executions
2025-08-02 21:07:48 - app.main - INFO - main.py:294 - Dropping table: test_plan_test_cases
2025-08-02 21:07:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 21:07:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00191s] {}
2025-08-02 21:07:48 - app.main - INFO - main.py:296 - Dropped table: test_plan_test_cases
2025-08-02 21:07:48 - app.main - INFO - main.py:294 - Dropping table: test_plans
2025-08-02 21:07:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 21:07:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00092s] {}
2025-08-02 21:07:49 - app.main - INFO - main.py:296 - Dropped table: test_plans
2025-08-02 21:07:49 - app.main - INFO - main.py:294 - Dropping table: test_steps
2025-08-02 21:07:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 21:07:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00069s] {}
2025-08-02 21:07:49 - app.main - INFO - main.py:296 - Dropped table: test_steps
2025-08-02 21:07:49 - app.main - INFO - main.py:294 - Dropping table: users
2025-08-02 21:07:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 21:07:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00081s] {}
2025-08-02 21:07:49 - app.main - INFO - main.py:296 - Dropped table: users
2025-08-02 21:07:49 - app.main - INFO - main.py:302 - Creating database tables in order...
2025-08-02 21:07:49 - app.main - INFO - main.py:305 - Creating table: users
2025-08-02 21:07:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:07:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00187s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:07:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 21:07:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00206s] {}
2025-08-02 21:07:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 21:07:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00116s] {}
2025-08-02 21:07:49 - app.main - INFO - main.py:307 - Table created: users
2025-08-02 21:07:49 - app.main - INFO - main.py:305 - Creating table: teams
2025-08-02 21:07:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:07:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2594s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:07:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:07:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00156s] {}
2025-08-02 21:07:49 - app.main - INFO - main.py:307 - Table created: teams
2025-08-02 21:07:49 - app.main - INFO - main.py:305 - Creating table: projects
2025-08-02 21:07:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:07:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4316s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:07:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 21:07:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00097s] {}
2025-08-02 21:07:49 - app.main - INFO - main.py:307 - Table created: projects
2025-08-02 21:07:49 - app.main - INFO - main.py:305 - Creating table: environments
2025-08-02 21:07:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:07:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.602s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:07:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 21:07:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00273s] {}
2025-08-02 21:07:49 - app.main - INFO - main.py:307 - Table created: environments
2025-08-02 21:07:49 - app.main - INFO - main.py:305 - Creating table: test_cases
2025-08-02 21:07:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:07:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7785s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:07:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:07:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00139s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:07:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:07:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.08979s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 21:07:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:07:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1752s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:07:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 21:07:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00189s] {}
2025-08-02 21:07:50 - app.main - INFO - main.py:307 - Table created: test_cases
2025-08-02 21:07:50 - app.main - INFO - main.py:305 - Creating table: test_steps
2025-08-02 21:07:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:07:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.214s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:07:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 21:07:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00154s] {}
2025-08-02 21:07:50 - app.main - INFO - main.py:307 - Table created: test_steps
2025-08-02 21:07:50 - app.main - INFO - main.py:305 - Creating table: test_plans
2025-08-02 21:07:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:07:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.392s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:07:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:07:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6135s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:07:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:07:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00141s] {}
2025-08-02 21:07:50 - app.main - INFO - main.py:307 - Table created: test_plans
2025-08-02 21:07:50 - app.main - INFO - main.py:305 - Creating table: test_plan_test_cases
2025-08-02 21:07:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:07:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.653s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:07:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:07:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00180s] {}
2025-08-02 21:07:51 - app.main - INFO - main.py:307 - Table created: test_plan_test_cases
2025-08-02 21:07:51 - app.main - INFO - main.py:305 - Creating table: test_executions
2025-08-02 21:07:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:07:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.829s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:07:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:07:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.05s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 21:07:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 21:07:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00158s] {}
2025-08-02 21:07:51 - app.main - INFO - main.py:307 - Table created: test_executions
2025-08-02 21:07:51 - app.main - INFO - main.py:305 - Creating table: comments
2025-08-02 21:07:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:07:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.084s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:07:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:07:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.304s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:07:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 21:07:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00182s] {}
2025-08-02 21:07:51 - app.main - INFO - main.py:307 - Table created: comments
2025-08-02 21:07:51 - app.main - INFO - main.py:305 - Creating table: team_members
2025-08-02 21:07:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:07:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.341s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:07:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:07:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00142s] {}
2025-08-02 21:07:51 - app.main - INFO - main.py:307 - Table created: team_members
2025-08-02 21:07:51 - app.main - INFO - main.py:305 - Creating table: attachments
2025-08-02 21:07:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:07:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.649s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:07:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 21:07:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00108s] {}
2025-08-02 21:07:52 - app.main - INFO - main.py:307 - Table created: attachments
2025-08-02 21:07:52 - app.main - INFO - main.py:305 - Creating table: activity_logs
2025-08-02 21:07:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:07:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.822s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:07:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:07:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00243s] {}
2025-08-02 21:07:52 - app.main - INFO - main.py:307 - Table created: activity_logs
2025-08-02 21:07:52 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:07:52 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x0000023A60A6F780; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 21:07:52 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x0000023A60A6F780; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 21:07:52 - app.main - INFO - main.py:312 - All database tables created successfully
2025-08-02 21:08:01 - app.auth.security - INFO - security.py:142 - 
================================================================================
2025-08-02 21:08:01 - app.auth.security - INFO - security.py:143 - Authenticating request to http://127.0.0.1:8001/api/v1/test-cases/
2025-08-02 21:08:01 - app.auth.security - INFO - security.py:144 - Token: eyJhbGciOiJIUzI1NiIs...
2025-08-02 21:08:01 - app.auth.security - INFO - security.py:148 - Decoding JWT token...
2025-08-02 21:08:01 - app.auth.security - ERROR - security.py:186 - JWT validation error: Signature has expired.
2025-08-02 21:08:01 - app.auth.security - ERROR - security.py:187 - Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkNjY2MzEzNS0wZjQxLTQwM2YtYmNjYi02ODQyMzFjOTFhODEiLCJleHAiOjE3NTQxNDgwOTl9.dQpsuOKejSo29lOlrgN4fqh0csIAipY_2bCV8kHwRJk
2025-08-02 21:08:01 - app.auth.security - ERROR - security.py:188 - Traceback: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 149, in get_current_user
    payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 174, in decode
    _validate_claims(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 497, in _validate_claims
    _validate_exp(claims, leeway=leeway)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 331, in _validate_exp
    raise ExpiredSignatureError("Signature has expired.")
jose.exceptions.ExpiredSignatureError: Signature has expired.

2025-08-02 21:08:01 - app.auth.security - ERROR - security.py:193 - HTTP Exception during authentication: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 149, in get_current_user
    payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 174, in decode
    _validate_claims(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 497, in _validate_claims
    _validate_exp(claims, leeway=leeway)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 331, in _validate_exp
    raise ExpiredSignatureError("Signature has expired.")
jose.exceptions.ExpiredSignatureError: Signature has expired.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 189, in get_current_user
    raise credentials_exception
fastapi.exceptions.HTTPException: 401: Could not validate credentials

2025-08-02 21:08:01 - app.db.session - ERROR - session.py:101 - Database session error: 401: Could not validate credentials
2025-08-02 21:08:01 - app.main - WARNING - main.py:382 - HTTP Exception: 401 - Could not validate credentials - Path: /api/v1/test-cases/
2025-08-02 21:08:03 - app.auth.security - INFO - security.py:142 - 
================================================================================
2025-08-02 21:08:03 - app.auth.security - INFO - security.py:143 - Authenticating request to http://127.0.0.1:8001/api/v1/test-cases/
2025-08-02 21:08:03 - app.auth.security - INFO - security.py:144 - Token: eyJhbGciOiJIUzI1NiIs...
2025-08-02 21:08:03 - app.auth.security - INFO - security.py:148 - Decoding JWT token...
2025-08-02 21:08:03 - app.auth.security - ERROR - security.py:186 - JWT validation error: Signature has expired.
2025-08-02 21:08:03 - app.auth.security - ERROR - security.py:187 - Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkNjY2MzEzNS0wZjQxLTQwM2YtYmNjYi02ODQyMzFjOTFhODEiLCJleHAiOjE3NTQxNDgwOTl9.dQpsuOKejSo29lOlrgN4fqh0csIAipY_2bCV8kHwRJk
2025-08-02 21:08:03 - app.auth.security - ERROR - security.py:188 - Traceback: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 149, in get_current_user
    payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 174, in decode
    _validate_claims(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 497, in _validate_claims
    _validate_exp(claims, leeway=leeway)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 331, in _validate_exp
    raise ExpiredSignatureError("Signature has expired.")
jose.exceptions.ExpiredSignatureError: Signature has expired.

2025-08-02 21:08:03 - app.auth.security - ERROR - security.py:193 - HTTP Exception during authentication: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 149, in get_current_user
    payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 174, in decode
    _validate_claims(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 497, in _validate_claims
    _validate_exp(claims, leeway=leeway)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 331, in _validate_exp
    raise ExpiredSignatureError("Signature has expired.")
jose.exceptions.ExpiredSignatureError: Signature has expired.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 189, in get_current_user
    raise credentials_exception
fastapi.exceptions.HTTPException: 401: Could not validate credentials

2025-08-02 21:08:03 - app.db.session - ERROR - session.py:101 - Database session error: 401: Could not validate credentials
2025-08-02 21:08:03 - app.main - WARNING - main.py:382 - HTTP Exception: 401 - Could not validate credentials - Path: /api/v1/test-cases/
2025-08-02 21:08:40 - app.main - INFO - main.py:320 - Application shutdown
2025-08-02 21:08:42 - root - INFO - main.py:88 - ================================================================================
2025-08-02 21:08:42 - root - INFO - main.py:89 - Application starting with enhanced logging (level: INFO)
2025-08-02 21:08:42 - root - INFO - main.py:90 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 21:08:42 - root - INFO - main.py:91 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 21:08:42 - root - INFO - main.py:92 - ================================================================================
2025-08-02 21:08:42 - app.main - INFO - main.py:320 - Application shutdown
2025-08-02 21:08:43 - app.main - INFO - main.py:1372 - Initializing API routers...
2025-08-02 21:08:43 - app.main - INFO - main.py:1384 - API routers initialized successfully
2025-08-02 21:08:43 - app.main - INFO - main.py:246 - Starting database initialization...
2025-08-02 21:08:43 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x0000027C92E0F780; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 21:08:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:08:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:08:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:08:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:08:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:08:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:08:44 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x0000027C92E0F780; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 21:08:44 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x0000027C92E0F780; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 21:08:44 - app.main - INFO - main.py:276 - Disabling foreign key constraints...
2025-08-02 21:08:44 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:08:44 - root - INFO - main.py:88 - ================================================================================
2025-08-02 21:08:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 21:08:44 - root - INFO - main.py:89 - Application starting with enhanced logging (level: INFO)
2025-08-02 21:08:44 - root - INFO - main.py:90 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 21:08:44 - root - INFO - main.py:91 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 21:08:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00180s] {}
2025-08-02 21:08:44 - root - INFO - main.py:92 - ================================================================================
2025-08-02 21:08:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 21:08:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00143s] {}
2025-08-02 21:08:44 - app.main - INFO - main.py:291 - Dropping existing tables...
2025-08-02 21:08:44 - app.main - INFO - main.py:294 - Dropping table: activity_logs
2025-08-02 21:08:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 21:08:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00122s] {}
2025-08-02 21:08:44 - app.main - INFO - main.py:296 - Dropped table: activity_logs
2025-08-02 21:08:44 - app.main - INFO - main.py:294 - Dropping table: attachments
2025-08-02 21:08:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 21:08:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00074s] {}
2025-08-02 21:08:45 - app.main - INFO - main.py:296 - Dropped table: attachments
2025-08-02 21:08:45 - app.main - INFO - main.py:294 - Dropping table: comments
2025-08-02 21:08:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 21:08:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00075s] {}
2025-08-02 21:08:45 - app.main - INFO - main.py:296 - Dropped table: comments
2025-08-02 21:08:45 - app.main - INFO - main.py:294 - Dropping table: environments
2025-08-02 21:08:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 21:08:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00073s] {}
2025-08-02 21:08:45 - app.main - INFO - main.py:296 - Dropped table: environments
2025-08-02 21:08:45 - app.main - INFO - main.py:294 - Dropping table: projects
2025-08-02 21:08:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 21:08:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00097s] {}
2025-08-02 21:08:45 - app.main - INFO - main.py:296 - Dropped table: projects
2025-08-02 21:08:45 - app.main - INFO - main.py:294 - Dropping table: team_members
2025-08-02 21:08:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 21:08:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00077s] {}
2025-08-02 21:08:45 - app.main - INFO - main.py:296 - Dropped table: team_members
2025-08-02 21:08:45 - app.main - INFO - main.py:294 - Dropping table: teams
2025-08-02 21:08:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 21:08:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00099s] {}
2025-08-02 21:08:45 - app.main - INFO - main.py:296 - Dropped table: teams
2025-08-02 21:08:45 - app.main - INFO - main.py:294 - Dropping table: test_cases
2025-08-02 21:08:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 21:08:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00169s] {}
2025-08-02 21:08:45 - app.main - INFO - main.py:296 - Dropped table: test_cases
2025-08-02 21:08:45 - app.main - INFO - main.py:294 - Dropping table: test_executions
2025-08-02 21:08:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 21:08:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00093s] {}
2025-08-02 21:08:45 - app.main - INFO - main.py:296 - Dropped table: test_executions
2025-08-02 21:08:45 - app.main - INFO - main.py:294 - Dropping table: test_plan_test_cases
2025-08-02 21:08:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 21:08:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00124s] {}
2025-08-02 21:08:45 - app.main - INFO - main.py:1372 - Initializing API routers...
2025-08-02 21:08:45 - app.main - INFO - main.py:296 - Dropped table: test_plan_test_cases
2025-08-02 21:08:45 - app.main - INFO - main.py:294 - Dropping table: test_plans
2025-08-02 21:08:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 21:08:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00111s] {}
2025-08-02 21:08:45 - app.main - INFO - main.py:1384 - API routers initialized successfully
2025-08-02 21:08:45 - app.main - INFO - main.py:246 - Starting database initialization...
2025-08-02 21:08:45 - app.main - INFO - main.py:296 - Dropped table: test_plans
2025-08-02 21:08:45 - app.main - INFO - main.py:294 - Dropping table: test_steps
2025-08-02 21:08:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 21:08:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00070s] {}
2025-08-02 21:08:45 - app.main - INFO - main.py:296 - Dropped table: test_steps
2025-08-02 21:08:45 - app.main - INFO - main.py:294 - Dropping table: users
2025-08-02 21:08:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 21:08:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00195s] {}
2025-08-02 21:08:45 - app.main - INFO - main.py:296 - Dropped table: users
2025-08-02 21:08:45 - app.main - INFO - main.py:302 - Creating database tables in order...
2025-08-02 21:08:45 - app.main - INFO - main.py:305 - Creating table: users
2025-08-02 21:08:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00060s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 21:08:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00122s] {}
2025-08-02 21:08:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 21:08:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00134s] {}
2025-08-02 21:08:46 - app.main - INFO - main.py:307 - Table created: users
2025-08-02 21:08:46 - app.main - INFO - main.py:305 - Creating table: teams
2025-08-02 21:08:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2555s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:46 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x0000017090D7FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 21:08:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:08:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00116s] {}
2025-08-02 21:08:46 - app.main - INFO - main.py:307 - Table created: teams
2025-08-02 21:08:46 - app.main - INFO - main.py:305 - Creating table: projects
2025-08-02 21:08:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4252s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 21:08:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00140s] {}
2025-08-02 21:08:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:08:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:08:46 - app.main - INFO - main.py:307 - Table created: projects
2025-08-02 21:08:46 - app.main - INFO - main.py:305 - Creating table: environments
2025-08-02 21:08:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.598s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 21:08:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:08:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00105s] {}
2025-08-02 21:08:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:08:46 - app.main - INFO - main.py:307 - Table created: environments
2025-08-02 21:08:46 - app.main - INFO - main.py:305 - Creating table: test_cases
2025-08-02 21:08:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7686s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:08:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:08:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00138s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.0851s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:46 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x0000017090D7FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 21:08:47 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x0000017090D7FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 21:08:47 - app.main - INFO - main.py:276 - Disabling foreign key constraints...
2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00184s] {}
2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1674s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00180s] {}
2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00111s] {}
2025-08-02 21:08:47 - app.main - INFO - main.py:307 - Table created: test_cases
2025-08-02 21:08:47 - app.main - INFO - main.py:305 - Creating table: test_steps
2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.191s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:47 - app.main - INFO - main.py:291 - Dropping existing tables...
2025-08-02 21:08:47 - app.main - INFO - main.py:294 - Dropping table: activity_logs
2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00095s] {}
2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00127s] {}
2025-08-02 21:08:47 - app.main - INFO - main.py:307 - Table created: test_steps
2025-08-02 21:08:47 - app.main - INFO - main.py:305 - Creating table: test_plans
2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.359s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5964s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00270s] {}
2025-08-02 21:08:47 - app.main - INFO - main.py:307 - Table created: test_plans
2025-08-02 21:08:47 - app.main - INFO - main.py:305 - Creating table: test_plan_test_cases
2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.624s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00161s] {}
2025-08-02 21:08:47 - app.main - INFO - main.py:307 - Table created: test_plan_test_cases
2025-08-02 21:08:47 - app.main - INFO - main.py:305 - Creating table: test_executions
2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.796s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.032s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 21:08:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00167s] {}
2025-08-02 21:08:48 - app.main - INFO - main.py:307 - Table created: test_executions
2025-08-02 21:08:48 - app.main - INFO - main.py:305 - Creating table: comments
2025-08-02 21:08:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.055s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.287s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 21:08:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00181s] {}
2025-08-02 21:08:48 - app.main - INFO - main.py:307 - Table created: comments
2025-08-02 21:08:48 - app.main - INFO - main.py:305 - Creating table: team_members
2025-08-02 21:08:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.312s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:08:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00111s] {}
2025-08-02 21:08:48 - app.main - INFO - main.py:307 - Table created: team_members
2025-08-02 21:08:48 - app.main - INFO - main.py:305 - Creating table: attachments
2025-08-02 21:08:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.484s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 21:08:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00131s] {}
2025-08-02 21:08:48 - app.main - INFO - main.py:307 - Table created: attachments
2025-08-02 21:08:48 - app.main - INFO - main.py:305 - Creating table: activity_logs
2025-08-02 21:08:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.655s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:08:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00124s] {}
2025-08-02 21:08:48 - app.main - INFO - main.py:307 - Table created: activity_logs
2025-08-02 21:08:48 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:08:48 - app.main - INFO - main.py:296 - Dropped table: activity_logs
2025-08-02 21:08:48 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x0000027C92E0F780; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 21:08:48 - app.main - INFO - main.py:294 - Dropping table: attachments
2025-08-02 21:08:48 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x0000027C92E0F780; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 21:08:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 21:08:48 - app.main - INFO - main.py:312 - All database tables created successfully
2025-08-02 21:08:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00098s] {}
2025-08-02 21:08:48 - app.main - INFO - main.py:296 - Dropped table: attachments
2025-08-02 21:08:48 - app.main - INFO - main.py:294 - Dropping table: comments
2025-08-02 21:08:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 21:08:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00142s] {}
2025-08-02 21:08:49 - app.main - INFO - main.py:296 - Dropped table: comments
2025-08-02 21:08:49 - app.main - INFO - main.py:294 - Dropping table: environments
2025-08-02 21:08:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 21:08:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00169s] {}
2025-08-02 21:08:49 - app.main - INFO - main.py:296 - Dropped table: environments
2025-08-02 21:08:49 - app.main - INFO - main.py:294 - Dropping table: projects
2025-08-02 21:08:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 21:08:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00096s] {}
2025-08-02 21:08:49 - app.main - INFO - main.py:296 - Dropped table: projects
2025-08-02 21:08:49 - app.main - INFO - main.py:294 - Dropping table: team_members
2025-08-02 21:08:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 21:08:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00132s] {}
2025-08-02 21:08:49 - app.main - INFO - main.py:296 - Dropped table: team_members
2025-08-02 21:08:49 - app.main - INFO - main.py:294 - Dropping table: teams
2025-08-02 21:08:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 21:08:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00060s] {}
2025-08-02 21:08:49 - app.main - INFO - main.py:296 - Dropped table: teams
2025-08-02 21:08:49 - app.main - INFO - main.py:294 - Dropping table: test_cases
2025-08-02 21:08:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 21:08:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00136s] {}
2025-08-02 21:08:49 - app.main - INFO - main.py:296 - Dropped table: test_cases
2025-08-02 21:08:49 - app.main - INFO - main.py:294 - Dropping table: test_executions
2025-08-02 21:08:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 21:08:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00116s] {}
2025-08-02 21:08:49 - app.main - INFO - main.py:296 - Dropped table: test_executions
2025-08-02 21:08:49 - app.main - INFO - main.py:294 - Dropping table: test_plan_test_cases
2025-08-02 21:08:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 21:08:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00079s] {}
2025-08-02 21:08:49 - app.main - INFO - main.py:296 - Dropped table: test_plan_test_cases
2025-08-02 21:08:49 - app.main - INFO - main.py:294 - Dropping table: test_plans
2025-08-02 21:08:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 21:08:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00070s] {}
2025-08-02 21:08:49 - app.main - INFO - main.py:296 - Dropped table: test_plans
2025-08-02 21:08:49 - app.main - INFO - main.py:294 - Dropping table: test_steps
2025-08-02 21:08:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 21:08:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00077s] {}
2025-08-02 21:08:49 - app.main - INFO - main.py:296 - Dropped table: test_steps
2025-08-02 21:08:49 - app.main - INFO - main.py:294 - Dropping table: users
2025-08-02 21:08:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 21:08:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00090s] {}
2025-08-02 21:08:49 - app.main - INFO - main.py:296 - Dropped table: users
2025-08-02 21:08:49 - app.main - INFO - main.py:302 - Creating database tables in order...
2025-08-02 21:08:49 - app.main - INFO - main.py:305 - Creating table: users
2025-08-02 21:08:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00096s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 21:08:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00108s] {}
2025-08-02 21:08:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 21:08:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00115s] {}
2025-08-02 21:08:50 - app.main - INFO - main.py:307 - Table created: users
2025-08-02 21:08:50 - app.main - INFO - main.py:305 - Creating table: teams
2025-08-02 21:08:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2497s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:08:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00140s] {}
2025-08-02 21:08:50 - app.main - INFO - main.py:307 - Table created: teams
2025-08-02 21:08:50 - app.main - INFO - main.py:305 - Creating table: projects
2025-08-02 21:08:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4146s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 21:08:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00161s] {}
2025-08-02 21:08:50 - app.main - INFO - main.py:307 - Table created: projects
2025-08-02 21:08:50 - app.main - INFO - main.py:305 - Creating table: environments
2025-08-02 21:08:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5809s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 21:08:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00179s] {}
2025-08-02 21:08:50 - app.main - INFO - main.py:307 - Table created: environments
2025-08-02 21:08:50 - app.main - INFO - main.py:305 - Creating table: test_cases
2025-08-02 21:08:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7472s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00152s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.0826s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:50 - root - INFO - main.py:88 - ================================================================================
2025-08-02 21:08:50 - root - INFO - main.py:89 - Application starting with enhanced logging (level: INFO)
2025-08-02 21:08:50 - root - INFO - main.py:90 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 21:08:50 - root - INFO - main.py:91 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 21:08:50 - root - INFO - main.py:92 - ================================================================================
2025-08-02 21:08:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.165s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 21:08:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00213s] {}
2025-08-02 21:08:51 - app.main - INFO - main.py:307 - Table created: test_cases
2025-08-02 21:08:51 - app.main - INFO - main.py:305 - Creating table: test_steps
2025-08-02 21:08:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.159s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 21:08:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00073s] {}
2025-08-02 21:08:51 - app.main - INFO - main.py:307 - Table created: test_steps
2025-08-02 21:08:51 - app.main - INFO - main.py:305 - Creating table: test_plans
2025-08-02 21:08:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.327s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5827s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:08:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00127s] {}
2025-08-02 21:08:51 - app.main - INFO - main.py:307 - Table created: test_plans
2025-08-02 21:08:51 - app.main - INFO - main.py:305 - Creating table: test_plan_test_cases
2025-08-02 21:08:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.579s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:08:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00119s] {}
2025-08-02 21:08:51 - app.main - INFO - main.py:307 - Table created: test_plan_test_cases
2025-08-02 21:08:51 - app.main - INFO - main.py:305 - Creating table: test_executions
2025-08-02 21:08:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.746s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:51 - app.main - INFO - main.py:320 - Application shutdown
2025-08-02 21:08:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.001s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 21:08:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00201s] {}
2025-08-02 21:08:51 - app.main - INFO - main.py:1372 - Initializing API routers...
2025-08-02 21:08:51 - app.main - INFO - main.py:1384 - API routers initialized successfully
2025-08-02 21:08:51 - app.main - INFO - main.py:246 - Starting database initialization...
2025-08-02 21:08:52 - app.main - INFO - main.py:307 - Table created: test_executions
2025-08-02 21:08:52 - app.main - INFO - main.py:305 - Creating table: comments
2025-08-02 21:08:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.442s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.819s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 21:08:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00151s] {}
2025-08-02 21:08:52 - app.main - INFO - main.py:307 - Table created: comments
2025-08-02 21:08:52 - app.main - INFO - main.py:305 - Creating table: team_members
2025-08-02 21:08:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.816s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:08:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00131s] {}
2025-08-02 21:08:52 - app.main - INFO - main.py:307 - Table created: team_members
2025-08-02 21:08:52 - app.main - INFO - main.py:305 - Creating table: attachments
2025-08-02 21:08:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.982s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 21:08:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00168s] {}
2025-08-02 21:08:53 - app.main - INFO - main.py:307 - Table created: attachments
2025-08-02 21:08:53 - app.main - INFO - main.py:305 - Creating table: activity_logs
2025-08-02 21:08:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 3.149s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:08:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00113s] {}
2025-08-02 21:08:53 - app.main - INFO - main.py:307 - Table created: activity_logs
2025-08-02 21:08:53 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:08:53 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x0000017090D7FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 21:08:53 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x0000017090D7FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 21:08:53 - app.main - INFO - main.py:312 - All database tables created successfully
2025-08-02 21:08:53 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x0000021A02B6B780; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 21:08:53 - root - INFO - main.py:88 - ================================================================================
2025-08-02 21:08:53 - root - INFO - main.py:89 - Application starting with enhanced logging (level: DEBUG)
2025-08-02 21:08:53 - root - INFO - main.py:90 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 21:08:53 - root - INFO - main.py:91 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 21:08:53 - root - INFO - main.py:92 - ================================================================================
2025-08-02 21:08:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:08:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:08:53 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-08-02 21:08:53 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-08-02 21:08:53 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-08-02 21:08:53 - passlib.registry - DEBUG - registry.py:296 - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
2025-08-02 21:08:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:08:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:08:53 - app.api.v1.routes.auth - DEBUG - auth.py:34 - Environment variables: {
  "ALLUSERSPROFILE": "C:\\ProgramData",
  "APPDATA": "C:\\Users\\kunal\\AppData\\Roaming",
  "C:\\USERS\\KUNAL\\DOWNLOADS\\EMERGENTINTELLITEST-MAIN": "C:\\Program Files\\nodejs\\",
  "CHROME_CRASHPAD_PIPE_NAME": "\\\\.\\pipe\\crashpad_11300_YGFLEAWXLMRVRBOK",
  "COMMONPROGRAMFILES": "C:\\Program Files\\Common Files",
  "COMMONPROGRAMFILES(X86)": "C:\\Program Files (x86)\\Common Files",
  "COMMONPROGRAMW6432": "C:\\Program Files\\Common Files",
  "COMPUTERNAME": "KUNALDELL",
  "COMSPEC": "C:\\Windows\\system32\\cmd.exe",
  "DRIVERDATA": "C:\\Windows\\System32\\Drivers\\DriverData",
  "EFC_5864_1592913036": "1",
  "HOMEDRIVE": "C:",
  "HOMEPATH": "\\Users\\kunal",
  "LOCALAPPDATA": "C:\\Users\\kunal\\AppData\\Local",
  "LOGONSERVER": "\\\\KUNALDELL",
  "LOG_LEVEL": "DEBUG",
  "NUMBER_OF_PROCESSORS": "22",
  "ONEDRIVE": "C:\\Users\\kunal\\OneDrive",
  "ONEDRIVECONSUMER": "C:\\Users\\kunal\\OneDrive",
  "ORIGINAL_XDG_CURRENT_DESKTOP": "undefined",
  "OS": "Windows_NT",
  "PATH": "C:\\Program Files\\Python312\\Scripts\\;C:\\Program Files\\Python312\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files\\Git\\cmd;c:\\Users\\kunal\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Program Files\\nodejs\\;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\kunal\\AppData\\Local\\Programs\\Windsurf\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WinGet\\Links;C:\\Program Files\\nodejs;C:\\Users\\kunal\\AppData\\Roaming\\npm;C:\\Program Files\\Git\\bin;C:\\Users\\kunal\\.deno\\bin;c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\scripts\\noConfigScripts",
  "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL",
  "POSTGRESQL": "C:\\Program Files\\PostgreSQL\\17\\bin\\bin",
  "PROCESSOR_ARCHITECTURE": "AMD64",
  "PROCESSOR_IDENTIFIER": "Intel64 Family 6 Model 170 Stepping 4, GenuineIntel",
  "PROCESSOR_LEVEL": "6",
  "PROCESSOR_REVISION": "aa04",
  "PROGRAMDATA": "C:\\ProgramData",
  "PROGRAMFILES": "C:\\Program Files",
  "PROGRAMFILES(X86)": "C:\\Program Files (x86)",
  "PROGRAMW6432": "C:\\Program Files",
  "PSMODULEPATH": "C:\\Users\\kunal\\OneDrive\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules",
  "PUBLIC": "C:\\Users\\Public",
  "PYTHONUNBUFFERED": "1",
  "SESSIONNAME": "Console",
  "SYSTEMDRIVE": "C:",
  "SYSTEMROOT": "C:\\Windows",
  "TEMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "TMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "USERDOMAIN": "KUNALDELL",
  "USERDOMAIN_ROAMINGPROFILE": "KUNALDELL",
  "USERNAME": "kunal",
  "USERPROFILE": "C:\\Users\\kunal",
  "WINDIR": "C:\\Windows",
  "ZES_ENABLE_SYSMAN": "1",
  "PAGER": "cat",
  "TERM_PROGRAM": "vscode",
  "TERM_PROGRAM_VERSION": "1.99.3",
  "LANG": "en_US.UTF-8",
  "COLORTERM": "truecolor",
  "VSCODE_GIT_IPC_HANDLE": "\\\\.\\pipe\\vscode-git-fccd44132c-sock",
  "PYDEVD_DISABLE_FILE_VALIDATION": "1",
  "VSCODE_DEBUGPY_ADAPTER_ENDPOINTS": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\.noConfigDebugAdapterEndpoints\\endpoint-875e116b470e769c.txt",
  "BUNDLED_DEBUGPY_PATH": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\libs\\debugpy",
  "VSCODE_INJECTION": "1",
  "PROJECT_NAME": "IntelliTest AI Automation Platform",
  "ACCESS_TOKEN_EXPIRE_MINUTES": "11520",
  "SERVER_NAME": "localhost",
  "SERVER_HOST": "http://localhost:8001",
  "DATABASE_URL": "postgresql://postgres.lflecyuvttemfoyixngi:Ayeshaayesha121@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres",
  "SMTP_TLS": "true",
  "SMTP_PORT": "587",
  "SMTP_HOST": "smtp.gmail.com",
  "SMTP_USER": "your-email@gmail.com",
  "EMAILS_FROM_EMAIL": "your-email@gmail.com",
  "EMAILS_FROM_NAME": "IntelliTest Platform",
  "OPENAI_API_KEY": "your-openai-api-key-here",
  "AWS_ACCESS_KEY_ID": "your-aws-access-key",
  "AWS_DEFAULT_REGION": "us-east-1",
  "UPLOAD_DIR": "uploads",
  "MAX_UPLOAD_SIZE": "10485760",
  "ALLOWED_FILE_TYPES": "jpg,jpeg,png,gif,pdf,txt,csv,json",
  "TESTING": "false"
}
2025-08-02 21:08:53 - app.api.v1.routes.auth - DEBUG - auth.py:45 - Database URL: postgresql://postgres.lflecyuvttemfoyixngi:*****@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres
2025-08-02 21:08:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:08:53 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:08:54 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x0000021A02B6B780; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 21:08:54 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x0000021A02B6B780; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 21:08:54 - app.main - INFO - main.py:276 - Disabling foreign key constraints...
2025-08-02 21:08:54 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:08:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 21:08:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00179s] {}
2025-08-02 21:08:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 21:08:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00135s] {}
2025-08-02 21:08:54 - app.main - INFO - main.py:291 - Dropping existing tables...
2025-08-02 21:08:54 - app.main - INFO - main.py:294 - Dropping table: activity_logs
2025-08-02 21:08:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 21:08:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00088s] {}
2025-08-02 21:08:54 - app.main - INFO - main.py:296 - Dropped table: activity_logs
2025-08-02 21:08:54 - app.main - INFO - main.py:294 - Dropping table: attachments
2025-08-02 21:08:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 21:08:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00086s] {}
2025-08-02 21:08:54 - app.main - INFO - main.py:296 - Dropped table: attachments
2025-08-02 21:08:54 - app.main - INFO - main.py:294 - Dropping table: comments
2025-08-02 21:08:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 21:08:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00060s] {}
2025-08-02 21:08:54 - app.main - INFO - main.py:296 - Dropped table: comments
2025-08-02 21:08:54 - app.main - INFO - main.py:294 - Dropping table: environments
2025-08-02 21:08:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 21:08:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00080s] {}
2025-08-02 21:08:54 - app.main - INFO - main.py:296 - Dropped table: environments
2025-08-02 21:08:54 - app.main - INFO - main.py:294 - Dropping table: projects
2025-08-02 21:08:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 21:08:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00086s] {}
2025-08-02 21:08:54 - app.main - INFO - main.py:1372 - Initializing API routers...
2025-08-02 21:08:54 - app.main - INFO - main.py:296 - Dropped table: projects
2025-08-02 21:08:54 - app.main - INFO - main.py:294 - Dropping table: team_members
2025-08-02 21:08:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 21:08:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00089s] {}
2025-08-02 21:08:54 - app.main - INFO - main.py:1384 - API routers initialized successfully
2025-08-02 21:08:54 - app.main - INFO - main.py:246 - Starting database initialization...
2025-08-02 21:08:54 - app.main - INFO - main.py:296 - Dropped table: team_members
2025-08-02 21:08:54 - app.main - INFO - main.py:294 - Dropping table: teams
2025-08-02 21:08:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 21:08:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00069s] {}
2025-08-02 21:08:54 - app.main - INFO - main.py:296 - Dropped table: teams
2025-08-02 21:08:54 - app.main - INFO - main.py:294 - Dropping table: test_cases
2025-08-02 21:08:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 21:08:54 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00132s] {}
2025-08-02 21:08:55 - app.main - INFO - main.py:296 - Dropped table: test_cases
2025-08-02 21:08:55 - app.main - INFO - main.py:294 - Dropping table: test_executions
2025-08-02 21:08:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 21:08:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00102s] {}
2025-08-02 21:08:55 - app.main - INFO - main.py:296 - Dropped table: test_executions
2025-08-02 21:08:55 - app.main - INFO - main.py:294 - Dropping table: test_plan_test_cases
2025-08-02 21:08:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 21:08:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00087s] {}
2025-08-02 21:08:55 - app.main - INFO - main.py:296 - Dropped table: test_plan_test_cases
2025-08-02 21:08:55 - app.main - INFO - main.py:294 - Dropping table: test_plans
2025-08-02 21:08:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 21:08:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00081s] {}
2025-08-02 21:08:55 - app.main - INFO - main.py:296 - Dropped table: test_plans
2025-08-02 21:08:55 - app.main - INFO - main.py:294 - Dropping table: test_steps
2025-08-02 21:08:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 21:08:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00070s] {}
2025-08-02 21:08:55 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x00000240A5A4FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 21:08:55 - app.main - INFO - main.py:296 - Dropped table: test_steps
2025-08-02 21:08:55 - app.main - INFO - main.py:294 - Dropping table: users
2025-08-02 21:08:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 21:08:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00074s] {}
2025-08-02 21:08:55 - app.main - INFO - main.py:296 - Dropped table: users
2025-08-02 21:08:55 - app.main - INFO - main.py:302 - Creating database tables in order...
2025-08-02 21:08:55 - app.main - INFO - main.py:305 - Creating table: users
2025-08-02 21:08:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00108s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 21:08:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00110s] {}
2025-08-02 21:08:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:08:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:08:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 21:08:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00123s] {}
2025-08-02 21:08:55 - app.main - INFO - main.py:307 - Table created: users
2025-08-02 21:08:55 - app.main - INFO - main.py:305 - Creating table: teams
2025-08-02 21:08:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.239s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:08:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:08:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:08:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00142s] {}
2025-08-02 21:08:55 - app.main - INFO - main.py:307 - Table created: teams
2025-08-02 21:08:55 - app.main - INFO - main.py:305 - Creating table: projects
2025-08-02 21:08:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4018s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:08:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:08:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 21:08:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00180s] {}
2025-08-02 21:08:56 - app.main - INFO - main.py:307 - Table created: projects
2025-08-02 21:08:56 - app.main - INFO - main.py:305 - Creating table: environments
2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5658s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:56 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x00000240A5A4FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 21:08:56 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x00000240A5A4FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 21:08:56 - app.main - INFO - main.py:276 - Disabling foreign key constraints...
2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00132s] {}
2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00115s] {}
2025-08-02 21:08:56 - app.main - INFO - main.py:307 - Table created: environments
2025-08-02 21:08:56 - app.main - INFO - main.py:305 - Creating table: test_cases
2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7283s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00067s] {}
2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00117s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:56 - app.main - INFO - main.py:291 - Dropping existing tables...
2025-08-02 21:08:56 - app.main - INFO - main.py:294 - Dropping table: activity_logs
2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00052s] {}
2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.08133s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1622s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00159s] {}
2025-08-02 21:08:56 - app.main - INFO - main.py:307 - Table created: test_cases
2025-08-02 21:08:56 - app.main - INFO - main.py:305 - Creating table: test_steps
2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.13s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00112s] {}
2025-08-02 21:08:56 - app.main - INFO - main.py:307 - Table created: test_steps
2025-08-02 21:08:56 - app.main - INFO - main.py:305 - Creating table: test_plans
2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.291s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5651s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00151s] {}
2025-08-02 21:08:56 - app.main - INFO - main.py:307 - Table created: test_plans
2025-08-02 21:08:56 - app.main - INFO - main.py:305 - Creating table: test_plan_test_cases
2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.536s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:08:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00164s] {}
2025-08-02 21:08:57 - app.main - INFO - main.py:307 - Table created: test_plan_test_cases
2025-08-02 21:08:57 - app.main - INFO - main.py:305 - Creating table: test_executions
2025-08-02 21:08:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.698s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.9709s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 21:08:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00146s] {}
2025-08-02 21:08:57 - app.main - INFO - main.py:307 - Table created: test_executions
2025-08-02 21:08:57 - app.main - INFO - main.py:305 - Creating table: comments
2025-08-02 21:08:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.94s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.212s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 21:08:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00123s] {}
2025-08-02 21:08:57 - app.main - INFO - main.py:307 - Table created: comments
2025-08-02 21:08:57 - app.main - INFO - main.py:305 - Creating table: team_members
2025-08-02 21:08:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.182s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:08:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00142s] {}
2025-08-02 21:08:57 - app.main - INFO - main.py:307 - Table created: team_members
2025-08-02 21:08:57 - app.main - INFO - main.py:305 - Creating table: attachments
2025-08-02 21:08:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.345s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 21:08:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00176s] {}
2025-08-02 21:08:57 - app.main - INFO - main.py:307 - Table created: attachments
2025-08-02 21:08:57 - app.main - INFO - main.py:305 - Creating table: activity_logs
2025-08-02 21:08:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.51s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:08:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00169s] {}
2025-08-02 21:08:58 - app.main - INFO - main.py:307 - Table created: activity_logs
2025-08-02 21:08:58 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:08:58 - app.main - INFO - main.py:296 - Dropped table: activity_logs
2025-08-02 21:08:58 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x0000021A02B6B780; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 21:08:58 - app.main - INFO - main.py:294 - Dropping table: attachments
2025-08-02 21:08:58 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x0000021A02B6B780; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 21:08:58 - app.main - INFO - main.py:312 - All database tables created successfully
2025-08-02 21:08:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 21:08:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00191s] {}
2025-08-02 21:08:58 - app.main - INFO - main.py:296 - Dropped table: attachments
2025-08-02 21:08:58 - app.main - INFO - main.py:294 - Dropping table: comments
2025-08-02 21:08:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 21:08:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00076s] {}
2025-08-02 21:08:58 - app.main - INFO - main.py:296 - Dropped table: comments
2025-08-02 21:08:58 - app.main - INFO - main.py:294 - Dropping table: environments
2025-08-02 21:08:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 21:08:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00056s] {}
2025-08-02 21:08:58 - app.main - INFO - main.py:296 - Dropped table: environments
2025-08-02 21:08:58 - app.main - INFO - main.py:294 - Dropping table: projects
2025-08-02 21:08:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 21:08:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00079s] {}
2025-08-02 21:08:58 - app.main - INFO - main.py:296 - Dropped table: projects
2025-08-02 21:08:58 - app.main - INFO - main.py:294 - Dropping table: team_members
2025-08-02 21:08:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 21:08:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00064s] {}
2025-08-02 21:08:58 - app.main - INFO - main.py:296 - Dropped table: team_members
2025-08-02 21:08:58 - app.main - INFO - main.py:294 - Dropping table: teams
2025-08-02 21:08:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 21:08:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00087s] {}
2025-08-02 21:08:58 - app.main - INFO - main.py:296 - Dropped table: teams
2025-08-02 21:08:58 - app.main - INFO - main.py:294 - Dropping table: test_cases
2025-08-02 21:08:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 21:08:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00065s] {}
2025-08-02 21:08:58 - app.main - INFO - main.py:296 - Dropped table: test_cases
2025-08-02 21:08:58 - app.main - INFO - main.py:294 - Dropping table: test_executions
2025-08-02 21:08:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 21:08:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00038s] {}
2025-08-02 21:08:58 - app.main - INFO - main.py:296 - Dropped table: test_executions
2025-08-02 21:08:58 - app.main - INFO - main.py:294 - Dropping table: test_plan_test_cases
2025-08-02 21:08:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 21:08:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00125s] {}
2025-08-02 21:08:59 - app.main - INFO - main.py:296 - Dropped table: test_plan_test_cases
2025-08-02 21:08:59 - app.main - INFO - main.py:294 - Dropping table: test_plans
2025-08-02 21:08:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 21:08:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00096s] {}
2025-08-02 21:08:59 - app.main - INFO - main.py:296 - Dropped table: test_plans
2025-08-02 21:08:59 - app.main - INFO - main.py:294 - Dropping table: test_steps
2025-08-02 21:08:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 21:08:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00093s] {}
2025-08-02 21:08:59 - app.main - INFO - main.py:296 - Dropped table: test_steps
2025-08-02 21:08:59 - app.main - INFO - main.py:294 - Dropping table: users
2025-08-02 21:08:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 21:08:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00086s] {}
2025-08-02 21:08:59 - app.main - INFO - main.py:296 - Dropped table: users
2025-08-02 21:08:59 - app.main - INFO - main.py:302 - Creating database tables in order...
2025-08-02 21:08:59 - app.main - INFO - main.py:305 - Creating table: users
2025-08-02 21:08:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00123s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 21:08:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00161s] {}
2025-08-02 21:08:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 21:08:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00149s] {}
2025-08-02 21:08:59 - app.main - INFO - main.py:307 - Table created: users
2025-08-02 21:08:59 - app.main - INFO - main.py:305 - Creating table: teams
2025-08-02 21:08:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2452s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:08:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00176s] {}
2025-08-02 21:08:59 - app.main - INFO - main.py:307 - Table created: teams
2025-08-02 21:08:59 - app.main - INFO - main.py:305 - Creating table: projects
2025-08-02 21:08:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:08:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4368s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:08:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 21:08:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00155s] {}
2025-08-02 21:09:00 - app.main - INFO - main.py:307 - Table created: projects
2025-08-02 21:09:00 - app.main - INFO - main.py:305 - Creating table: environments
2025-08-02 21:09:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6034s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 21:09:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00120s] {}
2025-08-02 21:09:00 - app.main - INFO - main.py:307 - Table created: environments
2025-08-02 21:09:00 - app.main - INFO - main.py:305 - Creating table: test_cases
2025-08-02 21:09:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7659s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00124s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.08089s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1612s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 21:09:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00105s] {}
2025-08-02 21:09:00 - app.main - INFO - main.py:307 - Table created: test_cases
2025-08-02 21:09:00 - app.main - INFO - main.py:305 - Creating table: test_steps
2025-08-02 21:09:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.188s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 21:09:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00125s] {}
2025-08-02 21:09:00 - app.main - INFO - main.py:307 - Table created: test_steps
2025-08-02 21:09:00 - app.main - INFO - main.py:305 - Creating table: test_plans
2025-08-02 21:09:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.35s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5848s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:09:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00112s] {}
2025-08-02 21:09:01 - app.main - INFO - main.py:307 - Table created: test_plans
2025-08-02 21:09:01 - app.main - INFO - main.py:305 - Creating table: test_plan_test_cases
2025-08-02 21:09:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.592s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:09:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00146s] {}
2025-08-02 21:09:01 - app.main - INFO - main.py:307 - Table created: test_plan_test_cases
2025-08-02 21:09:01 - app.main - INFO - main.py:305 - Creating table: test_executions
2025-08-02 21:09:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.757s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.007s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 21:09:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00093s] {}
2025-08-02 21:09:01 - app.main - INFO - main.py:307 - Table created: test_executions
2025-08-02 21:09:01 - app.main - INFO - main.py:305 - Creating table: comments
2025-08-02 21:09:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.015s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.25s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 21:09:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00143s] {}
2025-08-02 21:09:01 - app.main - INFO - main.py:307 - Table created: comments
2025-08-02 21:09:01 - app.main - INFO - main.py:305 - Creating table: team_members
2025-08-02 21:09:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.26s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:09:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00088s] {}
2025-08-02 21:09:01 - app.main - INFO - main.py:307 - Table created: team_members
2025-08-02 21:09:01 - app.main - INFO - main.py:305 - Creating table: attachments
2025-08-02 21:09:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.421s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 21:09:01 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00172s] {}
2025-08-02 21:09:02 - app.main - INFO - main.py:307 - Table created: attachments
2025-08-02 21:09:02 - app.main - INFO - main.py:305 - Creating table: activity_logs
2025-08-02 21:09:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.593s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:09:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00108s] {}
2025-08-02 21:09:02 - app.main - INFO - main.py:307 - Table created: activity_logs
2025-08-02 21:09:02 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:09:02 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x00000240A5A4FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 21:09:02 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x00000240A5A4FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 21:09:02 - app.main - INFO - main.py:312 - All database tables created successfully
2025-08-02 21:09:04 - root - INFO - main.py:88 - ================================================================================
2025-08-02 21:09:04 - root - INFO - main.py:89 - Application starting with enhanced logging (level: DEBUG)
2025-08-02 21:09:04 - root - INFO - main.py:90 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 21:09:04 - root - INFO - main.py:91 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 21:09:04 - root - INFO - main.py:92 - ================================================================================
2025-08-02 21:09:04 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-08-02 21:09:04 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-08-02 21:09:04 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-08-02 21:09:04 - passlib.registry - DEBUG - registry.py:296 - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
2025-08-02 21:09:04 - app.api.v1.routes.auth - DEBUG - auth.py:34 - Environment variables: {
  "ALLUSERSPROFILE": "C:\\ProgramData",
  "APPDATA": "C:\\Users\\kunal\\AppData\\Roaming",
  "C:\\USERS\\KUNAL\\DOWNLOADS\\EMERGENTINTELLITEST-MAIN": "C:\\Program Files\\nodejs\\",
  "CHROME_CRASHPAD_PIPE_NAME": "\\\\.\\pipe\\crashpad_11300_YGFLEAWXLMRVRBOK",
  "COMMONPROGRAMFILES": "C:\\Program Files\\Common Files",
  "COMMONPROGRAMFILES(X86)": "C:\\Program Files (x86)\\Common Files",
  "COMMONPROGRAMW6432": "C:\\Program Files\\Common Files",
  "COMPUTERNAME": "KUNALDELL",
  "COMSPEC": "C:\\Windows\\system32\\cmd.exe",
  "DRIVERDATA": "C:\\Windows\\System32\\Drivers\\DriverData",
  "EFC_5864_1592913036": "1",
  "HOMEDRIVE": "C:",
  "HOMEPATH": "\\Users\\kunal",
  "LOCALAPPDATA": "C:\\Users\\kunal\\AppData\\Local",
  "LOGONSERVER": "\\\\KUNALDELL",
  "LOG_LEVEL": "DEBUG",
  "NUMBER_OF_PROCESSORS": "22",
  "ONEDRIVE": "C:\\Users\\kunal\\OneDrive",
  "ONEDRIVECONSUMER": "C:\\Users\\kunal\\OneDrive",
  "ORIGINAL_XDG_CURRENT_DESKTOP": "undefined",
  "OS": "Windows_NT",
  "PATH": "C:\\Program Files\\Python312\\Scripts\\;C:\\Program Files\\Python312\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files\\Git\\cmd;c:\\Users\\kunal\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Program Files\\nodejs\\;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\kunal\\AppData\\Local\\Programs\\Windsurf\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WinGet\\Links;C:\\Program Files\\nodejs;C:\\Users\\kunal\\AppData\\Roaming\\npm;C:\\Program Files\\Git\\bin;C:\\Users\\kunal\\.deno\\bin;c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\scripts\\noConfigScripts",
  "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL",
  "POSTGRESQL": "C:\\Program Files\\PostgreSQL\\17\\bin\\bin",
  "PROCESSOR_ARCHITECTURE": "AMD64",
  "PROCESSOR_IDENTIFIER": "Intel64 Family 6 Model 170 Stepping 4, GenuineIntel",
  "PROCESSOR_LEVEL": "6",
  "PROCESSOR_REVISION": "aa04",
  "PROGRAMDATA": "C:\\ProgramData",
  "PROGRAMFILES": "C:\\Program Files",
  "PROGRAMFILES(X86)": "C:\\Program Files (x86)",
  "PROGRAMW6432": "C:\\Program Files",
  "PSMODULEPATH": "C:\\Users\\kunal\\OneDrive\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules",
  "PUBLIC": "C:\\Users\\Public",
  "PYTHONUNBUFFERED": "1",
  "SESSIONNAME": "Console",
  "SYSTEMDRIVE": "C:",
  "SYSTEMROOT": "C:\\Windows",
  "TEMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "TMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "USERDOMAIN": "KUNALDELL",
  "USERDOMAIN_ROAMINGPROFILE": "KUNALDELL",
  "USERNAME": "kunal",
  "USERPROFILE": "C:\\Users\\kunal",
  "WINDIR": "C:\\Windows",
  "ZES_ENABLE_SYSMAN": "1",
  "PAGER": "cat",
  "TERM_PROGRAM": "vscode",
  "TERM_PROGRAM_VERSION": "1.99.3",
  "LANG": "en_US.UTF-8",
  "COLORTERM": "truecolor",
  "VSCODE_GIT_IPC_HANDLE": "\\\\.\\pipe\\vscode-git-fccd44132c-sock",
  "PYDEVD_DISABLE_FILE_VALIDATION": "1",
  "VSCODE_DEBUGPY_ADAPTER_ENDPOINTS": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\.noConfigDebugAdapterEndpoints\\endpoint-875e116b470e769c.txt",
  "BUNDLED_DEBUGPY_PATH": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\libs\\debugpy",
  "VSCODE_INJECTION": "1",
  "PROJECT_NAME": "IntelliTest AI Automation Platform",
  "ACCESS_TOKEN_EXPIRE_MINUTES": "11520",
  "SERVER_NAME": "localhost",
  "SERVER_HOST": "http://localhost:8001",
  "DATABASE_URL": "postgresql://postgres.lflecyuvttemfoyixngi:Ayeshaayesha121@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres",
  "SMTP_TLS": "true",
  "SMTP_PORT": "587",
  "SMTP_HOST": "smtp.gmail.com",
  "SMTP_USER": "your-email@gmail.com",
  "EMAILS_FROM_EMAIL": "your-email@gmail.com",
  "EMAILS_FROM_NAME": "IntelliTest Platform",
  "OPENAI_API_KEY": "your-openai-api-key-here",
  "AWS_ACCESS_KEY_ID": "your-aws-access-key",
  "AWS_DEFAULT_REGION": "us-east-1",
  "UPLOAD_DIR": "uploads",
  "MAX_UPLOAD_SIZE": "10485760",
  "ALLOWED_FILE_TYPES": "jpg,jpeg,png,gif,pdf,txt,csv,json",
  "TESTING": "false"
}
2025-08-02 21:09:04 - app.api.v1.routes.auth - DEBUG - auth.py:45 - Database URL: postgresql://postgres.lflecyuvttemfoyixngi:*****@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres
2025-08-02 21:09:05 - app.main - INFO - main.py:1372 - Initializing API routers...
2025-08-02 21:09:05 - app.main - INFO - main.py:1384 - API routers initialized successfully
2025-08-02 21:09:05 - app.main - INFO - main.py:246 - Starting database initialization...
2025-08-02 21:09:05 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x0000025A61A9FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 21:09:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:09:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:09:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:09:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:09:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:09:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:09:06 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x0000025A61A9FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 21:09:06 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x0000025A61A9FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 21:09:06 - app.main - INFO - main.py:276 - Disabling foreign key constraints...
2025-08-02 21:09:06 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:09:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 21:09:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00154s] {}
2025-08-02 21:09:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 21:09:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00124s] {}
2025-08-02 21:09:06 - app.main - INFO - main.py:291 - Dropping existing tables...
2025-08-02 21:09:06 - app.main - INFO - main.py:294 - Dropping table: activity_logs
2025-08-02 21:09:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 21:09:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00077s] {}
2025-08-02 21:09:06 - app.main - INFO - main.py:296 - Dropped table: activity_logs
2025-08-02 21:09:06 - app.main - INFO - main.py:294 - Dropping table: attachments
2025-08-02 21:09:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 21:09:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00087s] {}
2025-08-02 21:09:06 - app.main - INFO - main.py:296 - Dropped table: attachments
2025-08-02 21:09:06 - app.main - INFO - main.py:294 - Dropping table: comments
2025-08-02 21:09:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 21:09:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00089s] {}
2025-08-02 21:09:07 - app.main - INFO - main.py:296 - Dropped table: comments
2025-08-02 21:09:07 - app.main - INFO - main.py:294 - Dropping table: environments
2025-08-02 21:09:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 21:09:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00087s] {}
2025-08-02 21:09:07 - app.main - INFO - main.py:296 - Dropped table: environments
2025-08-02 21:09:07 - app.main - INFO - main.py:294 - Dropping table: projects
2025-08-02 21:09:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 21:09:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00082s] {}
2025-08-02 21:09:07 - app.main - INFO - main.py:296 - Dropped table: projects
2025-08-02 21:09:07 - app.main - INFO - main.py:294 - Dropping table: team_members
2025-08-02 21:09:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 21:09:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00074s] {}
2025-08-02 21:09:07 - app.main - INFO - main.py:296 - Dropped table: team_members
2025-08-02 21:09:07 - app.main - INFO - main.py:294 - Dropping table: teams
2025-08-02 21:09:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 21:09:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00117s] {}
2025-08-02 21:09:07 - app.main - INFO - main.py:296 - Dropped table: teams
2025-08-02 21:09:07 - app.main - INFO - main.py:294 - Dropping table: test_cases
2025-08-02 21:09:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 21:09:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00060s] {}
2025-08-02 21:09:07 - app.main - INFO - main.py:296 - Dropped table: test_cases
2025-08-02 21:09:07 - app.main - INFO - main.py:294 - Dropping table: test_executions
2025-08-02 21:09:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 21:09:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00087s] {}
2025-08-02 21:09:07 - app.main - INFO - main.py:296 - Dropped table: test_executions
2025-08-02 21:09:07 - app.main - INFO - main.py:294 - Dropping table: test_plan_test_cases
2025-08-02 21:09:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 21:09:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00075s] {}
2025-08-02 21:09:07 - app.main - INFO - main.py:296 - Dropped table: test_plan_test_cases
2025-08-02 21:09:07 - app.main - INFO - main.py:294 - Dropping table: test_plans
2025-08-02 21:09:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 21:09:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00116s] {}
2025-08-02 21:09:07 - app.main - INFO - main.py:296 - Dropped table: test_plans
2025-08-02 21:09:07 - app.main - INFO - main.py:294 - Dropping table: test_steps
2025-08-02 21:09:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 21:09:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00082s] {}
2025-08-02 21:09:07 - app.main - INFO - main.py:296 - Dropped table: test_steps
2025-08-02 21:09:07 - app.main - INFO - main.py:294 - Dropping table: users
2025-08-02 21:09:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 21:09:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00079s] {}
2025-08-02 21:09:07 - app.main - INFO - main.py:296 - Dropped table: users
2025-08-02 21:09:07 - app.main - INFO - main.py:302 - Creating database tables in order...
2025-08-02 21:09:07 - app.main - INFO - main.py:305 - Creating table: users
2025-08-02 21:09:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:07 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00130s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 21:09:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00161s] {}
2025-08-02 21:09:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 21:09:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00136s] {}
2025-08-02 21:09:08 - app.main - INFO - main.py:307 - Table created: users
2025-08-02 21:09:08 - app.main - INFO - main.py:305 - Creating table: teams
2025-08-02 21:09:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2643s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:09:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00147s] {}
2025-08-02 21:09:08 - app.main - INFO - main.py:307 - Table created: teams
2025-08-02 21:09:08 - app.main - INFO - main.py:305 - Creating table: projects
2025-08-02 21:09:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4414s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 21:09:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00122s] {}
2025-08-02 21:09:08 - app.main - INFO - main.py:307 - Table created: projects
2025-08-02 21:09:08 - app.main - INFO - main.py:305 - Creating table: environments
2025-08-02 21:09:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6166s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 21:09:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00141s] {}
2025-08-02 21:09:08 - app.main - INFO - main.py:307 - Table created: environments
2025-08-02 21:09:08 - app.main - INFO - main.py:305 - Creating table: test_cases
2025-08-02 21:09:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7927s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00121s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:08 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.08748s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1738s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 21:09:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00119s] {}
2025-08-02 21:09:09 - app.main - INFO - main.py:307 - Table created: test_cases
2025-08-02 21:09:09 - app.main - INFO - main.py:305 - Creating table: test_steps
2025-08-02 21:09:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.228s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 21:09:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00105s] {}
2025-08-02 21:09:09 - app.main - INFO - main.py:307 - Table created: test_steps
2025-08-02 21:09:09 - app.main - INFO - main.py:305 - Creating table: test_plans
2025-08-02 21:09:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.405s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6117s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:09:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00179s] {}
2025-08-02 21:09:09 - app.main - INFO - main.py:307 - Table created: test_plans
2025-08-02 21:09:09 - app.main - INFO - main.py:305 - Creating table: test_plan_test_cases
2025-08-02 21:09:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.674s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:09:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00141s] {}
2025-08-02 21:09:09 - app.main - INFO - main.py:307 - Table created: test_plan_test_cases
2025-08-02 21:09:09 - app.main - INFO - main.py:305 - Creating table: test_executions
2025-08-02 21:09:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.851s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.059s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 21:09:09 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00231s] {}
2025-08-02 21:09:10 - app.main - INFO - main.py:307 - Table created: test_executions
2025-08-02 21:09:10 - app.main - INFO - main.py:305 - Creating table: comments
2025-08-02 21:09:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.118s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.324s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 21:09:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00213s] {}
2025-08-02 21:09:10 - app.main - INFO - main.py:307 - Table created: comments
2025-08-02 21:09:10 - app.main - INFO - main.py:305 - Creating table: team_members
2025-08-02 21:09:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:10 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.382s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:09:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00233s] {}
2025-08-02 21:09:11 - app.main - INFO - main.py:307 - Table created: team_members
2025-08-02 21:09:11 - app.main - INFO - main.py:305 - Creating table: attachments
2025-08-02 21:09:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 3.19s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 21:09:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00131s] {}
2025-08-02 21:09:11 - app.main - INFO - main.py:307 - Table created: attachments
2025-08-02 21:09:11 - app.main - INFO - main.py:305 - Creating table: activity_logs
2025-08-02 21:09:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:09:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 3.368s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:09:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:09:11 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00145s] {}
2025-08-02 21:09:11 - app.main - INFO - main.py:307 - Table created: activity_logs
2025-08-02 21:09:11 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:09:11 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x0000025A61A9FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 21:09:11 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x0000025A61A9FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 21:09:11 - app.main - INFO - main.py:312 - All database tables created successfully
2025-08-02 21:09:23 - app.auth.security - INFO - security.py:142 - 
================================================================================
2025-08-02 21:09:23 - app.auth.security - INFO - security.py:143 - Authenticating request to http://127.0.0.1:8001/api/v1/test-cases/
2025-08-02 21:09:23 - app.auth.security - INFO - security.py:144 - Token: eyJhbGciOiJIUzI1NiIs...
2025-08-02 21:09:23 - app.auth.security - INFO - security.py:148 - Decoding JWT token...
2025-08-02 21:09:23 - app.auth.security - ERROR - security.py:186 - JWT validation error: Signature has expired.
2025-08-02 21:09:23 - app.auth.security - ERROR - security.py:187 - Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkNjY2MzEzNS0wZjQxLTQwM2YtYmNjYi02ODQyMzFjOTFhODEiLCJleHAiOjE3NTQxNDgwOTl9.dQpsuOKejSo29lOlrgN4fqh0csIAipY_2bCV8kHwRJk
2025-08-02 21:09:23 - app.auth.security - ERROR - security.py:188 - Traceback: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 149, in get_current_user
    payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 174, in decode
    _validate_claims(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 497, in _validate_claims
    _validate_exp(claims, leeway=leeway)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 331, in _validate_exp
    raise ExpiredSignatureError("Signature has expired.")
jose.exceptions.ExpiredSignatureError: Signature has expired.

2025-08-02 21:09:23 - app.auth.security - ERROR - security.py:193 - HTTP Exception during authentication: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 149, in get_current_user
    payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 174, in decode
    _validate_claims(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 497, in _validate_claims
    _validate_exp(claims, leeway=leeway)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 331, in _validate_exp
    raise ExpiredSignatureError("Signature has expired.")
jose.exceptions.ExpiredSignatureError: Signature has expired.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 189, in get_current_user
    raise credentials_exception
fastapi.exceptions.HTTPException: 401: Could not validate credentials

2025-08-02 21:09:23 - app.db.session - ERROR - session.py:101 - Database session error: 401: Could not validate credentials
2025-08-02 21:09:23 - app.main - WARNING - main.py:382 - HTTP Exception: 401 - Could not validate credentials - Path: /api/v1/test-cases/
2025-08-02 21:09:23 - app.auth.security - INFO - security.py:142 - 
================================================================================
2025-08-02 21:09:23 - app.auth.security - INFO - security.py:143 - Authenticating request to http://127.0.0.1:8001/api/v1/test-cases/
2025-08-02 21:09:23 - app.auth.security - INFO - security.py:144 - Token: eyJhbGciOiJIUzI1NiIs...
2025-08-02 21:09:23 - app.auth.security - INFO - security.py:148 - Decoding JWT token...
2025-08-02 21:09:23 - app.auth.security - ERROR - security.py:186 - JWT validation error: Signature has expired.
2025-08-02 21:09:23 - app.auth.security - ERROR - security.py:187 - Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkNjY2MzEzNS0wZjQxLTQwM2YtYmNjYi02ODQyMzFjOTFhODEiLCJleHAiOjE3NTQxNDgwOTl9.dQpsuOKejSo29lOlrgN4fqh0csIAipY_2bCV8kHwRJk
2025-08-02 21:09:23 - app.auth.security - ERROR - security.py:188 - Traceback: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 149, in get_current_user
    payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 174, in decode
    _validate_claims(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 497, in _validate_claims
    _validate_exp(claims, leeway=leeway)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 331, in _validate_exp
    raise ExpiredSignatureError("Signature has expired.")
jose.exceptions.ExpiredSignatureError: Signature has expired.

2025-08-02 21:09:23 - app.auth.security - ERROR - security.py:193 - HTTP Exception during authentication: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 149, in get_current_user
    payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 174, in decode
    _validate_claims(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 497, in _validate_claims
    _validate_exp(claims, leeway=leeway)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\jose\jwt.py", line 331, in _validate_exp
    raise ExpiredSignatureError("Signature has expired.")
jose.exceptions.ExpiredSignatureError: Signature has expired.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 189, in get_current_user
    raise credentials_exception
fastapi.exceptions.HTTPException: 401: Could not validate credentials

2025-08-02 21:09:23 - app.db.session - ERROR - session.py:101 - Database session error: 401: Could not validate credentials
2025-08-02 21:09:23 - app.main - WARNING - main.py:382 - HTTP Exception: 401 - Could not validate credentials - Path: /api/v1/test-cases/
2025-08-02 21:18:28 - app.main - INFO - main.py:457 - [REGISTER-90b71a67-a11e-4918-b531-de1bbab9181c] Starting registration for email: test@example.com
2025-08-02 21:18:28 - app.main - INFO - main.py:471 - [REGISTER-90b71a67-a11e-4918-b531-de1bbab9181c] Initializing AuthService
2025-08-02 21:18:28 - app.main - INFO - main.py:482 - [REGISTER] User data prepared: {'email': 'test@example.com', 'password': 'test1234', 'full_name': 'Test User', 'role': 'tester'}
2025-08-02 21:18:28 - app.main - INFO - main.py:485 - [REGISTER] Calling auth_service.create_user
2025-08-02 21:18:28 - app.auth.security - INFO - security.py:303 - [AUTH_SERVICE] Starting user creation for email: test@example.com
2025-08-02 21:18:29 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:898 - Created new connection <AdaptedConnection <asyncpg.connection.Connection object at 0x0000017090EA4050>>
2025-08-02 21:18:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:18:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] ()
2025-08-02 21:18:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:18:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] ()
2025-08-02 21:18:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:18:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] ()
2025-08-02 21:18:30 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:739 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x0000017090EA4050>> checked out from pool
2025-08-02 21:18:30 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:1313 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x0000017090EA4050>> is fresh, skipping pre-ping
2025-08-02 21:18:30 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _post_configure_properties() started
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop created_test_cases
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - User.created_test_cases setup primary join users.id = test_cases.created_by
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - User.created_test_cases setup secondary join None
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - User.created_test_cases synchronize pairs [(users.id => test_cases.created_by)]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - User.created_test_cases secondary synchronize pairs []
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - User.created_test_cases local/remote pairs [(users.id / test_cases.created_by)]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - User.created_test_cases remote columns [test_cases.created_by]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - User.created_test_cases local columns [users.id]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - User.created_test_cases relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:18:30 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - User.created_test_cases lazy loading clause :param_1 = test_cases.created_by
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop assigned_test_cases
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - User.assigned_test_cases setup primary join users.id = test_cases.assigned_to
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - User.assigned_test_cases setup secondary join None
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - User.assigned_test_cases synchronize pairs [(users.id => test_cases.assigned_to)]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - User.assigned_test_cases secondary synchronize pairs []
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - User.assigned_test_cases local/remote pairs [(users.id / test_cases.assigned_to)]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - User.assigned_test_cases remote columns [test_cases.assigned_to]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - User.assigned_test_cases local columns [users.id]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - User.assigned_test_cases relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:18:30 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - User.assigned_test_cases lazy loading clause :param_1 = test_cases.assigned_to
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop activity_logs
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - User.activity_logs setup primary join users.id = activity_logs.user_id
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - User.activity_logs setup secondary join None
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - User.activity_logs synchronize pairs [(users.id => activity_logs.user_id)]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - User.activity_logs secondary synchronize pairs []
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - User.activity_logs local/remote pairs [(users.id / activity_logs.user_id)]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - User.activity_logs remote columns [activity_logs.user_id]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - User.activity_logs local columns [users.id]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - User.activity_logs relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:18:30 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - User.activity_logs lazy loading clause :param_1 = activity_logs.user_id
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop comments
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - User.comments setup primary join users.id = comments.user_id
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - User.comments setup secondary join None
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - User.comments synchronize pairs [(users.id => comments.user_id)]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - User.comments secondary synchronize pairs []
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - User.comments local/remote pairs [(users.id / comments.user_id)]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - User.comments remote columns [comments.user_id]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - User.comments local columns [users.id]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - User.comments relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:18:30 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - User.comments lazy loading clause :param_1 = comments.user_id
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop test_executions
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - User.test_executions setup primary join users.id = test_executions.executed_by
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - User.test_executions setup secondary join None
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - User.test_executions synchronize pairs [(users.id => test_executions.executed_by)]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - User.test_executions secondary synchronize pairs []
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - User.test_executions local/remote pairs [(users.id / test_executions.executed_by)]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - User.test_executions remote columns [test_executions.executed_by]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - User.test_executions local columns [users.id]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - User.test_executions relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:18:30 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - User.test_executions lazy loading clause :param_1 = test_executions.executed_by
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop created_projects
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - User.created_projects setup primary join users.id = projects.created_by
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - User.created_projects setup secondary join None
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - User.created_projects synchronize pairs [(users.id => projects.created_by)]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - User.created_projects secondary synchronize pairs []
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - User.created_projects local/remote pairs [(users.id / projects.created_by)]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - User.created_projects remote columns [projects.created_by]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - User.created_projects local columns [users.id]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - User.created_projects relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:18:30 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - User.created_projects lazy loading clause :param_1 = projects.created_by
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop team_memberships
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - User.team_memberships setup primary join users.id = team_members.user_id
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - User.team_memberships setup secondary join None
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - User.team_memberships synchronize pairs [(users.id => team_members.user_id)]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - User.team_memberships secondary synchronize pairs []
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - User.team_memberships local/remote pairs [(users.id / team_members.user_id)]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - User.team_memberships remote columns [team_members.user_id]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - User.team_memberships local columns [users.id]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - User.team_memberships relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:18:30 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - User.team_memberships lazy loading clause :param_1 = team_members.user_id
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop uploaded_attachments
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - User.uploaded_attachments setup primary join users.id = attachments.uploaded_by
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - User.uploaded_attachments setup secondary join None
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - User.uploaded_attachments synchronize pairs [(users.id => attachments.uploaded_by)]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - User.uploaded_attachments secondary synchronize pairs []
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - User.uploaded_attachments local/remote pairs [(users.id / attachments.uploaded_by)]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - User.uploaded_attachments remote columns [attachments.uploaded_by]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - User.uploaded_attachments local columns [users.id]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - User.uploaded_attachments relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:18:30 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - User.uploaded_attachments lazy loading clause :param_1 = attachments.uploaded_by
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop id
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop email
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop full_name
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop hashed_password
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop role
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop is_active
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop created_at
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop updated_at
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _post_configure_properties() complete
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _post_configure_properties() started
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop creator
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Project.creator setup primary join users.id = projects.created_by
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Project.creator setup secondary join None
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Project.creator synchronize pairs [(users.id => projects.created_by)]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Project.creator secondary synchronize pairs []
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Project.creator local/remote pairs [(projects.created_by / users.id)]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Project.creator remote columns [users.id]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Project.creator local columns [projects.created_by]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Project.creator relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:18:30 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Project.creator lazy loading clause users.id = :param_1
2025-08-02 21:18:30 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - Project.creator will use Session.get() to optimize instance loads
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop team
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Project.team setup primary join teams.id = projects.team_id
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Project.team setup secondary join None
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Project.team synchronize pairs [(teams.id => projects.team_id)]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Project.team secondary synchronize pairs []
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Project.team local/remote pairs [(projects.team_id / teams.id)]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Project.team remote columns [teams.id]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Project.team local columns [projects.team_id]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Project.team relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:18:30 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Project.team lazy loading clause teams.id = :param_1
2025-08-02 21:18:30 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - Project.team will use Session.get() to optimize instance loads
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop test_cases
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Project.test_cases setup primary join projects.id = test_cases.project_id
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Project.test_cases setup secondary join None
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Project.test_cases synchronize pairs [(projects.id => test_cases.project_id)]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Project.test_cases secondary synchronize pairs []
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Project.test_cases local/remote pairs [(projects.id / test_cases.project_id)]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Project.test_cases remote columns [test_cases.project_id]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Project.test_cases local columns [projects.id]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Project.test_cases relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:18:30 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Project.test_cases lazy loading clause :param_1 = test_cases.project_id
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop test_plans
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Project.test_plans setup primary join projects.id = test_plans.project_id
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Project.test_plans setup secondary join None
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Project.test_plans synchronize pairs [(projects.id => test_plans.project_id)]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Project.test_plans secondary synchronize pairs []
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Project.test_plans local/remote pairs [(projects.id / test_plans.project_id)]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Project.test_plans remote columns [test_plans.project_id]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Project.test_plans local columns [projects.id]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Project.test_plans relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:18:30 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Project.test_plans lazy loading clause :param_1 = test_plans.project_id
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop environments
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Project.environments setup primary join projects.id = environments.project_id
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Project.environments setup secondary join None
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Project.environments synchronize pairs [(projects.id => environments.project_id)]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Project.environments secondary synchronize pairs []
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Project.environments local/remote pairs [(projects.id / environments.project_id)]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Project.environments remote columns [environments.project_id]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Project.environments local columns [projects.id]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Project.environments relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:18:30 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Project.environments lazy loading clause :param_1 = environments.project_id
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop id
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop name
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop description
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop created_by
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop team_id
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop is_active
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop created_at
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop updated_at
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _post_configure_properties() complete
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _post_configure_properties() started
2025-08-02 21:18:30 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) initialize prop test_case
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestStep.test_case setup primary join test_cases.id = test_steps.test_case_id
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestStep.test_case setup secondary join None
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestStep.test_case synchronize pairs [(test_cases.id => test_steps.test_case_id)]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestStep.test_case secondary synchronize pairs []
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestStep.test_case local/remote pairs [(test_steps.test_case_id / test_cases.id)]
2025-08-02 21:18:30 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestStep.test_case remote columns [test_cases.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestStep.test_case local columns [test_steps.test_case_id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestStep.test_case relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestStep.test_case lazy loading clause test_cases.id = :param_1
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestStep.test_case will use Session.get() to optimize instance loads
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) initialize prop id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) initialize prop test_case_id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) initialize prop step_number
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) initialize prop description
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) initialize prop expected_result
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) initialize prop actual_result
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) initialize prop status
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _post_configure_properties() complete
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _post_configure_properties() started
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop project
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestCase.project setup primary join projects.id = test_cases.project_id
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestCase.project setup secondary join None
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestCase.project synchronize pairs [(projects.id => test_cases.project_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestCase.project secondary synchronize pairs []
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestCase.project local/remote pairs [(test_cases.project_id / projects.id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestCase.project remote columns [projects.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestCase.project local columns [test_cases.project_id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestCase.project relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestCase.project lazy loading clause projects.id = :param_1
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestCase.project will use Session.get() to optimize instance loads
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop creator
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestCase.creator setup primary join users.id = test_cases.created_by
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestCase.creator setup secondary join None
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestCase.creator synchronize pairs [(users.id => test_cases.created_by)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestCase.creator secondary synchronize pairs []
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestCase.creator local/remote pairs [(test_cases.created_by / users.id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestCase.creator remote columns [users.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestCase.creator local columns [test_cases.created_by]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestCase.creator relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestCase.creator lazy loading clause users.id = :param_1
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestCase.creator will use Session.get() to optimize instance loads
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop assignee
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestCase.assignee setup primary join users.id = test_cases.assigned_to
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestCase.assignee setup secondary join None
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestCase.assignee synchronize pairs [(users.id => test_cases.assigned_to)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestCase.assignee secondary synchronize pairs []
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestCase.assignee local/remote pairs [(test_cases.assigned_to / users.id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestCase.assignee remote columns [users.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestCase.assignee local columns [test_cases.assigned_to]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestCase.assignee relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestCase.assignee lazy loading clause users.id = :param_1
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestCase.assignee will use Session.get() to optimize instance loads
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop steps
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestCase.steps setup primary join test_cases.id = test_steps.test_case_id
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestCase.steps setup secondary join None
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestCase.steps synchronize pairs [(test_cases.id => test_steps.test_case_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestCase.steps secondary synchronize pairs []
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestCase.steps local/remote pairs [(test_cases.id / test_steps.test_case_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestCase.steps remote columns [test_steps.test_case_id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestCase.steps local columns [test_cases.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestCase.steps relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestCase.steps lazy loading clause :param_1 = test_steps.test_case_id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop test_executions
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestCase.test_executions setup primary join test_cases.id = test_executions.test_case_id
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestCase.test_executions setup secondary join None
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestCase.test_executions synchronize pairs [(test_cases.id => test_executions.test_case_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestCase.test_executions secondary synchronize pairs []
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestCase.test_executions local/remote pairs [(test_cases.id / test_executions.test_case_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestCase.test_executions remote columns [test_executions.test_case_id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestCase.test_executions local columns [test_cases.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestCase.test_executions relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestCase.test_executions lazy loading clause :param_1 = test_executions.test_case_id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop comments
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestCase.comments setup primary join test_cases.id = comments.test_case_id
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestCase.comments setup secondary join None
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestCase.comments synchronize pairs [(test_cases.id => comments.test_case_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestCase.comments secondary synchronize pairs []
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestCase.comments local/remote pairs [(test_cases.id / comments.test_case_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestCase.comments remote columns [comments.test_case_id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestCase.comments local columns [test_cases.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestCase.comments relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestCase.comments lazy loading clause :param_1 = comments.test_case_id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop test_plans
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestCase.test_plans setup primary join test_cases.id = test_plan_test_cases.test_case_id
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestCase.test_plans setup secondary join test_plans.id = test_plan_test_cases.test_plan_id
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestCase.test_plans synchronize pairs [(test_cases.id => test_plan_test_cases.test_case_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestCase.test_plans secondary synchronize pairs [(test_plans.id => test_plan_test_cases.test_plan_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestCase.test_plans local/remote pairs [(test_cases.id / test_plan_test_cases.test_case_id),(test_plans.id / test_plan_test_cases.test_plan_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestCase.test_plans remote columns [test_plan_test_cases.test_plan_id,test_plan_test_cases.test_case_id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestCase.test_plans local columns [test_cases.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestCase.test_plans relationship direction RelationshipDirection.MANYTOMANY
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestCase.test_plans lazy loading clause :param_1 = test_plan_test_cases.test_case_id AND test_plans.id = test_plan_test_cases.test_plan_id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop test_plan_test_cases
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestCase.test_plan_test_cases setup primary join test_cases.id = test_plan_test_cases.test_case_id
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestCase.test_plan_test_cases setup secondary join None
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestCase.test_plan_test_cases synchronize pairs [(test_cases.id => test_plan_test_cases.test_case_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestCase.test_plan_test_cases secondary synchronize pairs []
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestCase.test_plan_test_cases local/remote pairs [(test_cases.id / test_plan_test_cases.test_case_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestCase.test_plan_test_cases remote columns [test_plan_test_cases.test_case_id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestCase.test_plan_test_cases local columns [test_cases.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestCase.test_plan_test_cases relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestCase.test_plan_test_cases lazy loading clause :param_1 = test_plan_test_cases.test_case_id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop title
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop description
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop project_id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop test_type
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop priority
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop status
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop expected_result
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop created_by
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop assigned_to
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop tags
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop ai_generated
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop self_healing_enabled
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop prerequisites
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop test_data
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop automation_config
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop created_at
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop updated_at
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _post_configure_properties() complete
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _post_configure_properties() started
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop project
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestPlan.project setup primary join projects.id = test_plans.project_id
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestPlan.project setup secondary join None
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestPlan.project synchronize pairs [(projects.id => test_plans.project_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestPlan.project secondary synchronize pairs []
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestPlan.project local/remote pairs [(test_plans.project_id / projects.id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestPlan.project remote columns [projects.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestPlan.project local columns [test_plans.project_id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestPlan.project relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestPlan.project lazy loading clause projects.id = :param_1
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestPlan.project will use Session.get() to optimize instance loads
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop test_executions
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestPlan.test_executions setup primary join test_plans.id = test_executions.test_plan_id
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestPlan.test_executions setup secondary join None
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestPlan.test_executions synchronize pairs [(test_plans.id => test_executions.test_plan_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestPlan.test_executions secondary synchronize pairs []
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestPlan.test_executions local/remote pairs [(test_plans.id / test_executions.test_plan_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestPlan.test_executions remote columns [test_executions.test_plan_id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestPlan.test_executions local columns [test_plans.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestPlan.test_executions relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestPlan.test_executions lazy loading clause :param_1 = test_executions.test_plan_id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop test_cases
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestPlan.test_cases setup primary join test_plans.id = test_plan_test_cases.test_plan_id
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestPlan.test_cases setup secondary join test_cases.id = test_plan_test_cases.test_case_id
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestPlan.test_cases synchronize pairs [(test_plans.id => test_plan_test_cases.test_plan_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestPlan.test_cases secondary synchronize pairs [(test_cases.id => test_plan_test_cases.test_case_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestPlan.test_cases local/remote pairs [(test_plans.id / test_plan_test_cases.test_plan_id),(test_cases.id / test_plan_test_cases.test_case_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestPlan.test_cases remote columns [test_plan_test_cases.test_plan_id,test_plan_test_cases.test_case_id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestPlan.test_cases local columns [test_plans.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestPlan.test_cases relationship direction RelationshipDirection.MANYTOMANY
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestPlan.test_cases lazy loading clause :param_1 = test_plan_test_cases.test_plan_id AND test_cases.id = test_plan_test_cases.test_case_id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop test_plan_test_cases
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestPlan.test_plan_test_cases setup primary join test_plans.id = test_plan_test_cases.test_plan_id
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestPlan.test_plan_test_cases setup secondary join None
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestPlan.test_plan_test_cases synchronize pairs [(test_plans.id => test_plan_test_cases.test_plan_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestPlan.test_plan_test_cases secondary synchronize pairs []
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestPlan.test_plan_test_cases local/remote pairs [(test_plans.id / test_plan_test_cases.test_plan_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestPlan.test_plan_test_cases remote columns [test_plan_test_cases.test_plan_id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestPlan.test_plan_test_cases local columns [test_plans.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestPlan.test_plan_test_cases relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestPlan.test_plan_test_cases lazy loading clause :param_1 = test_plan_test_cases.test_plan_id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop name
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop description
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop project_id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop created_by
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop status
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop scheduled_start
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop scheduled_end
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop created_at
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop updated_at
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _post_configure_properties() complete
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _post_configure_properties() started
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop test_case
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestExecution.test_case setup primary join test_cases.id = test_executions.test_case_id
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestExecution.test_case setup secondary join None
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestExecution.test_case synchronize pairs [(test_cases.id => test_executions.test_case_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestExecution.test_case secondary synchronize pairs []
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestExecution.test_case local/remote pairs [(test_executions.test_case_id / test_cases.id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestExecution.test_case remote columns [test_cases.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestExecution.test_case local columns [test_executions.test_case_id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestExecution.test_case relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestExecution.test_case lazy loading clause test_cases.id = :param_1
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestExecution.test_case will use Session.get() to optimize instance loads
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop test_plan
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestExecution.test_plan setup primary join test_plans.id = test_executions.test_plan_id
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestExecution.test_plan setup secondary join None
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestExecution.test_plan synchronize pairs [(test_plans.id => test_executions.test_plan_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestExecution.test_plan secondary synchronize pairs []
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestExecution.test_plan local/remote pairs [(test_executions.test_plan_id / test_plans.id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestExecution.test_plan remote columns [test_plans.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestExecution.test_plan local columns [test_executions.test_plan_id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestExecution.test_plan relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestExecution.test_plan lazy loading clause test_plans.id = :param_1
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestExecution.test_plan will use Session.get() to optimize instance loads
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop executor
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestExecution.executor setup primary join users.id = test_executions.executed_by
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestExecution.executor setup secondary join None
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestExecution.executor synchronize pairs [(users.id => test_executions.executed_by)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestExecution.executor secondary synchronize pairs []
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestExecution.executor local/remote pairs [(test_executions.executed_by / users.id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestExecution.executor remote columns [users.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestExecution.executor local columns [test_executions.executed_by]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestExecution.executor relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestExecution.executor lazy loading clause users.id = :param_1
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestExecution.executor will use Session.get() to optimize instance loads
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop environment
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestExecution.environment setup primary join environments.id = test_executions.environment_id
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestExecution.environment setup secondary join None
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestExecution.environment synchronize pairs [(environments.id => test_executions.environment_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestExecution.environment secondary synchronize pairs []
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestExecution.environment local/remote pairs [(test_executions.environment_id / environments.id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestExecution.environment remote columns [environments.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestExecution.environment local columns [test_executions.environment_id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestExecution.environment relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestExecution.environment lazy loading clause environments.id = :param_1
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestExecution.environment will use Session.get() to optimize instance loads
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop test_case_id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop test_plan_id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop executed_by
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop environment_id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop status
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop started_at
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop completed_at
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop duration
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop result
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop logs
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop screenshots
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop error_message
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop ai_analysis
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop created_at
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop updated_at
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _post_configure_properties() complete
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _post_configure_properties() started
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop test_case
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Comment.test_case setup primary join test_cases.id = comments.test_case_id
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Comment.test_case setup secondary join None
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Comment.test_case synchronize pairs [(test_cases.id => comments.test_case_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Comment.test_case secondary synchronize pairs []
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Comment.test_case local/remote pairs [(comments.test_case_id / test_cases.id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Comment.test_case remote columns [test_cases.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Comment.test_case local columns [comments.test_case_id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Comment.test_case relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Comment.test_case lazy loading clause test_cases.id = :param_1
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - Comment.test_case will use Session.get() to optimize instance loads
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop user
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Comment.user setup primary join users.id = comments.user_id
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Comment.user setup secondary join None
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Comment.user synchronize pairs [(users.id => comments.user_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Comment.user secondary synchronize pairs []
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Comment.user local/remote pairs [(comments.user_id / users.id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Comment.user remote columns [users.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Comment.user local columns [comments.user_id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Comment.user relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Comment.user lazy loading clause users.id = :param_1
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - Comment.user will use Session.get() to optimize instance loads
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop parent_comment
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Comment.parent_comment setup primary join comments.id = comments.parent_comment_id
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Comment.parent_comment setup secondary join None
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Comment.parent_comment synchronize pairs [(comments.id => comments.parent_comment_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Comment.parent_comment secondary synchronize pairs []
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Comment.parent_comment local/remote pairs [(comments.parent_comment_id / comments.id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Comment.parent_comment remote columns [comments.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Comment.parent_comment local columns [comments.parent_comment_id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Comment.parent_comment relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Comment.parent_comment lazy loading clause comments.id = :param_1
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - Comment.parent_comment will use Session.get() to optimize instance loads
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop replies
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Comment.replies setup primary join comments.id = comments.parent_comment_id
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Comment.replies setup secondary join None
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Comment.replies synchronize pairs [(comments.id => comments.parent_comment_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Comment.replies secondary synchronize pairs []
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Comment.replies local/remote pairs [(comments.id / comments.parent_comment_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Comment.replies remote columns [comments.parent_comment_id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Comment.replies local columns [comments.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Comment.replies relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Comment.replies lazy loading clause :param_1 = comments.parent_comment_id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop test_case_id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop user_id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop user_name
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop comment_type
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop content
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop parent_comment_id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop resolved
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop created_at
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop updated_at
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _post_configure_properties() complete
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _post_configure_properties() started
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) initialize prop members
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Team.members setup primary join teams.id = team_members.team_id
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Team.members setup secondary join None
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Team.members synchronize pairs [(teams.id => team_members.team_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Team.members secondary synchronize pairs []
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Team.members local/remote pairs [(teams.id / team_members.team_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Team.members remote columns [team_members.team_id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Team.members local columns [teams.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Team.members relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Team.members lazy loading clause :param_1 = team_members.team_id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) initialize prop projects
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Team.projects setup primary join teams.id = projects.team_id
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Team.projects setup secondary join None
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Team.projects synchronize pairs [(teams.id => projects.team_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Team.projects secondary synchronize pairs []
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Team.projects local/remote pairs [(teams.id / projects.team_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Team.projects remote columns [projects.team_id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Team.projects local columns [teams.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Team.projects relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Team.projects lazy loading clause :param_1 = projects.team_id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) initialize prop id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) initialize prop name
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) initialize prop description
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) initialize prop created_by
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) initialize prop created_at
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) initialize prop updated_at
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _post_configure_properties() complete
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _post_configure_properties() started
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) initialize prop team
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TeamMember.team setup primary join teams.id = team_members.team_id
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TeamMember.team setup secondary join None
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TeamMember.team synchronize pairs [(teams.id => team_members.team_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TeamMember.team secondary synchronize pairs []
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TeamMember.team local/remote pairs [(team_members.team_id / teams.id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TeamMember.team remote columns [teams.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TeamMember.team local columns [team_members.team_id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TeamMember.team relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TeamMember.team lazy loading clause teams.id = :param_1
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TeamMember.team will use Session.get() to optimize instance loads
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) initialize prop user
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TeamMember.user setup primary join users.id = team_members.user_id
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TeamMember.user setup secondary join None
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TeamMember.user synchronize pairs [(users.id => team_members.user_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TeamMember.user secondary synchronize pairs []
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TeamMember.user local/remote pairs [(team_members.user_id / users.id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TeamMember.user remote columns [users.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TeamMember.user local columns [team_members.user_id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TeamMember.user relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TeamMember.user lazy loading clause users.id = :param_1
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TeamMember.user will use Session.get() to optimize instance loads
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) initialize prop id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) initialize prop team_id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) initialize prop user_id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) initialize prop role
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) initialize prop joined_at
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _post_configure_properties() complete
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _post_configure_properties() started
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop project
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Environment.project setup primary join projects.id = environments.project_id
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Environment.project setup secondary join None
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Environment.project synchronize pairs [(projects.id => environments.project_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Environment.project secondary synchronize pairs []
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Environment.project local/remote pairs [(environments.project_id / projects.id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Environment.project remote columns [projects.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Environment.project local columns [environments.project_id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Environment.project relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Environment.project lazy loading clause projects.id = :param_1
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - Environment.project will use Session.get() to optimize instance loads
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop test_executions
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Environment.test_executions setup primary join environments.id = test_executions.environment_id
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Environment.test_executions setup secondary join None
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Environment.test_executions synchronize pairs [(environments.id => test_executions.environment_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Environment.test_executions secondary synchronize pairs []
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Environment.test_executions local/remote pairs [(environments.id / test_executions.environment_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Environment.test_executions remote columns [test_executions.environment_id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Environment.test_executions local columns [environments.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Environment.test_executions relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Environment.test_executions lazy loading clause :param_1 = test_executions.environment_id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop name
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop description
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop base_url
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop project_id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop is_active
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop variables
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop created_at
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop updated_at
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _post_configure_properties() complete
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _post_configure_properties() started
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop uploader
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Attachment.uploader setup primary join users.id = attachments.uploaded_by
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Attachment.uploader setup secondary join None
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Attachment.uploader synchronize pairs [(users.id => attachments.uploaded_by)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Attachment.uploader secondary synchronize pairs []
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Attachment.uploader local/remote pairs [(attachments.uploaded_by / users.id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Attachment.uploader remote columns [users.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Attachment.uploader local columns [attachments.uploaded_by]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Attachment.uploader relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Attachment.uploader lazy loading clause users.id = :param_1
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - Attachment.uploader will use Session.get() to optimize instance loads
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop file_name
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop file_path
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop file_size
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop file_type
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop entity_type
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop entity_id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop uploaded_by
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop description
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop created_at
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _post_configure_properties() complete
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _post_configure_properties() started
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) initialize prop test_plan
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestPlanTestCase.test_plan setup primary join test_plans.id = test_plan_test_cases.test_plan_id
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestPlanTestCase.test_plan setup secondary join None
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestPlanTestCase.test_plan synchronize pairs [(test_plans.id => test_plan_test_cases.test_plan_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestPlanTestCase.test_plan secondary synchronize pairs []
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestPlanTestCase.test_plan local/remote pairs [(test_plan_test_cases.test_plan_id / test_plans.id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestPlanTestCase.test_plan remote columns [test_plans.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestPlanTestCase.test_plan local columns [test_plan_test_cases.test_plan_id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestPlanTestCase.test_plan relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestPlanTestCase.test_plan lazy loading clause test_plans.id = :param_1
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestPlanTestCase.test_plan will use Session.get() to optimize instance loads
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) initialize prop test_case
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestPlanTestCase.test_case setup primary join test_cases.id = test_plan_test_cases.test_case_id
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestPlanTestCase.test_case setup secondary join None
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestPlanTestCase.test_case synchronize pairs [(test_cases.id => test_plan_test_cases.test_case_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestPlanTestCase.test_case secondary synchronize pairs []
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestPlanTestCase.test_case local/remote pairs [(test_plan_test_cases.test_case_id / test_cases.id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestPlanTestCase.test_case remote columns [test_cases.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestPlanTestCase.test_case local columns [test_plan_test_cases.test_case_id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestPlanTestCase.test_case relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestPlanTestCase.test_case lazy loading clause test_cases.id = :param_1
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestPlanTestCase.test_case will use Session.get() to optimize instance loads
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) initialize prop creator
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestPlanTestCase.creator setup primary join users.id = test_plan_test_cases.created_by
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestPlanTestCase.creator setup secondary join None
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestPlanTestCase.creator synchronize pairs [(users.id => test_plan_test_cases.created_by)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestPlanTestCase.creator secondary synchronize pairs []
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestPlanTestCase.creator local/remote pairs [(test_plan_test_cases.created_by / users.id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestPlanTestCase.creator remote columns [users.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestPlanTestCase.creator local columns [test_plan_test_cases.created_by]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestPlanTestCase.creator relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestPlanTestCase.creator lazy loading clause users.id = :param_1
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestPlanTestCase.creator will use Session.get() to optimize instance loads
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) initialize prop id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) initialize prop test_plan_id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) initialize prop test_case_id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) initialize prop order
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) initialize prop is_mandatory
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) initialize prop created_at
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) initialize prop created_by
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _post_configure_properties() complete
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _post_configure_properties() started
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop user
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - ActivityLog.user setup primary join users.id = activity_logs.user_id
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - ActivityLog.user setup secondary join None
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - ActivityLog.user synchronize pairs [(users.id => activity_logs.user_id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - ActivityLog.user secondary synchronize pairs []
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - ActivityLog.user local/remote pairs [(activity_logs.user_id / users.id)]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - ActivityLog.user remote columns [users.id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - ActivityLog.user local columns [activity_logs.user_id]
2025-08-02 21:18:31 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - ActivityLog.user relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - ActivityLog.user lazy loading clause users.id = :param_1
2025-08-02 21:18:31 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - ActivityLog.user will use Session.get() to optimize instance loads
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop user_id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop user_name
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop action
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop target_type
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop target_id
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop target_name
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop details
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop ip_address
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop user_agent
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop created_at
2025-08-02 21:18:31 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _post_configure_properties() complete
2025-08-02 21:18:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT users.id, users.email, users.full_name, users.hashed_password, users.role, users.is_active, users.created_at, users.updated_at 
FROM users 
WHERE users.email = $1::VARCHAR
2025-08-02 21:18:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00111s] ('test@example.com',)
2025-08-02 21:18:31 - app.auth.security - WARNING - security.py:237 - [AUTH_SERVICE] Email already registered: test@example.com
2025-08-02 21:18:31 - app.auth.security - WARNING - security.py:353 - [AUTH_SERVICE] Validation error: Email already registered
2025-08-02 21:18:31 - app.main - ERROR - main.py:518 - [REGISTER] HTTP Exception: Email already registered
2025-08-02 21:18:31 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:18:31 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:972 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x0000017090EA4050>> being returned to pool
2025-08-02 21:18:31 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:1429 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x0000017090EA4050>> rollback-on-return
2025-08-02 21:18:31 - app.db.session - ERROR - session.py:101 - Database session error: 400: Email already registered
2025-08-02 21:18:31 - app.main - WARNING - main.py:382 - HTTP Exception: 400 - Email already registered - Path: /api/auth/register
2025-08-02 21:19:21 - app.main - INFO - main.py:320 - Application shutdown
2025-08-02 21:19:22 - app.main - INFO - main.py:320 - Application shutdown
2025-08-02 21:19:23 - root - INFO - main.py:88 - ================================================================================
2025-08-02 21:19:23 - root - INFO - main.py:89 - Application starting with enhanced logging (level: INFO)
2025-08-02 21:19:23 - root - INFO - main.py:90 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 21:19:23 - root - INFO - main.py:91 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 21:19:23 - root - INFO - main.py:92 - ================================================================================
2025-08-02 21:19:24 - root - INFO - main.py:88 - ================================================================================
2025-08-02 21:19:24 - root - INFO - main.py:89 - Application starting with enhanced logging (level: DEBUG)
2025-08-02 21:19:24 - root - INFO - main.py:90 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 21:19:24 - root - INFO - main.py:91 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 21:19:24 - root - INFO - main.py:92 - ================================================================================
2025-08-02 21:19:24 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-08-02 21:19:24 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-08-02 21:19:24 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-08-02 21:19:24 - passlib.registry - DEBUG - registry.py:296 - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
2025-08-02 21:19:24 - app.api.v1.routes.auth - DEBUG - auth.py:34 - Environment variables: {
  "ALLUSERSPROFILE": "C:\\ProgramData",
  "APPDATA": "C:\\Users\\kunal\\AppData\\Roaming",
  "C:\\USERS\\KUNAL\\DOWNLOADS\\EMERGENTINTELLITEST-MAIN": "C:\\Program Files\\nodejs\\",
  "CHROME_CRASHPAD_PIPE_NAME": "\\\\.\\pipe\\crashpad_11300_YGFLEAWXLMRVRBOK",
  "COMMONPROGRAMFILES": "C:\\Program Files\\Common Files",
  "COMMONPROGRAMFILES(X86)": "C:\\Program Files (x86)\\Common Files",
  "COMMONPROGRAMW6432": "C:\\Program Files\\Common Files",
  "COMPUTERNAME": "KUNALDELL",
  "COMSPEC": "C:\\Windows\\system32\\cmd.exe",
  "DRIVERDATA": "C:\\Windows\\System32\\Drivers\\DriverData",
  "EFC_5864_1592913036": "1",
  "HOMEDRIVE": "C:",
  "HOMEPATH": "\\Users\\kunal",
  "LOCALAPPDATA": "C:\\Users\\kunal\\AppData\\Local",
  "LOGONSERVER": "\\\\KUNALDELL",
  "LOG_LEVEL": "DEBUG",
  "NUMBER_OF_PROCESSORS": "22",
  "ONEDRIVE": "C:\\Users\\kunal\\OneDrive",
  "ONEDRIVECONSUMER": "C:\\Users\\kunal\\OneDrive",
  "ORIGINAL_XDG_CURRENT_DESKTOP": "undefined",
  "OS": "Windows_NT",
  "PATH": "C:\\Program Files\\Python312\\Scripts\\;C:\\Program Files\\Python312\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files\\Git\\cmd;c:\\Users\\kunal\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Program Files\\nodejs\\;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\kunal\\AppData\\Local\\Programs\\Windsurf\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WinGet\\Links;C:\\Program Files\\nodejs;C:\\Users\\kunal\\AppData\\Roaming\\npm;C:\\Program Files\\Git\\bin;C:\\Users\\kunal\\.deno\\bin;c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\scripts\\noConfigScripts",
  "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL",
  "POSTGRESQL": "C:\\Program Files\\PostgreSQL\\17\\bin\\bin",
  "PROCESSOR_ARCHITECTURE": "AMD64",
  "PROCESSOR_IDENTIFIER": "Intel64 Family 6 Model 170 Stepping 4, GenuineIntel",
  "PROCESSOR_LEVEL": "6",
  "PROCESSOR_REVISION": "aa04",
  "PROGRAMDATA": "C:\\ProgramData",
  "PROGRAMFILES": "C:\\Program Files",
  "PROGRAMFILES(X86)": "C:\\Program Files (x86)",
  "PROGRAMW6432": "C:\\Program Files",
  "PSMODULEPATH": "C:\\Users\\kunal\\OneDrive\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules",
  "PUBLIC": "C:\\Users\\Public",
  "PYTHONUNBUFFERED": "1",
  "SESSIONNAME": "Console",
  "SYSTEMDRIVE": "C:",
  "SYSTEMROOT": "C:\\Windows",
  "TEMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "TMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "USERDOMAIN": "KUNALDELL",
  "USERDOMAIN_ROAMINGPROFILE": "KUNALDELL",
  "USERNAME": "kunal",
  "USERPROFILE": "C:\\Users\\kunal",
  "WINDIR": "C:\\Windows",
  "ZES_ENABLE_SYSMAN": "1",
  "PAGER": "cat",
  "TERM_PROGRAM": "vscode",
  "TERM_PROGRAM_VERSION": "1.99.3",
  "LANG": "en_US.UTF-8",
  "COLORTERM": "truecolor",
  "VSCODE_GIT_IPC_HANDLE": "\\\\.\\pipe\\vscode-git-fccd44132c-sock",
  "PYDEVD_DISABLE_FILE_VALIDATION": "1",
  "VSCODE_DEBUGPY_ADAPTER_ENDPOINTS": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\.noConfigDebugAdapterEndpoints\\endpoint-875e116b470e769c.txt",
  "BUNDLED_DEBUGPY_PATH": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\libs\\debugpy",
  "VSCODE_INJECTION": "1",
  "PROJECT_NAME": "IntelliTest AI Automation Platform",
  "ACCESS_TOKEN_EXPIRE_MINUTES": "11520",
  "SERVER_NAME": "localhost",
  "SERVER_HOST": "http://localhost:8001",
  "DATABASE_URL": "postgresql://postgres.lflecyuvttemfoyixngi:Ayeshaayesha121@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres",
  "SMTP_TLS": "true",
  "SMTP_PORT": "587",
  "SMTP_HOST": "smtp.gmail.com",
  "SMTP_USER": "your-email@gmail.com",
  "EMAILS_FROM_EMAIL": "your-email@gmail.com",
  "EMAILS_FROM_NAME": "IntelliTest Platform",
  "OPENAI_API_KEY": "your-openai-api-key-here",
  "AWS_ACCESS_KEY_ID": "your-aws-access-key",
  "AWS_DEFAULT_REGION": "us-east-1",
  "UPLOAD_DIR": "uploads",
  "MAX_UPLOAD_SIZE": "10485760",
  "ALLOWED_FILE_TYPES": "jpg,jpeg,png,gif,pdf,txt,csv,json",
  "TESTING": "false"
}
2025-08-02 21:19:24 - app.api.v1.routes.auth - DEBUG - auth.py:45 - Database URL: postgresql://postgres.lflecyuvttemfoyixngi:*****@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres
2025-08-02 21:19:24 - app.main - INFO - main.py:1372 - Initializing API routers...
2025-08-02 21:19:24 - app.main - INFO - main.py:1384 - API routers initialized successfully
2025-08-02 21:19:24 - app.main - INFO - main.py:246 - Starting database initialization...
2025-08-02 21:19:25 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x000002B7F0C4B780; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 21:19:25 - app.main - INFO - main.py:1372 - Initializing API routers...
2025-08-02 21:19:25 - app.main - INFO - main.py:1384 - API routers initialized successfully
2025-08-02 21:19:25 - app.main - INFO - main.py:246 - Starting database initialization...
2025-08-02 21:19:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:19:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:19:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:19:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:19:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:19:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:19:26 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x000001A0A4ACFDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 21:19:26 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x000002B7F0C4B780; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 21:19:26 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x000002B7F0C4B780; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 21:19:26 - app.main - INFO - main.py:276 - Disabling foreign key constraints...
2025-08-02 21:19:26 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:19:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 21:19:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00552s] {}
2025-08-02 21:19:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:19:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:19:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 21:19:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00163s] {}
2025-08-02 21:19:26 - app.main - INFO - main.py:291 - Dropping existing tables...
2025-08-02 21:19:26 - app.main - INFO - main.py:294 - Dropping table: activity_logs
2025-08-02 21:19:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 21:19:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00113s] {}
2025-08-02 21:19:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:19:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:19:26 - app.main - INFO - main.py:296 - Dropped table: activity_logs
2025-08-02 21:19:26 - app.main - INFO - main.py:294 - Dropping table: attachments
2025-08-02 21:19:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 21:19:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00096s] {}
2025-08-02 21:19:26 - app.main - INFO - main.py:296 - Dropped table: attachments
2025-08-02 21:19:26 - app.main - INFO - main.py:294 - Dropping table: comments
2025-08-02 21:19:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 21:19:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00113s] {}
2025-08-02 21:19:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:19:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:19:26 - app.main - INFO - main.py:296 - Dropped table: comments
2025-08-02 21:19:26 - app.main - INFO - main.py:294 - Dropping table: environments
2025-08-02 21:19:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 21:19:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00101s] {}
2025-08-02 21:19:26 - app.main - INFO - main.py:296 - Dropped table: environments
2025-08-02 21:19:26 - app.main - INFO - main.py:294 - Dropping table: projects
2025-08-02 21:19:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 21:19:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00111s] {}
2025-08-02 21:19:26 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x000001A0A4ACFDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 21:19:26 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x000001A0A4ACFDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 21:19:26 - app.main - INFO - main.py:276 - Disabling foreign key constraints...
2025-08-02 21:19:26 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:19:26 - app.main - INFO - main.py:296 - Dropped table: projects
2025-08-02 21:19:26 - app.main - INFO - main.py:294 - Dropping table: team_members
2025-08-02 21:19:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 21:19:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 21:19:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00099s] {}
2025-08-02 21:19:26 - app.main - INFO - main.py:296 - Dropped table: team_members
2025-08-02 21:19:26 - app.main - INFO - main.py:294 - Dropping table: teams
2025-08-02 21:19:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 21:19:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00166s] {}
2025-08-02 21:19:27 - app.main - INFO - main.py:296 - Dropped table: teams
2025-08-02 21:19:27 - app.main - INFO - main.py:294 - Dropping table: test_cases
2025-08-02 21:19:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 21:19:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 21:19:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00117s] {}
2025-08-02 21:19:27 - app.main - INFO - main.py:296 - Dropped table: test_cases
2025-08-02 21:19:27 - app.main - INFO - main.py:294 - Dropping table: test_executions
2025-08-02 21:19:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 21:19:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00099s] {}
2025-08-02 21:19:27 - app.main - INFO - main.py:291 - Dropping existing tables...
2025-08-02 21:19:27 - app.main - INFO - main.py:294 - Dropping table: activity_logs
2025-08-02 21:19:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 21:19:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00240s] {}
2025-08-02 21:19:27 - app.main - INFO - main.py:296 - Dropped table: test_executions
2025-08-02 21:19:27 - app.main - INFO - main.py:294 - Dropping table: test_plan_test_cases
2025-08-02 21:19:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 21:19:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00159s] {}
2025-08-02 21:19:27 - app.main - INFO - main.py:296 - Dropped table: test_plan_test_cases
2025-08-02 21:19:27 - app.main - INFO - main.py:294 - Dropping table: test_plans
2025-08-02 21:19:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 21:19:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00099s] {}
2025-08-02 21:19:27 - app.main - INFO - main.py:296 - Dropped table: test_plans
2025-08-02 21:19:27 - app.main - INFO - main.py:294 - Dropping table: test_steps
2025-08-02 21:19:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 21:19:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00089s] {}
2025-08-02 21:19:27 - app.main - INFO - main.py:296 - Dropped table: test_steps
2025-08-02 21:19:27 - app.main - INFO - main.py:294 - Dropping table: users
2025-08-02 21:19:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 21:19:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00201s] {}
2025-08-02 21:19:27 - app.main - INFO - main.py:296 - Dropped table: users
2025-08-02 21:19:27 - app.main - INFO - main.py:302 - Creating database tables in order...
2025-08-02 21:19:27 - app.main - INFO - main.py:305 - Creating table: users
2025-08-02 21:19:27 - app.main - INFO - main.py:320 - Application shutdown
2025-08-02 21:19:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00275s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 21:19:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00185s] {}
2025-08-02 21:19:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 21:19:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00163s] {}
2025-08-02 21:19:27 - app.main - INFO - main.py:307 - Table created: users
2025-08-02 21:19:27 - app.main - INFO - main.py:305 - Creating table: teams
2025-08-02 21:19:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2618s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:19:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00256s] {}
2025-08-02 21:19:27 - app.main - INFO - main.py:307 - Table created: teams
2025-08-02 21:19:27 - app.main - INFO - main.py:305 - Creating table: projects
2025-08-02 21:19:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4354s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 21:19:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00186s] {}
2025-08-02 21:19:28 - app.main - INFO - main.py:307 - Table created: projects
2025-08-02 21:19:28 - app.main - INFO - main.py:305 - Creating table: environments
2025-08-02 21:19:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.61s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 21:19:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00183s] {}
2025-08-02 21:19:28 - app.main - INFO - main.py:307 - Table created: environments
2025-08-02 21:19:28 - app.main - INFO - main.py:305 - Creating table: test_cases
2025-08-02 21:19:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7835s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00153s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.08655s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1717s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 21:19:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00205s] {}
2025-08-02 21:19:28 - app.main - INFO - main.py:307 - Table created: test_cases
2025-08-02 21:19:28 - app.main - INFO - main.py:305 - Creating table: test_steps
2025-08-02 21:19:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.216s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 21:19:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00163s] {}
2025-08-02 21:19:28 - app.main - INFO - main.py:307 - Table created: test_steps
2025-08-02 21:19:28 - app.main - INFO - main.py:305 - Creating table: test_plans
2025-08-02 21:19:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.394s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6107s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:19:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00215s] {}
2025-08-02 21:19:29 - app.main - INFO - main.py:307 - Table created: test_plans
2025-08-02 21:19:29 - app.main - INFO - main.py:305 - Creating table: test_plan_test_cases
2025-08-02 21:19:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.654s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:19:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00191s] {}
2025-08-02 21:19:29 - app.main - INFO - main.py:307 - Table created: test_plan_test_cases
2025-08-02 21:19:29 - app.main - INFO - main.py:305 - Creating table: test_executions
2025-08-02 21:19:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.828s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.043s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 21:19:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00225s] {}
2025-08-02 21:19:29 - app.main - INFO - main.py:307 - Table created: test_executions
2025-08-02 21:19:29 - app.main - INFO - main.py:305 - Creating table: comments
2025-08-02 21:19:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.085s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.302s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 21:19:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00280s] {}
2025-08-02 21:19:29 - app.main - INFO - main.py:307 - Table created: comments
2025-08-02 21:19:29 - app.main - INFO - main.py:305 - Creating table: team_members
2025-08-02 21:19:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.344s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:29 - root - INFO - main.py:88 - ================================================================================
2025-08-02 21:19:29 - root - INFO - main.py:89 - Application starting with enhanced logging (level: INFO)
2025-08-02 21:19:29 - root - INFO - main.py:90 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 21:19:29 - root - INFO - main.py:91 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 21:19:29 - root - INFO - main.py:92 - ================================================================================
2025-08-02 21:19:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:19:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00152s] {}
2025-08-02 21:19:30 - app.main - INFO - main.py:307 - Table created: team_members
2025-08-02 21:19:30 - app.main - INFO - main.py:305 - Creating table: attachments
2025-08-02 21:19:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.518s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 21:19:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00209s] {}
2025-08-02 21:19:30 - app.main - INFO - main.py:307 - Table created: attachments
2025-08-02 21:19:30 - app.main - INFO - main.py:305 - Creating table: activity_logs
2025-08-02 21:19:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.691s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:19:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00255s] {}
2025-08-02 21:19:30 - app.main - INFO - main.py:307 - Table created: activity_logs
2025-08-02 21:19:30 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:19:30 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x000002B7F0C4B780; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 21:19:30 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x000002B7F0C4B780; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 21:19:30 - app.main - INFO - main.py:312 - All database tables created successfully
2025-08-02 21:19:30 - app.main - INFO - main.py:296 - Dropped table: activity_logs
2025-08-02 21:19:30 - app.main - INFO - main.py:294 - Dropping table: attachments
2025-08-02 21:19:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 21:19:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00082s] {}
2025-08-02 21:19:30 - app.main - INFO - main.py:296 - Dropped table: attachments
2025-08-02 21:19:30 - app.main - INFO - main.py:294 - Dropping table: comments
2025-08-02 21:19:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 21:19:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00117s] {}
2025-08-02 21:19:30 - app.main - INFO - main.py:296 - Dropped table: comments
2025-08-02 21:19:30 - app.main - INFO - main.py:294 - Dropping table: environments
2025-08-02 21:19:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 21:19:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00089s] {}
2025-08-02 21:19:30 - app.main - INFO - main.py:296 - Dropped table: environments
2025-08-02 21:19:30 - app.main - INFO - main.py:294 - Dropping table: projects
2025-08-02 21:19:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 21:19:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00134s] {}
2025-08-02 21:19:30 - app.main - INFO - main.py:296 - Dropped table: projects
2025-08-02 21:19:30 - app.main - INFO - main.py:294 - Dropping table: team_members
2025-08-02 21:19:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 21:19:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00152s] {}
2025-08-02 21:19:30 - app.main - INFO - main.py:296 - Dropped table: team_members
2025-08-02 21:19:30 - app.main - INFO - main.py:294 - Dropping table: teams
2025-08-02 21:19:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 21:19:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00096s] {}
2025-08-02 21:19:31 - app.main - INFO - main.py:296 - Dropped table: teams
2025-08-02 21:19:31 - app.main - INFO - main.py:294 - Dropping table: test_cases
2025-08-02 21:19:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 21:19:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00117s] {}
2025-08-02 21:19:31 - app.main - INFO - main.py:296 - Dropped table: test_cases
2025-08-02 21:19:31 - app.main - INFO - main.py:294 - Dropping table: test_executions
2025-08-02 21:19:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 21:19:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00093s] {}
2025-08-02 21:19:31 - app.main - INFO - main.py:296 - Dropped table: test_executions
2025-08-02 21:19:31 - app.main - INFO - main.py:294 - Dropping table: test_plan_test_cases
2025-08-02 21:19:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 21:19:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00085s] {}
2025-08-02 21:19:31 - app.main - INFO - main.py:1372 - Initializing API routers...
2025-08-02 21:19:31 - app.main - INFO - main.py:1384 - API routers initialized successfully
2025-08-02 21:19:31 - app.main - INFO - main.py:246 - Starting database initialization...
2025-08-02 21:19:31 - app.main - INFO - main.py:296 - Dropped table: test_plan_test_cases
2025-08-02 21:19:31 - app.main - INFO - main.py:294 - Dropping table: test_plans
2025-08-02 21:19:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 21:19:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00118s] {}
2025-08-02 21:19:31 - app.main - INFO - main.py:296 - Dropped table: test_plans
2025-08-02 21:19:31 - app.main - INFO - main.py:294 - Dropping table: test_steps
2025-08-02 21:19:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 21:19:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00144s] {}
2025-08-02 21:19:31 - app.main - INFO - main.py:296 - Dropped table: test_steps
2025-08-02 21:19:31 - app.main - INFO - main.py:294 - Dropping table: users
2025-08-02 21:19:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 21:19:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00127s] {}
2025-08-02 21:19:31 - app.main - INFO - main.py:296 - Dropped table: users
2025-08-02 21:19:31 - app.main - INFO - main.py:302 - Creating database tables in order...
2025-08-02 21:19:31 - app.main - INFO - main.py:305 - Creating table: users
2025-08-02 21:19:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00142s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 21:19:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00182s] {}
2025-08-02 21:19:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 21:19:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00165s] {}
2025-08-02 21:19:31 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x0000011F5D51FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 21:19:31 - app.main - INFO - main.py:307 - Table created: users
2025-08-02 21:19:31 - app.main - INFO - main.py:305 - Creating table: teams
2025-08-02 21:19:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2727s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:19:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00205s] {}
2025-08-02 21:19:32 - app.main - INFO - main.py:307 - Table created: teams
2025-08-02 21:19:32 - app.main - INFO - main.py:305 - Creating table: projects
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4551s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00194s] {}
2025-08-02 21:19:32 - app.main - INFO - main.py:307 - Table created: projects
2025-08-02 21:19:32 - app.main - INFO - main.py:305 - Creating table: environments
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6388s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00185s] {}
2025-08-02 21:19:32 - app.main - INFO - main.py:307 - Table created: environments
2025-08-02 21:19:32 - app.main - INFO - main.py:305 - Creating table: test_cases
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.8194s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00306s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.09212s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:32 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x0000011F5D51FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 21:19:32 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x0000011F5D51FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 21:19:32 - app.main - INFO - main.py:276 - Disabling foreign key constraints...
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00215s] {}
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1809s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00228s] {}
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00125s] {}
2025-08-02 21:19:32 - app.main - INFO - main.py:307 - Table created: test_cases
2025-08-02 21:19:32 - app.main - INFO - main.py:305 - Creating table: test_steps
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.278s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:32 - app.main - INFO - main.py:291 - Dropping existing tables...
2025-08-02 21:19:32 - app.main - INFO - main.py:294 - Dropping table: activity_logs
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00114s] {}
2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 21:19:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00198s] {}
2025-08-02 21:19:33 - app.main - INFO - main.py:307 - Table created: test_steps
2025-08-02 21:19:33 - app.main - INFO - main.py:305 - Creating table: test_plans
2025-08-02 21:19:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.463s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.641s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:19:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00196s] {}
2025-08-02 21:19:33 - app.main - INFO - main.py:307 - Table created: test_plans
2025-08-02 21:19:33 - app.main - INFO - main.py:305 - Creating table: test_plan_test_cases
2025-08-02 21:19:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.735s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:19:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00239s] {}
2025-08-02 21:19:33 - app.main - INFO - main.py:307 - Table created: test_plan_test_cases
2025-08-02 21:19:33 - app.main - INFO - main.py:305 - Creating table: test_executions
2025-08-02 21:19:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.921s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.1s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 21:19:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00258s] {}
2025-08-02 21:19:33 - app.main - INFO - main.py:307 - Table created: test_executions
2025-08-02 21:19:33 - app.main - INFO - main.py:305 - Creating table: comments
2025-08-02 21:19:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.195s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.374s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 21:19:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00241s] {}
2025-08-02 21:19:34 - app.main - INFO - main.py:307 - Table created: comments
2025-08-02 21:19:34 - app.main - INFO - main.py:305 - Creating table: team_members
2025-08-02 21:19:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.469s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:19:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00149s] {}
2025-08-02 21:19:34 - app.main - INFO - main.py:307 - Table created: team_members
2025-08-02 21:19:34 - app.main - INFO - main.py:305 - Creating table: attachments
2025-08-02 21:19:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.653s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 21:19:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00195s] {}
2025-08-02 21:19:34 - app.main - INFO - main.py:307 - Table created: attachments
2025-08-02 21:19:34 - app.main - INFO - main.py:305 - Creating table: activity_logs
2025-08-02 21:19:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.834s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:19:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00186s] {}
2025-08-02 21:19:34 - app.main - INFO - main.py:307 - Table created: activity_logs
2025-08-02 21:19:34 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:19:34 - app.main - INFO - main.py:296 - Dropped table: activity_logs
2025-08-02 21:19:34 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x000001A0A4ACFDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 21:19:34 - app.main - INFO - main.py:294 - Dropping table: attachments
2025-08-02 21:19:34 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x000001A0A4ACFDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 21:19:34 - app.main - INFO - main.py:312 - All database tables created successfully
2025-08-02 21:19:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 21:19:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00091s] {}
2025-08-02 21:19:34 - app.main - INFO - main.py:296 - Dropped table: attachments
2025-08-02 21:19:34 - app.main - INFO - main.py:294 - Dropping table: comments
2025-08-02 21:19:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 21:19:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00086s] {}
2025-08-02 21:19:34 - app.main - INFO - main.py:296 - Dropped table: comments
2025-08-02 21:19:34 - app.main - INFO - main.py:294 - Dropping table: environments
2025-08-02 21:19:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 21:19:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00140s] {}
2025-08-02 21:19:34 - app.main - INFO - main.py:296 - Dropped table: environments
2025-08-02 21:19:34 - app.main - INFO - main.py:294 - Dropping table: projects
2025-08-02 21:19:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 21:19:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00119s] {}
2025-08-02 21:19:35 - app.main - INFO - main.py:296 - Dropped table: projects
2025-08-02 21:19:35 - app.main - INFO - main.py:294 - Dropping table: team_members
2025-08-02 21:19:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 21:19:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00126s] {}
2025-08-02 21:19:35 - app.main - INFO - main.py:296 - Dropped table: team_members
2025-08-02 21:19:35 - app.main - INFO - main.py:294 - Dropping table: teams
2025-08-02 21:19:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 21:19:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00130s] {}
2025-08-02 21:19:35 - app.main - INFO - main.py:296 - Dropped table: teams
2025-08-02 21:19:35 - app.main - INFO - main.py:294 - Dropping table: test_cases
2025-08-02 21:19:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 21:19:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00127s] {}
2025-08-02 21:19:35 - app.main - INFO - main.py:296 - Dropped table: test_cases
2025-08-02 21:19:35 - app.main - INFO - main.py:294 - Dropping table: test_executions
2025-08-02 21:19:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 21:19:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00128s] {}
2025-08-02 21:19:35 - app.main - INFO - main.py:296 - Dropped table: test_executions
2025-08-02 21:19:35 - app.main - INFO - main.py:294 - Dropping table: test_plan_test_cases
2025-08-02 21:19:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 21:19:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00182s] {}
2025-08-02 21:19:35 - app.main - INFO - main.py:296 - Dropped table: test_plan_test_cases
2025-08-02 21:19:35 - app.main - INFO - main.py:294 - Dropping table: test_plans
2025-08-02 21:19:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 21:19:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00130s] {}
2025-08-02 21:19:35 - app.main - INFO - main.py:296 - Dropped table: test_plans
2025-08-02 21:19:35 - app.main - INFO - main.py:294 - Dropping table: test_steps
2025-08-02 21:19:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 21:19:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00113s] {}
2025-08-02 21:19:35 - app.main - INFO - main.py:296 - Dropped table: test_steps
2025-08-02 21:19:35 - app.main - INFO - main.py:294 - Dropping table: users
2025-08-02 21:19:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 21:19:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00110s] {}
2025-08-02 21:19:35 - app.main - INFO - main.py:296 - Dropped table: users
2025-08-02 21:19:35 - app.main - INFO - main.py:302 - Creating database tables in order...
2025-08-02 21:19:35 - app.main - INFO - main.py:305 - Creating table: users
2025-08-02 21:19:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00147s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 21:19:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00223s] {}
2025-08-02 21:19:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 21:19:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00247s] {}
2025-08-02 21:19:36 - app.main - INFO - main.py:307 - Table created: users
2025-08-02 21:19:36 - app.main - INFO - main.py:305 - Creating table: teams
2025-08-02 21:19:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2751s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:19:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00187s] {}
2025-08-02 21:19:36 - app.main - INFO - main.py:307 - Table created: teams
2025-08-02 21:19:36 - app.main - INFO - main.py:305 - Creating table: projects
2025-08-02 21:19:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.458s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 21:19:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00187s] {}
2025-08-02 21:19:36 - app.main - INFO - main.py:307 - Table created: projects
2025-08-02 21:19:36 - app.main - INFO - main.py:305 - Creating table: environments
2025-08-02 21:19:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6404s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 21:19:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00195s] {}
2025-08-02 21:19:36 - app.main - INFO - main.py:307 - Table created: environments
2025-08-02 21:19:36 - app.main - INFO - main.py:305 - Creating table: test_cases
2025-08-02 21:19:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.8195s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00186s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.08906s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1767s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 21:19:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00224s] {}
2025-08-02 21:19:37 - app.main - INFO - main.py:307 - Table created: test_cases
2025-08-02 21:19:37 - app.main - INFO - main.py:305 - Creating table: test_steps
2025-08-02 21:19:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.265s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 21:19:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00557s] {}
2025-08-02 21:19:37 - app.main - INFO - main.py:307 - Table created: test_steps
2025-08-02 21:19:37 - app.main - INFO - main.py:305 - Creating table: test_plans
2025-08-02 21:19:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.449s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6305s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:19:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00233s] {}
2025-08-02 21:19:37 - app.main - INFO - main.py:307 - Table created: test_plans
2025-08-02 21:19:37 - app.main - INFO - main.py:305 - Creating table: test_plan_test_cases
2025-08-02 21:19:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.715s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:19:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00210s] {}
2025-08-02 21:19:37 - app.main - INFO - main.py:307 - Table created: test_plan_test_cases
2025-08-02 21:19:37 - app.main - INFO - main.py:305 - Creating table: test_executions
2025-08-02 21:19:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.897s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.078s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 21:19:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00213s] {}
2025-08-02 21:19:37 - app.main - INFO - main.py:307 - Table created: test_executions
2025-08-02 21:19:37 - app.main - INFO - main.py:305 - Creating table: comments
2025-08-02 21:19:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.167s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.347s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 21:19:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00249s] {}
2025-08-02 21:19:38 - app.main - INFO - main.py:307 - Table created: comments
2025-08-02 21:19:38 - app.main - INFO - main.py:305 - Creating table: team_members
2025-08-02 21:19:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.434s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:19:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00205s] {}
2025-08-02 21:19:38 - app.main - INFO - main.py:307 - Table created: team_members
2025-08-02 21:19:38 - app.main - INFO - main.py:305 - Creating table: attachments
2025-08-02 21:19:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.615s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 21:19:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00190s] {}
2025-08-02 21:19:38 - app.main - INFO - main.py:307 - Table created: attachments
2025-08-02 21:19:38 - app.main - INFO - main.py:305 - Creating table: activity_logs
2025-08-02 21:19:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:19:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.796s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:19:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:19:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00190s] {}
2025-08-02 21:19:38 - app.main - INFO - main.py:307 - Table created: activity_logs
2025-08-02 21:19:38 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:19:38 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x0000011F5D51FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 21:19:38 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x0000011F5D51FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 21:19:38 - app.main - INFO - main.py:312 - All database tables created successfully
2025-08-02 21:19:38 - app.db.session - ERROR - session.py:101 - Database session error: 401: Not authenticated
2025-08-02 21:19:38 - app.main - WARNING - main.py:382 - HTTP Exception: 401 - Not authenticated - Path: /api/v1/test-cases/
2025-08-02 21:19:38 - app.db.session - ERROR - session.py:101 - Database session error: 401: Not authenticated
2025-08-02 21:19:38 - app.main - WARNING - main.py:382 - HTTP Exception: 401 - Not authenticated - Path: /api/v1/test-cases/
2025-08-02 21:19:38 - app.db.session - ERROR - session.py:101 - Database session error: 401: Not authenticated
2025-08-02 21:19:38 - app.main - WARNING - main.py:382 - HTTP Exception: 401 - Not authenticated - Path: /api/v1/test-cases/
2025-08-02 21:19:38 - app.db.session - ERROR - session.py:101 - Database session error: 401: Not authenticated
2025-08-02 21:19:38 - app.main - WARNING - main.py:382 - HTTP Exception: 401 - Not authenticated - Path: /api/v1/test-cases/
2025-08-02 21:19:59 - app.main - INFO - main.py:320 - Application shutdown
2025-08-02 21:21:10 - root - INFO - main.py:88 - ================================================================================
2025-08-02 21:21:10 - root - INFO - main.py:89 - Application starting with enhanced logging (level: DEBUG)
2025-08-02 21:21:10 - root - INFO - main.py:90 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 21:21:10 - root - INFO - main.py:91 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 21:21:10 - root - INFO - main.py:92 - ================================================================================
2025-08-02 21:21:10 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-08-02 21:21:10 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-08-02 21:21:10 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-08-02 21:21:10 - passlib.registry - DEBUG - registry.py:296 - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
2025-08-02 21:21:10 - app.api.v1.routes.auth - DEBUG - auth.py:34 - Environment variables: {
  "ALLUSERSPROFILE": "C:\\ProgramData",
  "APPDATA": "C:\\Users\\kunal\\AppData\\Roaming",
  "C:\\USERS\\KUNAL\\DOWNLOADS\\EMERGENTINTELLITEST-MAIN": "C:\\Program Files\\nodejs\\",
  "CHROME_CRASHPAD_PIPE_NAME": "\\\\.\\pipe\\crashpad_11300_YGFLEAWXLMRVRBOK",
  "COMMONPROGRAMFILES": "C:\\Program Files\\Common Files",
  "COMMONPROGRAMFILES(X86)": "C:\\Program Files (x86)\\Common Files",
  "COMMONPROGRAMW6432": "C:\\Program Files\\Common Files",
  "COMPUTERNAME": "KUNALDELL",
  "COMSPEC": "C:\\Windows\\system32\\cmd.exe",
  "DRIVERDATA": "C:\\Windows\\System32\\Drivers\\DriverData",
  "EFC_5864_1592913036": "1",
  "HOMEDRIVE": "C:",
  "HOMEPATH": "\\Users\\kunal",
  "LOCALAPPDATA": "C:\\Users\\kunal\\AppData\\Local",
  "LOGONSERVER": "\\\\KUNALDELL",
  "LOG_LEVEL": "DEBUG",
  "NUMBER_OF_PROCESSORS": "22",
  "ONEDRIVE": "C:\\Users\\kunal\\OneDrive",
  "ONEDRIVECONSUMER": "C:\\Users\\kunal\\OneDrive",
  "ORIGINAL_XDG_CURRENT_DESKTOP": "undefined",
  "OS": "Windows_NT",
  "PATH": "C:\\Program Files\\Python312\\Scripts\\;C:\\Program Files\\Python312\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files\\Git\\cmd;c:\\Users\\kunal\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Program Files\\nodejs\\;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\kunal\\AppData\\Local\\Programs\\Windsurf\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WinGet\\Links;C:\\Program Files\\nodejs;C:\\Users\\kunal\\AppData\\Roaming\\npm;C:\\Program Files\\Git\\bin;C:\\Users\\kunal\\.deno\\bin;c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\scripts\\noConfigScripts",
  "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL",
  "POSTGRESQL": "C:\\Program Files\\PostgreSQL\\17\\bin\\bin",
  "PROCESSOR_ARCHITECTURE": "AMD64",
  "PROCESSOR_IDENTIFIER": "Intel64 Family 6 Model 170 Stepping 4, GenuineIntel",
  "PROCESSOR_LEVEL": "6",
  "PROCESSOR_REVISION": "aa04",
  "PROGRAMDATA": "C:\\ProgramData",
  "PROGRAMFILES": "C:\\Program Files",
  "PROGRAMFILES(X86)": "C:\\Program Files (x86)",
  "PROGRAMW6432": "C:\\Program Files",
  "PSMODULEPATH": "C:\\Users\\kunal\\OneDrive\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules",
  "PUBLIC": "C:\\Users\\Public",
  "PYTHONUNBUFFERED": "1",
  "SESSIONNAME": "Console",
  "SYSTEMDRIVE": "C:",
  "SYSTEMROOT": "C:\\Windows",
  "TEMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "TMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "USERDOMAIN": "KUNALDELL",
  "USERDOMAIN_ROAMINGPROFILE": "KUNALDELL",
  "USERNAME": "kunal",
  "USERPROFILE": "C:\\Users\\kunal",
  "WINDIR": "C:\\Windows",
  "ZES_ENABLE_SYSMAN": "1",
  "PAGER": "cat",
  "TERM_PROGRAM": "vscode",
  "TERM_PROGRAM_VERSION": "1.99.3",
  "LANG": "en_US.UTF-8",
  "COLORTERM": "truecolor",
  "VSCODE_GIT_IPC_HANDLE": "\\\\.\\pipe\\vscode-git-fccd44132c-sock",
  "PYDEVD_DISABLE_FILE_VALIDATION": "1",
  "VSCODE_DEBUGPY_ADAPTER_ENDPOINTS": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\.noConfigDebugAdapterEndpoints\\endpoint-875e116b470e769c.txt",
  "BUNDLED_DEBUGPY_PATH": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\libs\\debugpy",
  "VSCODE_INJECTION": "1",
  "PROJECT_NAME": "IntelliTest AI Automation Platform",
  "ACCESS_TOKEN_EXPIRE_MINUTES": "11520",
  "SERVER_NAME": "localhost",
  "SERVER_HOST": "http://localhost:8001",
  "DATABASE_URL": "postgresql://postgres.lflecyuvttemfoyixngi:Ayeshaayesha121@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres",
  "SMTP_TLS": "true",
  "SMTP_PORT": "587",
  "SMTP_HOST": "smtp.gmail.com",
  "SMTP_USER": "your-email@gmail.com",
  "EMAILS_FROM_EMAIL": "your-email@gmail.com",
  "EMAILS_FROM_NAME": "IntelliTest Platform",
  "OPENAI_API_KEY": "your-openai-api-key-here",
  "AWS_ACCESS_KEY_ID": "your-aws-access-key",
  "AWS_DEFAULT_REGION": "us-east-1",
  "UPLOAD_DIR": "uploads",
  "MAX_UPLOAD_SIZE": "10485760",
  "ALLOWED_FILE_TYPES": "jpg,jpeg,png,gif,pdf,txt,csv,json",
  "TESTING": "false"
}
2025-08-02 21:21:10 - app.api.v1.routes.auth - DEBUG - auth.py:45 - Database URL: postgresql://postgres.lflecyuvttemfoyixngi:*****@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres
2025-08-02 21:21:11 - app.main - INFO - main.py:1372 - Initializing API routers...
2025-08-02 21:21:11 - app.main - INFO - main.py:1384 - API routers initialized successfully
2025-08-02 21:21:11 - app.main - INFO - main.py:246 - Starting database initialization...
2025-08-02 21:21:11 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x0000024AD1D1FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 21:21:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:21:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:21:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:21:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:21:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:21:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:21:12 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x0000024AD1D1FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 21:21:12 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x0000024AD1D1FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 21:21:12 - app.main - INFO - main.py:276 - Disabling foreign key constraints...
2025-08-02 21:21:12 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:21:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 21:21:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00170s] {}
2025-08-02 21:21:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 21:21:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00127s] {}
2025-08-02 21:21:12 - app.main - INFO - main.py:291 - Dropping existing tables...
2025-08-02 21:21:12 - app.main - INFO - main.py:294 - Dropping table: activity_logs
2025-08-02 21:21:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 21:21:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00072s] {}
2025-08-02 21:21:12 - app.main - INFO - main.py:296 - Dropped table: activity_logs
2025-08-02 21:21:12 - app.main - INFO - main.py:294 - Dropping table: attachments
2025-08-02 21:21:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 21:21:12 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00083s] {}
2025-08-02 21:21:13 - app.main - INFO - main.py:296 - Dropped table: attachments
2025-08-02 21:21:13 - app.main - INFO - main.py:294 - Dropping table: comments
2025-08-02 21:21:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 21:21:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00049s] {}
2025-08-02 21:21:13 - app.main - INFO - main.py:296 - Dropped table: comments
2025-08-02 21:21:13 - app.main - INFO - main.py:294 - Dropping table: environments
2025-08-02 21:21:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 21:21:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00064s] {}
2025-08-02 21:21:13 - app.main - INFO - main.py:296 - Dropped table: environments
2025-08-02 21:21:13 - app.main - INFO - main.py:294 - Dropping table: projects
2025-08-02 21:21:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 21:21:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00087s] {}
2025-08-02 21:21:13 - app.main - INFO - main.py:296 - Dropped table: projects
2025-08-02 21:21:13 - app.main - INFO - main.py:294 - Dropping table: team_members
2025-08-02 21:21:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 21:21:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00135s] {}
2025-08-02 21:21:13 - app.main - INFO - main.py:296 - Dropped table: team_members
2025-08-02 21:21:13 - app.main - INFO - main.py:294 - Dropping table: teams
2025-08-02 21:21:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 21:21:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00134s] {}
2025-08-02 21:21:13 - app.main - INFO - main.py:296 - Dropped table: teams
2025-08-02 21:21:13 - app.main - INFO - main.py:294 - Dropping table: test_cases
2025-08-02 21:21:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 21:21:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00094s] {}
2025-08-02 21:21:13 - app.main - INFO - main.py:296 - Dropped table: test_cases
2025-08-02 21:21:13 - app.main - INFO - main.py:294 - Dropping table: test_executions
2025-08-02 21:21:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 21:21:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00098s] {}
2025-08-02 21:21:13 - app.main - INFO - main.py:296 - Dropped table: test_executions
2025-08-02 21:21:13 - app.main - INFO - main.py:294 - Dropping table: test_plan_test_cases
2025-08-02 21:21:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 21:21:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00110s] {}
2025-08-02 21:21:13 - app.main - INFO - main.py:296 - Dropped table: test_plan_test_cases
2025-08-02 21:21:13 - app.main - INFO - main.py:294 - Dropping table: test_plans
2025-08-02 21:21:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 21:21:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00089s] {}
2025-08-02 21:21:13 - app.main - INFO - main.py:296 - Dropped table: test_plans
2025-08-02 21:21:13 - app.main - INFO - main.py:294 - Dropping table: test_steps
2025-08-02 21:21:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 21:21:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00065s] {}
2025-08-02 21:21:13 - app.main - INFO - main.py:296 - Dropped table: test_steps
2025-08-02 21:21:13 - app.main - INFO - main.py:294 - Dropping table: users
2025-08-02 21:21:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 21:21:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00148s] {}
2025-08-02 21:21:13 - app.main - INFO - main.py:296 - Dropped table: users
2025-08-02 21:21:13 - app.main - INFO - main.py:302 - Creating database tables in order...
2025-08-02 21:21:13 - app.main - INFO - main.py:305 - Creating table: users
2025-08-02 21:21:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:21:13 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00111s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:21:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 21:21:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00440s] {}
2025-08-02 21:21:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 21:21:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00378s] {}
2025-08-02 21:21:14 - app.main - INFO - main.py:307 - Table created: users
2025-08-02 21:21:14 - app.main - INFO - main.py:305 - Creating table: teams
2025-08-02 21:21:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:21:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2507s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:21:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:21:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00370s] {}
2025-08-02 21:21:14 - app.main - INFO - main.py:307 - Table created: teams
2025-08-02 21:21:14 - app.main - INFO - main.py:305 - Creating table: projects
2025-08-02 21:21:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:21:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4186s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:21:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 21:21:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00160s] {}
2025-08-02 21:21:14 - app.main - INFO - main.py:307 - Table created: projects
2025-08-02 21:21:14 - app.main - INFO - main.py:305 - Creating table: environments
2025-08-02 21:21:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:21:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5848s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:21:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 21:21:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00208s] {}
2025-08-02 21:21:14 - app.main - INFO - main.py:307 - Table created: environments
2025-08-02 21:21:14 - app.main - INFO - main.py:305 - Creating table: test_cases
2025-08-02 21:21:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:21:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7535s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:21:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:21:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00195s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:21:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:21:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.08167s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 21:21:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:21:14 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1626s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:21:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 21:21:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00189s] {}
2025-08-02 21:21:15 - app.main - INFO - main.py:307 - Table created: test_cases
2025-08-02 21:21:15 - app.main - INFO - main.py:305 - Creating table: test_steps
2025-08-02 21:21:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:21:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.159s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:21:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 21:21:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00173s] {}
2025-08-02 21:21:15 - app.main - INFO - main.py:307 - Table created: test_steps
2025-08-02 21:21:15 - app.main - INFO - main.py:305 - Creating table: test_plans
2025-08-02 21:21:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:21:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.321s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:21:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:21:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.569s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:21:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:21:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00344s] {}
2025-08-02 21:21:15 - app.main - INFO - main.py:307 - Table created: test_plans
2025-08-02 21:21:15 - app.main - INFO - main.py:305 - Creating table: test_plan_test_cases
2025-08-02 21:21:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:21:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.573s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:21:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:21:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00212s] {}
2025-08-02 21:21:15 - app.main - INFO - main.py:307 - Table created: test_plan_test_cases
2025-08-02 21:21:15 - app.main - INFO - main.py:305 - Creating table: test_executions
2025-08-02 21:21:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:21:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.739s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:21:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:21:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.9871s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 21:21:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 21:21:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00168s] {}
2025-08-02 21:21:15 - app.main - INFO - main.py:307 - Table created: test_executions
2025-08-02 21:21:15 - app.main - INFO - main.py:305 - Creating table: comments
2025-08-02 21:21:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:21:15 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.984s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:21:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:21:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.231s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:21:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 21:21:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00148s] {}
2025-08-02 21:21:16 - app.main - INFO - main.py:307 - Table created: comments
2025-08-02 21:21:16 - app.main - INFO - main.py:305 - Creating table: team_members
2025-08-02 21:21:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:21:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.228s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:21:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:21:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00167s] {}
2025-08-02 21:21:16 - app.main - INFO - main.py:307 - Table created: team_members
2025-08-02 21:21:16 - app.main - INFO - main.py:305 - Creating table: attachments
2025-08-02 21:21:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:21:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.393s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:21:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 21:21:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00202s] {}
2025-08-02 21:21:16 - app.main - INFO - main.py:307 - Table created: attachments
2025-08-02 21:21:16 - app.main - INFO - main.py:305 - Creating table: activity_logs
2025-08-02 21:21:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:21:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.557s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:21:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:21:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00177s] {}
2025-08-02 21:21:16 - app.main - INFO - main.py:307 - Table created: activity_logs
2025-08-02 21:21:16 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:21:16 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x0000024AD1D1FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 21:21:16 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x0000024AD1D1FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 21:21:16 - app.main - INFO - main.py:312 - All database tables created successfully
2025-08-02 21:32:24 - app.auth.security - INFO - security.py:424 - [AUTH_SERVICE] Starting authentication for email: test@example.com
2025-08-02 21:32:25 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:898 - Created new connection <AdaptedConnection <asyncpg.connection.Connection object at 0x0000011F5D5CD7C0>>
2025-08-02 21:32:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:32:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] ()
2025-08-02 21:32:25 - sqlalchemy.engine.Engine - INFO - base.py:2345 - ROLLBACK
2025-08-02 21:32:26 - app.auth.security - ERROR - security.py:504 - [AUTH_SERVICE] Database error during authentication: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.DuplicatePreparedStatementError'>: prepared statement "__asyncpg_stmt_3__" already exists
HINT:  
NOTE: pgbouncer with pool_mode set to "transaction" or
"statement" does not support prepared statements properly.
You have two options:

* if you are using pgbouncer for connection pooling to a
  single server, switch to the connection pool functionality
  provided by asyncpg, it is a much better option for this
  purpose;

* if you have no option of avoiding the use of pgbouncer,
  then you can set statement_cache_size to 0 when creating
  the asyncpg connection object.

[SQL: select pg_catalog.version()]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-08-02 21:32:26 - app.auth.security - ERROR - security.py:505 - [AUTH_SERVICE] Error type: ProgrammingError
2025-08-02 21:32:26 - app.main - WARNING - main.py:592 - Login failed for test@example.com: Authentication service unavailable
2025-08-02 21:32:26 - app.db.session - ERROR - session.py:101 - Database session error: 500: Authentication service unavailable
2025-08-02 21:32:26 - app.main - WARNING - main.py:382 - HTTP Exception: 500 - Authentication service unavailable - Path: /api/auth/login
2025-08-02 21:35:24 - root - INFO - main.py:88 - ================================================================================
2025-08-02 21:35:24 - root - INFO - main.py:89 - Application starting with enhanced logging (level: INFO)
2025-08-02 21:35:24 - root - INFO - main.py:90 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 21:35:24 - root - INFO - main.py:91 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 21:35:24 - root - INFO - main.py:92 - ================================================================================
2025-08-02 21:35:25 - app.main - INFO - main.py:1372 - Initializing API routers...
2025-08-02 21:35:25 - app.main - INFO - main.py:1384 - API routers initialized successfully
2025-08-02 21:35:25 - app.main - INFO - main.py:246 - Starting database initialization...
2025-08-02 21:35:26 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x000001F35500FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 21:35:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:35:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:35:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:35:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:35:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:35:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:35:27 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x000001F35500FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 21:35:27 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x000001F35500FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 21:35:27 - app.main - INFO - main.py:276 - Disabling foreign key constraints...
2025-08-02 21:35:27 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:35:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 21:35:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00152s] {}
2025-08-02 21:35:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 21:35:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00132s] {}
2025-08-02 21:35:27 - app.main - INFO - main.py:291 - Dropping existing tables...
2025-08-02 21:35:27 - app.main - INFO - main.py:294 - Dropping table: activity_logs
2025-08-02 21:35:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 21:35:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00080s] {}
2025-08-02 21:35:27 - app.main - INFO - main.py:296 - Dropped table: activity_logs
2025-08-02 21:35:27 - app.main - INFO - main.py:294 - Dropping table: attachments
2025-08-02 21:35:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 21:35:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00060s] {}
2025-08-02 21:35:27 - app.main - INFO - main.py:296 - Dropped table: attachments
2025-08-02 21:35:27 - app.main - INFO - main.py:294 - Dropping table: comments
2025-08-02 21:35:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 21:35:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00080s] {}
2025-08-02 21:35:27 - app.main - INFO - main.py:296 - Dropped table: comments
2025-08-02 21:35:27 - app.main - INFO - main.py:294 - Dropping table: environments
2025-08-02 21:35:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 21:35:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00086s] {}
2025-08-02 21:35:27 - app.main - INFO - main.py:296 - Dropped table: environments
2025-08-02 21:35:27 - app.main - INFO - main.py:294 - Dropping table: projects
2025-08-02 21:35:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 21:35:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00083s] {}
2025-08-02 21:35:27 - app.main - INFO - main.py:296 - Dropped table: projects
2025-08-02 21:35:27 - app.main - INFO - main.py:294 - Dropping table: team_members
2025-08-02 21:35:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 21:35:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00098s] {}
2025-08-02 21:35:27 - app.main - INFO - main.py:296 - Dropped table: team_members
2025-08-02 21:35:27 - app.main - INFO - main.py:294 - Dropping table: teams
2025-08-02 21:35:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 21:35:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00085s] {}
2025-08-02 21:35:28 - app.main - INFO - main.py:296 - Dropped table: teams
2025-08-02 21:35:28 - app.main - INFO - main.py:294 - Dropping table: test_cases
2025-08-02 21:35:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 21:35:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00128s] {}
2025-08-02 21:35:28 - app.main - INFO - main.py:296 - Dropped table: test_cases
2025-08-02 21:35:28 - app.main - INFO - main.py:294 - Dropping table: test_executions
2025-08-02 21:35:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 21:35:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00089s] {}
2025-08-02 21:35:28 - app.main - INFO - main.py:296 - Dropped table: test_executions
2025-08-02 21:35:28 - app.main - INFO - main.py:294 - Dropping table: test_plan_test_cases
2025-08-02 21:35:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 21:35:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00073s] {}
2025-08-02 21:35:28 - app.main - INFO - main.py:296 - Dropped table: test_plan_test_cases
2025-08-02 21:35:28 - app.main - INFO - main.py:294 - Dropping table: test_plans
2025-08-02 21:35:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 21:35:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00089s] {}
2025-08-02 21:35:28 - app.main - INFO - main.py:296 - Dropped table: test_plans
2025-08-02 21:35:28 - app.main - INFO - main.py:294 - Dropping table: test_steps
2025-08-02 21:35:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 21:35:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00051s] {}
2025-08-02 21:35:28 - app.main - INFO - main.py:296 - Dropped table: test_steps
2025-08-02 21:35:28 - app.main - INFO - main.py:294 - Dropping table: users
2025-08-02 21:35:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 21:35:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00086s] {}
2025-08-02 21:35:28 - app.main - INFO - main.py:296 - Dropped table: users
2025-08-02 21:35:28 - app.main - INFO - main.py:302 - Creating database tables in order...
2025-08-02 21:35:28 - app.main - INFO - main.py:305 - Creating table: users
2025-08-02 21:35:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:35:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00100s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:35:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 21:35:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00150s] {}
2025-08-02 21:35:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 21:35:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00121s] {}
2025-08-02 21:35:28 - app.main - INFO - main.py:307 - Table created: users
2025-08-02 21:35:28 - app.main - INFO - main.py:305 - Creating table: teams
2025-08-02 21:35:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:35:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2692s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:35:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:35:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00125s] {}
2025-08-02 21:35:29 - app.main - INFO - main.py:307 - Table created: teams
2025-08-02 21:35:29 - app.main - INFO - main.py:305 - Creating table: projects
2025-08-02 21:35:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:35:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4498s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:35:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 21:35:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00176s] {}
2025-08-02 21:35:29 - app.main - INFO - main.py:307 - Table created: projects
2025-08-02 21:35:29 - app.main - INFO - main.py:305 - Creating table: environments
2025-08-02 21:35:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:35:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.638s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:35:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 21:35:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00113s] {}
2025-08-02 21:35:29 - app.main - INFO - main.py:307 - Table created: environments
2025-08-02 21:35:29 - app.main - INFO - main.py:305 - Creating table: test_cases
2025-08-02 21:35:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:35:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.8157s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:35:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:35:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00134s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:35:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:35:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.08947s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 21:35:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:35:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1769s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:35:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 21:35:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00223s] {}
2025-08-02 21:35:29 - app.main - INFO - main.py:307 - Table created: test_cases
2025-08-02 21:35:29 - app.main - INFO - main.py:305 - Creating table: test_steps
2025-08-02 21:35:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:35:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.262s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:35:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 21:35:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00112s] {}
2025-08-02 21:35:30 - app.main - INFO - main.py:307 - Table created: test_steps
2025-08-02 21:35:30 - app.main - INFO - main.py:305 - Creating table: test_plans
2025-08-02 21:35:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:35:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.44s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:35:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:35:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6265s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:35:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:35:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00178s] {}
2025-08-02 21:35:30 - app.main - INFO - main.py:307 - Table created: test_plans
2025-08-02 21:35:30 - app.main - INFO - main.py:305 - Creating table: test_plan_test_cases
2025-08-02 21:35:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:35:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.715s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:35:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:35:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00139s] {}
2025-08-02 21:35:30 - app.main - INFO - main.py:307 - Table created: test_plan_test_cases
2025-08-02 21:35:30 - app.main - INFO - main.py:305 - Creating table: test_executions
2025-08-02 21:35:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:35:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.897s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:35:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:35:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.082s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 21:35:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 21:35:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00166s] {}
2025-08-02 21:35:30 - app.main - INFO - main.py:307 - Table created: test_executions
2025-08-02 21:35:30 - app.main - INFO - main.py:305 - Creating table: comments
2025-08-02 21:35:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:35:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.167s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:35:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:35:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.353s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:35:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 21:35:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00095s] {}
2025-08-02 21:35:31 - app.main - INFO - main.py:307 - Table created: comments
2025-08-02 21:35:31 - app.main - INFO - main.py:305 - Creating table: team_members
2025-08-02 21:35:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:35:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.438s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:35:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:35:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00098s] {}
2025-08-02 21:35:31 - app.main - INFO - main.py:307 - Table created: team_members
2025-08-02 21:35:31 - app.main - INFO - main.py:305 - Creating table: attachments
2025-08-02 21:35:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:35:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.624s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:35:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 21:35:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00193s] {}
2025-08-02 21:35:31 - app.main - INFO - main.py:307 - Table created: attachments
2025-08-02 21:35:31 - app.main - INFO - main.py:305 - Creating table: activity_logs
2025-08-02 21:35:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:35:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.817s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:35:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:35:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00163s] {}
2025-08-02 21:35:31 - app.main - INFO - main.py:307 - Table created: activity_logs
2025-08-02 21:35:31 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:35:31 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x000001F35500FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 21:35:31 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x000001F35500FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 21:35:31 - app.main - INFO - main.py:312 - All database tables created successfully
2025-08-02 21:35:57 - app.auth.security - INFO - security.py:424 - [AUTH_SERVICE] Starting authentication for email: test@example.com
2025-08-02 21:35:57 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:898 - Created new connection <AdaptedConnection <asyncpg.connection.Connection object at 0x0000011F5D5CE300>>
2025-08-02 21:35:58 - app.auth.security - ERROR - security.py:512 - [AUTH_SERVICE] Unexpected error during authentication: prepared statement "__asyncpg_stmt_4__" already exists
HINT:  
NOTE: pgbouncer with pool_mode set to "transaction" or
"statement" does not support prepared statements properly.
You have two options:

* if you are using pgbouncer for connection pooling to a
  single server, switch to the connection pool functionality
  provided by asyncpg, it is a much better option for this
  purpose;

* if you have no option of avoiding the use of pgbouncer,
  then you can set statement_cache_size to 0 when creating
  the asyncpg connection object.

2025-08-02 21:35:58 - app.auth.security - ERROR - security.py:513 - [AUTH_SERVICE] Error type: DuplicatePreparedStatementError
2025-08-02 21:35:58 - app.auth.security - ERROR - security.py:514 - [AUTH_SERVICE] Traceback: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 457, in authenticate_user
    result = await self.db.execute(
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\ext\asyncio\session.py", line 463, in execute
    result = await greenlet_spawn(
             ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 201, in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 2365, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 2241, in _execute_internal
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 2110, in _connection_for_bind
    return trans._connection_for_bind(engine, execution_options)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<string>", line 2, in _connection_for_bind
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 1189, in _connection_for_bind
    conn = bind.connect()
           ^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 3273, in connect
    return self._connection_cls(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
                             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 3297, in raw_connection
    return self.pool.connect()
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 449, in connect
    return _ConnectionFairy._checkout(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 1264, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 713, in checkout
    rec = pool._do_get()
          ^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\impl.py", line 179, in _do_get
    with util.safe_reraise():
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\impl.py", line 177, in _do_get
    return self._create_connection()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 390, in _create_connection
    return _ConnectionRecord(self)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 675, in __init__
    self.__connect()
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 915, in __connect
    )._exec_w_sync_on_first_run(self.dbapi_connection, self)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\event\attr.py", line 483, in _exec_w_sync_on_first_run
    self(*args, **kw)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\event\attr.py", line 497, in __call__
    fn(*args, **kw)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\create.py", line 724, in on_connect
    do_on_connect(dbapi_connection)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 1273, in connect
    conn.await_(self.setup_asyncpg_json_codec(conn))
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 1199, in setup_asyncpg_json_codec
    await asyncpg_connection.set_type_codec(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\asyncpg\connection.py", line 1376, in set_type_codec
    typeinfo = await self._introspect_type(typename, schema)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\asyncpg\connection.py", line 542, in _introspect_type
    rows = await self._execute(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\asyncpg\connection.py", line 1864, in _execute
    result, _ = await self.__execute(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\asyncpg\connection.py", line 1961, in __execute
    result, stmt = await self._do_execute(
                   ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\asyncpg\connection.py", line 2004, in _do_execute
    stmt = await self._get_statement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\asyncpg\connection.py", line 432, in _get_statement
    statement = await self._protocol.prepare(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg\\protocol\\protocol.pyx", line 165, in prepare
asyncpg.exceptions.DuplicatePreparedStatementError: prepared statement "__asyncpg_stmt_4__" already exists
HINT:  
NOTE: pgbouncer with pool_mode set to "transaction" or
"statement" does not support prepared statements properly.
You have two options:

* if you are using pgbouncer for connection pooling to a
  single server, switch to the connection pool functionality
  provided by asyncpg, it is a much better option for this
  purpose;

* if you have no option of avoiding the use of pgbouncer,
  then you can set statement_cache_size to 0 when creating
  the asyncpg connection object.


2025-08-02 21:35:58 - app.main - WARNING - main.py:592 - Login failed for test@example.com: Authentication failed due to an unexpected error
2025-08-02 21:35:58 - app.db.session - ERROR - session.py:101 - Database session error: 500: Authentication failed due to an unexpected error
2025-08-02 21:35:58 - app.main - WARNING - main.py:382 - HTTP Exception: 500 - Authentication failed due to an unexpected error - Path: /api/auth/login
2025-08-02 21:38:18 - app.main - INFO - main.py:320 - Application shutdown
2025-08-02 21:38:20 - app.main - INFO - main.py:320 - Application shutdown
2025-08-02 21:38:20 - root - INFO - main.py:88 - ================================================================================
2025-08-02 21:38:20 - root - INFO - main.py:89 - Application starting with enhanced logging (level: INFO)
2025-08-02 21:38:20 - root - INFO - main.py:90 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 21:38:20 - root - INFO - main.py:91 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 21:38:20 - root - INFO - main.py:92 - ================================================================================
2025-08-02 21:38:22 - app.main - INFO - main.py:1398 - Initializing API routers...
2025-08-02 21:38:22 - app.main - INFO - main.py:1410 - API routers initialized successfully
2025-08-02 21:38:22 - app.main - INFO - main.py:246 - Starting database initialization...
2025-08-02 21:38:22 - root - INFO - main.py:88 - ================================================================================
2025-08-02 21:38:22 - root - INFO - main.py:89 - Application starting with enhanced logging (level: INFO)
2025-08-02 21:38:22 - root - INFO - main.py:90 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 21:38:22 - root - INFO - main.py:91 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 21:38:22 - root - INFO - main.py:92 - ================================================================================
2025-08-02 21:38:22 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x0000027CFB367450; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 21:38:22 - app.main - INFO - main.py:320 - Application shutdown
2025-08-02 21:38:22 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:38:22 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:38:22 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:38:22 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:38:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:38:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:38:23 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x0000027CFB367450; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 21:38:23 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x0000027CFB367450; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 21:38:23 - app.main - INFO - main.py:276 - Disabling foreign key constraints...
2025-08-02 21:38:23 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:38:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 21:38:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00176s] {}
2025-08-02 21:38:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 21:38:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00101s] {}
2025-08-02 21:38:23 - app.main - INFO - main.py:291 - Dropping existing tables...
2025-08-02 21:38:23 - app.main - INFO - main.py:294 - Dropping table: activity_logs
2025-08-02 21:38:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 21:38:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00067s] {}
2025-08-02 21:38:23 - app.main - INFO - main.py:296 - Dropped table: activity_logs
2025-08-02 21:38:23 - app.main - INFO - main.py:294 - Dropping table: attachments
2025-08-02 21:38:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 21:38:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00072s] {}
2025-08-02 21:38:23 - app.main - INFO - main.py:1398 - Initializing API routers...
2025-08-02 21:38:23 - app.main - INFO - main.py:1410 - API routers initialized successfully
2025-08-02 21:38:23 - app.main - INFO - main.py:246 - Starting database initialization...
2025-08-02 21:38:23 - app.main - INFO - main.py:296 - Dropped table: attachments
2025-08-02 21:38:23 - app.main - INFO - main.py:294 - Dropping table: comments
2025-08-02 21:38:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 21:38:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00080s] {}
2025-08-02 21:38:23 - app.main - INFO - main.py:296 - Dropped table: comments
2025-08-02 21:38:23 - app.main - INFO - main.py:294 - Dropping table: environments
2025-08-02 21:38:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 21:38:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00214s] {}
2025-08-02 21:38:23 - app.main - INFO - main.py:296 - Dropped table: environments
2025-08-02 21:38:23 - app.main - INFO - main.py:294 - Dropping table: projects
2025-08-02 21:38:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 21:38:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00057s] {}
2025-08-02 21:38:23 - app.main - INFO - main.py:296 - Dropped table: projects
2025-08-02 21:38:23 - app.main - INFO - main.py:294 - Dropping table: team_members
2025-08-02 21:38:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 21:38:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00102s] {}
2025-08-02 21:38:24 - app.main - INFO - main.py:296 - Dropped table: team_members
2025-08-02 21:38:24 - app.main - INFO - main.py:294 - Dropping table: teams
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00075s] {}
2025-08-02 21:38:24 - app.main - INFO - main.py:296 - Dropped table: teams
2025-08-02 21:38:24 - app.main - INFO - main.py:294 - Dropping table: test_cases
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00077s] {}
2025-08-02 21:38:24 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x0000025C5A68FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 21:38:24 - app.main - INFO - main.py:296 - Dropped table: test_cases
2025-08-02 21:38:24 - app.main - INFO - main.py:294 - Dropping table: test_executions
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00066s] {}
2025-08-02 21:38:24 - app.main - INFO - main.py:296 - Dropped table: test_executions
2025-08-02 21:38:24 - app.main - INFO - main.py:294 - Dropping table: test_plan_test_cases
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00072s] {}
2025-08-02 21:38:24 - app.main - INFO - main.py:296 - Dropped table: test_plan_test_cases
2025-08-02 21:38:24 - app.main - INFO - main.py:294 - Dropping table: test_plans
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00091s] {}
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:38:24 - app.main - INFO - main.py:296 - Dropped table: test_plans
2025-08-02 21:38:24 - app.main - INFO - main.py:294 - Dropping table: test_steps
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00055s] {}
2025-08-02 21:38:24 - app.main - INFO - main.py:296 - Dropped table: test_steps
2025-08-02 21:38:24 - app.main - INFO - main.py:294 - Dropping table: users
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00071s] {}
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:38:24 - root - INFO - main.py:88 - ================================================================================
2025-08-02 21:38:24 - root - INFO - main.py:89 - Application starting with enhanced logging (level: DEBUG)
2025-08-02 21:38:24 - root - INFO - main.py:90 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 21:38:24 - root - INFO - main.py:91 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 21:38:24 - app.main - INFO - main.py:296 - Dropped table: users
2025-08-02 21:38:24 - root - INFO - main.py:92 - ================================================================================
2025-08-02 21:38:24 - app.main - INFO - main.py:302 - Creating database tables in order...
2025-08-02 21:38:24 - app.main - INFO - main.py:305 - Creating table: users
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00088s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00153s] {}
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00201s] {}
2025-08-02 21:38:24 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-08-02 21:38:24 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-08-02 21:38:24 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-08-02 21:38:24 - passlib.registry - DEBUG - registry.py:296 - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
2025-08-02 21:38:24 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x0000025C5A68FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 21:38:24 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x0000025C5A68FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 21:38:24 - app.main - INFO - main.py:307 - Table created: users
2025-08-02 21:38:24 - app.main - INFO - main.py:305 - Creating table: teams
2025-08-02 21:38:24 - app.main - INFO - main.py:276 - Disabling foreign key constraints...
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.3139s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00150s] {}
2025-08-02 21:38:24 - app.api.v1.routes.auth - DEBUG - auth.py:34 - Environment variables: {
  "ALLUSERSPROFILE": "C:\\ProgramData",
  "APPDATA": "C:\\Users\\kunal\\AppData\\Roaming",
  "C:\\USERS\\KUNAL\\DOWNLOADS\\EMERGENTINTELLITEST-MAIN": "C:\\Program Files\\nodejs\\",
  "CHROME_CRASHPAD_PIPE_NAME": "\\\\.\\pipe\\crashpad_11300_YGFLEAWXLMRVRBOK",
  "COMMONPROGRAMFILES": "C:\\Program Files\\Common Files",
  "COMMONPROGRAMFILES(X86)": "C:\\Program Files (x86)\\Common Files",
  "COMMONPROGRAMW6432": "C:\\Program Files\\Common Files",
  "COMPUTERNAME": "KUNALDELL",
  "COMSPEC": "C:\\Windows\\system32\\cmd.exe",
  "DRIVERDATA": "C:\\Windows\\System32\\Drivers\\DriverData",
  "EFC_5864_1592913036": "1",
  "HOMEDRIVE": "C:",
  "HOMEPATH": "\\Users\\kunal",
  "LOCALAPPDATA": "C:\\Users\\kunal\\AppData\\Local",
  "LOGONSERVER": "\\\\KUNALDELL",
  "LOG_LEVEL": "DEBUG",
  "NUMBER_OF_PROCESSORS": "22",
  "ONEDRIVE": "C:\\Users\\kunal\\OneDrive",
  "ONEDRIVECONSUMER": "C:\\Users\\kunal\\OneDrive",
  "ORIGINAL_XDG_CURRENT_DESKTOP": "undefined",
  "OS": "Windows_NT",
  "PATH": "C:\\Program Files\\Python312\\Scripts\\;C:\\Program Files\\Python312\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files\\Git\\cmd;c:\\Users\\kunal\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Program Files\\nodejs\\;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\kunal\\AppData\\Local\\Programs\\Windsurf\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WinGet\\Links;C:\\Program Files\\nodejs;C:\\Users\\kunal\\AppData\\Roaming\\npm;C:\\Program Files\\Git\\bin;C:\\Users\\kunal\\.deno\\bin;c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\scripts\\noConfigScripts",
  "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL",
  "POSTGRESQL": "C:\\Program Files\\PostgreSQL\\17\\bin\\bin",
  "PROCESSOR_ARCHITECTURE": "AMD64",
  "PROCESSOR_IDENTIFIER": "Intel64 Family 6 Model 170 Stepping 4, GenuineIntel",
  "PROCESSOR_LEVEL": "6",
  "PROCESSOR_REVISION": "aa04",
  "PROGRAMDATA": "C:\\ProgramData",
  "PROGRAMFILES": "C:\\Program Files",
  "PROGRAMFILES(X86)": "C:\\Program Files (x86)",
  "PROGRAMW6432": "C:\\Program Files",
  "PSMODULEPATH": "C:\\Users\\kunal\\OneDrive\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules",
  "PUBLIC": "C:\\Users\\Public",
  "PYTHONUNBUFFERED": "1",
  "SESSIONNAME": "Console",
  "SYSTEMDRIVE": "C:",
  "SYSTEMROOT": "C:\\Windows",
  "TEMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "TMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "USERDOMAIN": "KUNALDELL",
  "USERDOMAIN_ROAMINGPROFILE": "KUNALDELL",
  "USERNAME": "kunal",
  "USERPROFILE": "C:\\Users\\kunal",
  "WINDIR": "C:\\Windows",
  "ZES_ENABLE_SYSMAN": "1",
  "PAGER": "cat",
  "TERM_PROGRAM": "vscode",
  "TERM_PROGRAM_VERSION": "1.99.3",
  "LANG": "en_US.UTF-8",
  "COLORTERM": "truecolor",
  "VSCODE_GIT_IPC_HANDLE": "\\\\.\\pipe\\vscode-git-fccd44132c-sock",
  "PYDEVD_DISABLE_FILE_VALIDATION": "1",
  "VSCODE_DEBUGPY_ADAPTER_ENDPOINTS": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\.noConfigDebugAdapterEndpoints\\endpoint-875e116b470e769c.txt",
  "BUNDLED_DEBUGPY_PATH": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\libs\\debugpy",
  "VSCODE_INJECTION": "1",
  "PROJECT_NAME": "IntelliTest AI Automation Platform",
  "ACCESS_TOKEN_EXPIRE_MINUTES": "11520",
  "SERVER_NAME": "localhost",
  "SERVER_HOST": "http://localhost:8001",
  "DATABASE_URL": "postgresql://postgres.lflecyuvttemfoyixngi:Ayeshaayesha121@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres",
  "SMTP_TLS": "true",
  "SMTP_PORT": "587",
  "SMTP_HOST": "smtp.gmail.com",
  "SMTP_USER": "your-email@gmail.com",
  "EMAILS_FROM_EMAIL": "your-email@gmail.com",
  "EMAILS_FROM_NAME": "IntelliTest Platform",
  "OPENAI_API_KEY": "your-openai-api-key-here",
  "AWS_ACCESS_KEY_ID": "your-aws-access-key",
  "AWS_DEFAULT_REGION": "us-east-1",
  "UPLOAD_DIR": "uploads",
  "MAX_UPLOAD_SIZE": "10485760",
  "ALLOWED_FILE_TYPES": "jpg,jpeg,png,gif,pdf,txt,csv,json",
  "TESTING": "false"
}
2025-08-02 21:38:24 - app.api.v1.routes.auth - DEBUG - auth.py:45 - Database URL: postgresql://postgres.lflecyuvttemfoyixngi:*****@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres
2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:38:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00125s] {}
2025-08-02 21:38:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 21:38:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00110s] {}
2025-08-02 21:38:25 - app.main - INFO - main.py:307 - Table created: teams
2025-08-02 21:38:25 - app.main - INFO - main.py:305 - Creating table: projects
2025-08-02 21:38:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4753s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:25 - app.main - INFO - main.py:291 - Dropping existing tables...
2025-08-02 21:38:25 - app.main - INFO - main.py:294 - Dropping table: activity_logs
2025-08-02 21:38:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 21:38:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00073s] {}
2025-08-02 21:38:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 21:38:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00104s] {}
2025-08-02 21:38:25 - app.main - INFO - main.py:307 - Table created: projects
2025-08-02 21:38:25 - app.main - INFO - main.py:305 - Creating table: environments
2025-08-02 21:38:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6369s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 21:38:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00111s] {}
2025-08-02 21:38:25 - app.main - INFO - main.py:307 - Table created: environments
2025-08-02 21:38:25 - app.main - INFO - main.py:305 - Creating table: test_cases
2025-08-02 21:38:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7988s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00114s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.08112s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1604s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 21:38:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00135s] {}
2025-08-02 21:38:25 - app.main - INFO - main.py:307 - Table created: test_cases
2025-08-02 21:38:25 - app.main - INFO - main.py:305 - Creating table: test_steps
2025-08-02 21:38:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.203s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:25 - app.main - INFO - main.py:1398 - Initializing API routers...
2025-08-02 21:38:25 - app.main - INFO - main.py:1410 - API routers initialized successfully
2025-08-02 21:38:25 - app.main - INFO - main.py:246 - Starting database initialization...
2025-08-02 21:38:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 21:38:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00080s] {}
2025-08-02 21:38:25 - app.main - INFO - main.py:307 - Table created: test_steps
2025-08-02 21:38:25 - app.main - INFO - main.py:305 - Creating table: test_plans
2025-08-02 21:38:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.364s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5648s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:38:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00133s] {}
2025-08-02 21:38:26 - app.main - INFO - main.py:307 - Table created: test_plans
2025-08-02 21:38:26 - app.main - INFO - main.py:305 - Creating table: test_plan_test_cases
2025-08-02 21:38:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.608s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:38:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00230s] {}
2025-08-02 21:38:26 - app.main - INFO - main.py:307 - Table created: test_plan_test_cases
2025-08-02 21:38:26 - app.main - INFO - main.py:305 - Creating table: test_executions
2025-08-02 21:38:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.772s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:26 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x0000027FCF4DFDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 21:38:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.9746s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 21:38:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00179s] {}
2025-08-02 21:38:26 - app.main - INFO - main.py:307 - Table created: test_executions
2025-08-02 21:38:26 - app.main - INFO - main.py:305 - Creating table: comments
2025-08-02 21:38:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.018s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:38:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:38:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.221s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 21:38:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00179s] {}
2025-08-02 21:38:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:38:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:38:26 - app.main - INFO - main.py:307 - Table created: comments
2025-08-02 21:38:26 - app.main - INFO - main.py:305 - Creating table: team_members
2025-08-02 21:38:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.267s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:38:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00200s] {}
2025-08-02 21:38:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:38:26 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:38:27 - app.main - INFO - main.py:307 - Table created: team_members
2025-08-02 21:38:27 - app.main - INFO - main.py:305 - Creating table: attachments
2025-08-02 21:38:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.43s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:27 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x0000027FCF4DFDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 21:38:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 21:38:27 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x0000027FCF4DFDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 21:38:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00119s] {}
2025-08-02 21:38:27 - app.main - INFO - main.py:276 - Disabling foreign key constraints...
2025-08-02 21:38:27 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:38:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 21:38:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00138s] {}
2025-08-02 21:38:27 - app.main - INFO - main.py:307 - Table created: attachments
2025-08-02 21:38:27 - app.main - INFO - main.py:305 - Creating table: activity_logs
2025-08-02 21:38:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.597s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 21:38:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:38:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00212s] {}
2025-08-02 21:38:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00189s] {}
2025-08-02 21:38:27 - app.main - INFO - main.py:307 - Table created: activity_logs
2025-08-02 21:38:27 - app.main - INFO - main.py:291 - Dropping existing tables...
2025-08-02 21:38:27 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:38:27 - app.main - INFO - main.py:294 - Dropping table: activity_logs
2025-08-02 21:38:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 21:38:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00103s] {}
2025-08-02 21:38:27 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x0000027CFB367450; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 21:38:27 - app.main - INFO - main.py:296 - Dropped table: activity_logs
2025-08-02 21:38:27 - app.main - INFO - main.py:294 - Dropping table: attachments
2025-08-02 21:38:27 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x0000027CFB367450; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 21:38:27 - app.main - INFO - main.py:312 - All database tables created successfully
2025-08-02 21:38:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 21:38:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00116s] {}
2025-08-02 21:38:27 - app.main - INFO - main.py:296 - Dropped table: attachments
2025-08-02 21:38:27 - app.main - INFO - main.py:294 - Dropping table: comments
2025-08-02 21:38:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 21:38:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00204s] {}
2025-08-02 21:38:27 - app.main - INFO - main.py:296 - Dropped table: comments
2025-08-02 21:38:27 - app.main - INFO - main.py:294 - Dropping table: environments
2025-08-02 21:38:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 21:38:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00064s] {}
2025-08-02 21:38:27 - app.main - INFO - main.py:296 - Dropped table: environments
2025-08-02 21:38:27 - app.main - INFO - main.py:294 - Dropping table: projects
2025-08-02 21:38:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 21:38:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00063s] {}
2025-08-02 21:38:27 - app.main - INFO - main.py:296 - Dropped table: projects
2025-08-02 21:38:27 - app.main - INFO - main.py:294 - Dropping table: team_members
2025-08-02 21:38:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 21:38:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00114s] {}
2025-08-02 21:38:27 - app.main - INFO - main.py:296 - Dropped table: team_members
2025-08-02 21:38:27 - app.main - INFO - main.py:294 - Dropping table: teams
2025-08-02 21:38:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 21:38:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00108s] {}
2025-08-02 21:38:27 - app.main - INFO - main.py:296 - Dropped table: teams
2025-08-02 21:38:27 - app.main - INFO - main.py:294 - Dropping table: test_cases
2025-08-02 21:38:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 21:38:27 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00108s] {}
2025-08-02 21:38:28 - app.main - INFO - main.py:296 - Dropped table: test_cases
2025-08-02 21:38:28 - app.main - INFO - main.py:294 - Dropping table: test_executions
2025-08-02 21:38:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 21:38:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00065s] {}
2025-08-02 21:38:28 - app.main - INFO - main.py:296 - Dropped table: test_executions
2025-08-02 21:38:28 - app.main - INFO - main.py:294 - Dropping table: test_plan_test_cases
2025-08-02 21:38:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 21:38:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00082s] {}
2025-08-02 21:38:28 - app.main - INFO - main.py:320 - Application shutdown
2025-08-02 21:38:28 - app.main - INFO - main.py:296 - Dropped table: test_plan_test_cases
2025-08-02 21:38:28 - app.main - INFO - main.py:294 - Dropping table: test_plans
2025-08-02 21:38:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 21:38:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00121s] {}
2025-08-02 21:38:28 - app.main - INFO - main.py:296 - Dropped table: test_plans
2025-08-02 21:38:28 - app.main - INFO - main.py:294 - Dropping table: test_steps
2025-08-02 21:38:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 21:38:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00094s] {}
2025-08-02 21:38:28 - app.main - INFO - main.py:296 - Dropped table: test_steps
2025-08-02 21:38:28 - app.main - INFO - main.py:294 - Dropping table: users
2025-08-02 21:38:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 21:38:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00114s] {}
2025-08-02 21:38:28 - app.main - INFO - main.py:296 - Dropped table: users
2025-08-02 21:38:28 - app.main - INFO - main.py:302 - Creating database tables in order...
2025-08-02 21:38:28 - app.main - INFO - main.py:305 - Creating table: users
2025-08-02 21:38:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00151s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 21:38:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00238s] {}
2025-08-02 21:38:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 21:38:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00107s] {}
2025-08-02 21:38:28 - app.main - INFO - main.py:307 - Table created: users
2025-08-02 21:38:28 - app.main - INFO - main.py:305 - Creating table: teams
2025-08-02 21:38:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2411s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:38:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.02245s] {}
2025-08-02 21:38:28 - app.main - INFO - main.py:307 - Table created: teams
2025-08-02 21:38:28 - app.main - INFO - main.py:305 - Creating table: projects
2025-08-02 21:38:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4226s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 21:38:28 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00136s] {}
2025-08-02 21:38:29 - app.main - INFO - main.py:307 - Table created: projects
2025-08-02 21:38:29 - app.main - INFO - main.py:305 - Creating table: environments
2025-08-02 21:38:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5807s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 21:38:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00130s] {}
2025-08-02 21:38:29 - app.main - INFO - main.py:307 - Table created: environments
2025-08-02 21:38:29 - app.main - INFO - main.py:305 - Creating table: test_cases
2025-08-02 21:38:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7389s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00160s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.0795s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1572s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 21:38:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00158s] {}
2025-08-02 21:38:29 - app.main - INFO - main.py:307 - Table created: test_cases
2025-08-02 21:38:29 - app.main - INFO - main.py:305 - Creating table: test_steps
2025-08-02 21:38:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.132s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 21:38:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00140s] {}
2025-08-02 21:38:29 - app.main - INFO - main.py:307 - Table created: test_steps
2025-08-02 21:38:29 - app.main - INFO - main.py:305 - Creating table: test_plans
2025-08-02 21:38:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.292s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5518s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:38:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00152s] {}
2025-08-02 21:38:29 - app.main - INFO - main.py:307 - Table created: test_plans
2025-08-02 21:38:29 - app.main - INFO - main.py:305 - Creating table: test_plan_test_cases
2025-08-02 21:38:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:29 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.529s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:38:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00210s] {}
2025-08-02 21:38:30 - root - INFO - main.py:88 - ================================================================================
2025-08-02 21:38:30 - root - INFO - main.py:89 - Application starting with enhanced logging (level: INFO)
2025-08-02 21:38:30 - root - INFO - main.py:90 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 21:38:30 - root - INFO - main.py:91 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 21:38:30 - root - INFO - main.py:92 - ================================================================================
2025-08-02 21:38:30 - app.main - INFO - main.py:307 - Table created: test_plan_test_cases
2025-08-02 21:38:30 - app.main - INFO - main.py:305 - Creating table: test_executions
2025-08-02 21:38:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.691s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.9514s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 21:38:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00214s] {}
2025-08-02 21:38:30 - app.main - INFO - main.py:307 - Table created: test_executions
2025-08-02 21:38:30 - app.main - INFO - main.py:305 - Creating table: comments
2025-08-02 21:38:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.931s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.192s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 21:38:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00207s] {}
2025-08-02 21:38:30 - app.main - INFO - main.py:307 - Table created: comments
2025-08-02 21:38:30 - app.main - INFO - main.py:305 - Creating table: team_members
2025-08-02 21:38:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.172s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:38:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00243s] {}
2025-08-02 21:38:30 - app.main - INFO - main.py:307 - Table created: team_members
2025-08-02 21:38:30 - app.main - INFO - main.py:305 - Creating table: attachments
2025-08-02 21:38:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.333s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 21:38:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00150s] {}
2025-08-02 21:38:30 - app.main - INFO - main.py:307 - Table created: attachments
2025-08-02 21:38:30 - app.main - INFO - main.py:305 - Creating table: activity_logs
2025-08-02 21:38:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.494s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:30 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:38:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00176s] {}
2025-08-02 21:38:31 - app.main - INFO - main.py:307 - Table created: activity_logs
2025-08-02 21:38:31 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:38:31 - app.main - INFO - main.py:1398 - Initializing API routers...
2025-08-02 21:38:31 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x0000025C5A68FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 21:38:31 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x0000025C5A68FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 21:38:31 - app.main - INFO - main.py:312 - All database tables created successfully
2025-08-02 21:38:31 - app.main - INFO - main.py:296 - Dropped table: activity_logs
2025-08-02 21:38:31 - app.main - INFO - main.py:294 - Dropping table: attachments
2025-08-02 21:38:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 21:38:31 - app.main - INFO - main.py:1410 - API routers initialized successfully
2025-08-02 21:38:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00050s] {}
2025-08-02 21:38:31 - app.main - INFO - main.py:246 - Starting database initialization...
2025-08-02 21:38:31 - app.main - INFO - main.py:296 - Dropped table: attachments
2025-08-02 21:38:31 - app.main - INFO - main.py:294 - Dropping table: comments
2025-08-02 21:38:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 21:38:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00052s] {}
2025-08-02 21:38:31 - app.main - INFO - main.py:296 - Dropped table: comments
2025-08-02 21:38:31 - app.main - INFO - main.py:294 - Dropping table: environments
2025-08-02 21:38:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 21:38:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00053s] {}
2025-08-02 21:38:31 - app.main - INFO - main.py:296 - Dropped table: environments
2025-08-02 21:38:31 - app.main - INFO - main.py:294 - Dropping table: projects
2025-08-02 21:38:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 21:38:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00051s] {}
2025-08-02 21:38:31 - app.main - INFO - main.py:296 - Dropped table: projects
2025-08-02 21:38:31 - app.main - INFO - main.py:294 - Dropping table: team_members
2025-08-02 21:38:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 21:38:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00084s] {}
2025-08-02 21:38:31 - app.main - INFO - main.py:296 - Dropped table: team_members
2025-08-02 21:38:31 - app.main - INFO - main.py:294 - Dropping table: teams
2025-08-02 21:38:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 21:38:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00097s] {}
2025-08-02 21:38:31 - app.main - INFO - main.py:296 - Dropped table: teams
2025-08-02 21:38:31 - app.main - INFO - main.py:294 - Dropping table: test_cases
2025-08-02 21:38:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 21:38:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00070s] {}
2025-08-02 21:38:31 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x000001DE636FFDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 21:38:31 - app.main - INFO - main.py:296 - Dropped table: test_cases
2025-08-02 21:38:31 - app.main - INFO - main.py:294 - Dropping table: test_executions
2025-08-02 21:38:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 21:38:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00098s] {}
2025-08-02 21:38:31 - app.main - INFO - main.py:296 - Dropped table: test_executions
2025-08-02 21:38:31 - app.main - INFO - main.py:294 - Dropping table: test_plan_test_cases
2025-08-02 21:38:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 21:38:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00086s] {}
2025-08-02 21:38:31 - app.main - INFO - main.py:296 - Dropped table: test_plan_test_cases
2025-08-02 21:38:31 - app.main - INFO - main.py:294 - Dropping table: test_plans
2025-08-02 21:38:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 21:38:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00059s] {}
2025-08-02 21:38:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:38:31 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:38:31 - app.main - INFO - main.py:296 - Dropped table: test_plans
2025-08-02 21:38:32 - app.main - INFO - main.py:294 - Dropping table: test_steps
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00041s] {}
2025-08-02 21:38:32 - app.main - INFO - main.py:296 - Dropped table: test_steps
2025-08-02 21:38:32 - app.main - INFO - main.py:294 - Dropping table: users
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00049s] {}
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:38:32 - app.main - INFO - main.py:296 - Dropped table: users
2025-08-02 21:38:32 - app.main - INFO - main.py:302 - Creating database tables in order...
2025-08-02 21:38:32 - app.main - INFO - main.py:305 - Creating table: users
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00211s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00088s] {}
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00120s] {}
2025-08-02 21:38:32 - app.main - INFO - main.py:307 - Table created: users
2025-08-02 21:38:32 - app.main - INFO - main.py:305 - Creating table: teams
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2486s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:32 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x000001DE636FFDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 21:38:32 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x000001DE636FFDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 21:38:32 - app.main - INFO - main.py:276 - Disabling foreign key constraints...
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00129s] {}
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00118s] {}
2025-08-02 21:38:32 - app.main - INFO - main.py:307 - Table created: teams
2025-08-02 21:38:32 - app.main - INFO - main.py:305 - Creating table: projects
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.412s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00121s] {}
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00202s] {}
2025-08-02 21:38:32 - app.main - INFO - main.py:291 - Dropping existing tables...
2025-08-02 21:38:32 - app.main - INFO - main.py:294 - Dropping table: activity_logs
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00150s] {}
2025-08-02 21:38:32 - app.main - INFO - main.py:307 - Table created: projects
2025-08-02 21:38:32 - app.main - INFO - main.py:305 - Creating table: environments
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5809s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00157s] {}
2025-08-02 21:38:32 - app.main - INFO - main.py:307 - Table created: environments
2025-08-02 21:38:32 - app.main - INFO - main.py:305 - Creating table: test_cases
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7471s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00099s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.0936s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1763s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 21:38:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00169s] {}
2025-08-02 21:38:33 - app.main - INFO - main.py:307 - Table created: test_cases
2025-08-02 21:38:33 - app.main - INFO - main.py:305 - Creating table: test_steps
2025-08-02 21:38:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.169s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 21:38:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00102s] {}
2025-08-02 21:38:33 - app.main - INFO - main.py:307 - Table created: test_steps
2025-08-02 21:38:33 - app.main - INFO - main.py:305 - Creating table: test_plans
2025-08-02 21:38:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.334s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5891s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:38:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00178s] {}
2025-08-02 21:38:33 - app.main - INFO - main.py:307 - Table created: test_plans
2025-08-02 21:38:33 - app.main - INFO - main.py:305 - Creating table: test_plan_test_cases
2025-08-02 21:38:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.589s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:38:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00138s] {}
2025-08-02 21:38:44 - root - INFO - main.py:88 - ================================================================================
2025-08-02 21:38:44 - root - INFO - main.py:89 - Application starting with enhanced logging (level: INFO)
2025-08-02 21:38:44 - root - INFO - main.py:90 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 21:38:44 - root - INFO - main.py:91 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 21:38:44 - root - INFO - main.py:92 - ================================================================================
2025-08-02 21:38:45 - app.main - INFO - main.py:1398 - Initializing API routers...
2025-08-02 21:38:45 - app.main - INFO - main.py:1410 - API routers initialized successfully
2025-08-02 21:38:45 - app.main - INFO - main.py:246 - Starting database initialization...
2025-08-02 21:38:46 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x000002907528FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 21:38:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:38:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:38:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:38:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:38:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:38:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:38:47 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x000002907528FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 21:38:47 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x000002907528FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 21:38:47 - app.main - INFO - main.py:276 - Disabling foreign key constraints...
2025-08-02 21:38:47 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:38:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 21:38:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00162s] {}
2025-08-02 21:38:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 21:38:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00116s] {}
2025-08-02 21:38:47 - app.main - INFO - main.py:291 - Dropping existing tables...
2025-08-02 21:38:47 - app.main - INFO - main.py:294 - Dropping table: activity_logs
2025-08-02 21:38:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 21:38:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00072s] {}
2025-08-02 21:38:47 - app.main - INFO - main.py:296 - Dropped table: activity_logs
2025-08-02 21:38:47 - app.main - INFO - main.py:294 - Dropping table: attachments
2025-08-02 21:38:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 21:38:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00124s] {}
2025-08-02 21:38:47 - app.main - INFO - main.py:296 - Dropped table: attachments
2025-08-02 21:38:47 - app.main - INFO - main.py:294 - Dropping table: comments
2025-08-02 21:38:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 21:38:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00098s] {}
2025-08-02 21:38:47 - app.main - INFO - main.py:296 - Dropped table: comments
2025-08-02 21:38:47 - app.main - INFO - main.py:294 - Dropping table: environments
2025-08-02 21:38:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 21:38:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00037s] {}
2025-08-02 21:38:47 - app.main - INFO - main.py:296 - Dropped table: environments
2025-08-02 21:38:47 - app.main - INFO - main.py:294 - Dropping table: projects
2025-08-02 21:38:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 21:38:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00093s] {}
2025-08-02 21:38:47 - app.main - INFO - main.py:296 - Dropped table: projects
2025-08-02 21:38:47 - app.main - INFO - main.py:294 - Dropping table: team_members
2025-08-02 21:38:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 21:38:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00092s] {}
2025-08-02 21:38:47 - app.main - INFO - main.py:296 - Dropped table: team_members
2025-08-02 21:38:47 - app.main - INFO - main.py:294 - Dropping table: teams
2025-08-02 21:38:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 21:38:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00085s] {}
2025-08-02 21:38:47 - app.main - INFO - main.py:296 - Dropped table: teams
2025-08-02 21:38:47 - app.main - INFO - main.py:294 - Dropping table: test_cases
2025-08-02 21:38:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 21:38:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00104s] {}
2025-08-02 21:38:48 - app.main - INFO - main.py:296 - Dropped table: test_cases
2025-08-02 21:38:48 - app.main - INFO - main.py:294 - Dropping table: test_executions
2025-08-02 21:38:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 21:38:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00046s] {}
2025-08-02 21:38:48 - app.main - INFO - main.py:296 - Dropped table: test_executions
2025-08-02 21:38:48 - app.main - INFO - main.py:294 - Dropping table: test_plan_test_cases
2025-08-02 21:38:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 21:38:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00072s] {}
2025-08-02 21:38:48 - app.main - INFO - main.py:296 - Dropped table: test_plan_test_cases
2025-08-02 21:38:48 - app.main - INFO - main.py:294 - Dropping table: test_plans
2025-08-02 21:38:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 21:38:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00069s] {}
2025-08-02 21:38:48 - app.main - INFO - main.py:296 - Dropped table: test_plans
2025-08-02 21:38:48 - app.main - INFO - main.py:294 - Dropping table: test_steps
2025-08-02 21:38:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 21:38:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00040s] {}
2025-08-02 21:38:48 - app.main - INFO - main.py:296 - Dropped table: test_steps
2025-08-02 21:38:48 - app.main - INFO - main.py:294 - Dropping table: users
2025-08-02 21:38:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 21:38:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00074s] {}
2025-08-02 21:38:48 - app.main - INFO - main.py:296 - Dropped table: users
2025-08-02 21:38:48 - app.main - INFO - main.py:302 - Creating database tables in order...
2025-08-02 21:38:48 - app.main - INFO - main.py:305 - Creating table: users
2025-08-02 21:38:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00056s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 21:38:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00146s] {}
2025-08-02 21:38:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 21:38:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00458s] {}
2025-08-02 21:38:48 - app.main - INFO - main.py:307 - Table created: users
2025-08-02 21:38:48 - app.main - INFO - main.py:305 - Creating table: teams
2025-08-02 21:38:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2563s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:38:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00148s] {}
2025-08-02 21:38:48 - app.main - INFO - main.py:307 - Table created: teams
2025-08-02 21:38:48 - app.main - INFO - main.py:305 - Creating table: projects
2025-08-02 21:38:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4247s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 21:38:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00133s] {}
2025-08-02 21:38:49 - app.main - INFO - main.py:307 - Table created: projects
2025-08-02 21:38:49 - app.main - INFO - main.py:305 - Creating table: environments
2025-08-02 21:38:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5896s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 21:38:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00166s] {}
2025-08-02 21:38:49 - app.main - INFO - main.py:307 - Table created: environments
2025-08-02 21:38:49 - app.main - INFO - main.py:305 - Creating table: test_cases
2025-08-02 21:38:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7604s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00085s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.08215s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1637s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 21:38:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00112s] {}
2025-08-02 21:38:49 - app.main - INFO - main.py:307 - Table created: test_cases
2025-08-02 21:38:49 - app.main - INFO - main.py:305 - Creating table: test_steps
2025-08-02 21:38:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.18s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 21:38:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00084s] {}
2025-08-02 21:38:49 - app.main - INFO - main.py:307 - Table created: test_steps
2025-08-02 21:38:49 - app.main - INFO - main.py:305 - Creating table: test_plans
2025-08-02 21:38:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.345s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5797s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:38:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00078s] {}
2025-08-02 21:38:50 - app.main - INFO - main.py:307 - Table created: test_plans
2025-08-02 21:38:50 - app.main - INFO - main.py:305 - Creating table: test_plan_test_cases
2025-08-02 21:38:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.601s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:38:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00117s] {}
2025-08-02 21:38:50 - app.main - INFO - main.py:307 - Table created: test_plan_test_cases
2025-08-02 21:38:50 - app.main - INFO - main.py:305 - Creating table: test_executions
2025-08-02 21:38:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.768s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.004s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 21:38:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00098s] {}
2025-08-02 21:38:50 - app.main - INFO - main.py:307 - Table created: test_executions
2025-08-02 21:38:50 - app.main - INFO - main.py:305 - Creating table: comments
2025-08-02 21:38:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.015s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.25s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 21:38:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00091s] {}
2025-08-02 21:38:50 - app.main - INFO - main.py:307 - Table created: comments
2025-08-02 21:38:50 - app.main - INFO - main.py:305 - Creating table: team_members
2025-08-02 21:38:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.264s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:38:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00086s] {}
2025-08-02 21:38:50 - app.main - INFO - main.py:307 - Table created: team_members
2025-08-02 21:38:50 - app.main - INFO - main.py:305 - Creating table: attachments
2025-08-02 21:38:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.428s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 21:38:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00119s] {}
2025-08-02 21:38:51 - app.main - INFO - main.py:307 - Table created: attachments
2025-08-02 21:38:51 - app.main - INFO - main.py:305 - Creating table: activity_logs
2025-08-02 21:38:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:38:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.592s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:38:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:38:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00361s] {}
2025-08-02 21:38:51 - app.main - INFO - main.py:307 - Table created: activity_logs
2025-08-02 21:38:51 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:38:51 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x000002907528FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 21:38:51 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x000002907528FDE0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 21:38:51 - app.main - INFO - main.py:312 - All database tables created successfully
2025-08-02 21:39:22 - app.main - INFO - main.py:561 - Login attempt for email: test@example.com
2025-08-02 21:39:22 - app.main - INFO - main.py:562 - Request headers: {'host': '127.0.0.1:8001', 'connection': 'keep-alive', 'content-length': '50', 'sec-ch-ua-platform': '"macOS"', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36', 'accept': 'application/json', 'sec-ch-ua': '"Chromium";v="135", "Not:A Brand";v="99", "Google Chrome";v="135"', 'content-type': 'application/json', 'sec-ch-ua-mobile': '?0', 'accept-language': 'en-US,en;q=0.9', 'origin': 'http://localhost:5175', 'sec-fetch-site': 'cross-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'sec-fetch-storage-access': 'active', 'referer': 'http://localhost:5175/', 'accept-encoding': 'gzip, deflate, br, zstd'}
2025-08-02 21:39:22 - app.main - INFO - main.py:563 - Request body: b'{"email":"test@example.com","password":"test1234"}'
2025-08-02 21:39:22 - app.main - INFO - main.py:568 - DB session type: AsyncSession
2025-08-02 21:39:22 - app.auth.security - INFO - security.py:424 - [AUTH_SERVICE] Starting authentication for email: test@example.com
2025-08-02 21:39:23 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:898 - Created new connection <AdaptedConnection <asyncpg.connection.Connection object at 0x0000029075480230>>
2025-08-02 21:39:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:39:23 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] ()
2025-08-02 21:39:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:39:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] ()
2025-08-02 21:39:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:39:24 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] ()
2025-08-02 21:39:24 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:739 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x0000029075480230>> checked out from pool
2025-08-02 21:39:24 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:1313 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x0000029075480230>> is fresh, skipping pre-ping
2025-08-02 21:39:24 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _post_configure_properties() started
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop created_test_cases
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - User.created_test_cases setup primary join users.id = test_cases.created_by
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - User.created_test_cases setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - User.created_test_cases synchronize pairs [(users.id => test_cases.created_by)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - User.created_test_cases secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - User.created_test_cases local/remote pairs [(users.id / test_cases.created_by)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - User.created_test_cases remote columns [test_cases.created_by]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - User.created_test_cases local columns [users.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - User.created_test_cases relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - User.created_test_cases lazy loading clause :param_1 = test_cases.created_by
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop assigned_test_cases
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - User.assigned_test_cases setup primary join users.id = test_cases.assigned_to
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - User.assigned_test_cases setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - User.assigned_test_cases synchronize pairs [(users.id => test_cases.assigned_to)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - User.assigned_test_cases secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - User.assigned_test_cases local/remote pairs [(users.id / test_cases.assigned_to)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - User.assigned_test_cases remote columns [test_cases.assigned_to]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - User.assigned_test_cases local columns [users.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - User.assigned_test_cases relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - User.assigned_test_cases lazy loading clause :param_1 = test_cases.assigned_to
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop activity_logs
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - User.activity_logs setup primary join users.id = activity_logs.user_id
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - User.activity_logs setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - User.activity_logs synchronize pairs [(users.id => activity_logs.user_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - User.activity_logs secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - User.activity_logs local/remote pairs [(users.id / activity_logs.user_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - User.activity_logs remote columns [activity_logs.user_id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - User.activity_logs local columns [users.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - User.activity_logs relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - User.activity_logs lazy loading clause :param_1 = activity_logs.user_id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop comments
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - User.comments setup primary join users.id = comments.user_id
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - User.comments setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - User.comments synchronize pairs [(users.id => comments.user_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - User.comments secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - User.comments local/remote pairs [(users.id / comments.user_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - User.comments remote columns [comments.user_id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - User.comments local columns [users.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - User.comments relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - User.comments lazy loading clause :param_1 = comments.user_id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop test_executions
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - User.test_executions setup primary join users.id = test_executions.executed_by
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - User.test_executions setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - User.test_executions synchronize pairs [(users.id => test_executions.executed_by)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - User.test_executions secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - User.test_executions local/remote pairs [(users.id / test_executions.executed_by)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - User.test_executions remote columns [test_executions.executed_by]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - User.test_executions local columns [users.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - User.test_executions relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - User.test_executions lazy loading clause :param_1 = test_executions.executed_by
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop created_projects
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - User.created_projects setup primary join users.id = projects.created_by
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - User.created_projects setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - User.created_projects synchronize pairs [(users.id => projects.created_by)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - User.created_projects secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - User.created_projects local/remote pairs [(users.id / projects.created_by)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - User.created_projects remote columns [projects.created_by]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - User.created_projects local columns [users.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - User.created_projects relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - User.created_projects lazy loading clause :param_1 = projects.created_by
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop team_memberships
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - User.team_memberships setup primary join users.id = team_members.user_id
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - User.team_memberships setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - User.team_memberships synchronize pairs [(users.id => team_members.user_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - User.team_memberships secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - User.team_memberships local/remote pairs [(users.id / team_members.user_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - User.team_memberships remote columns [team_members.user_id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - User.team_memberships local columns [users.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - User.team_memberships relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - User.team_memberships lazy loading clause :param_1 = team_members.user_id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop uploaded_attachments
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - User.uploaded_attachments setup primary join users.id = attachments.uploaded_by
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - User.uploaded_attachments setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - User.uploaded_attachments synchronize pairs [(users.id => attachments.uploaded_by)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - User.uploaded_attachments secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - User.uploaded_attachments local/remote pairs [(users.id / attachments.uploaded_by)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - User.uploaded_attachments remote columns [attachments.uploaded_by]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - User.uploaded_attachments local columns [users.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - User.uploaded_attachments relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - User.uploaded_attachments lazy loading clause :param_1 = attachments.uploaded_by
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop email
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop full_name
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop hashed_password
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop role
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop is_active
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop created_at
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) initialize prop updated_at
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (User|users) _post_configure_properties() complete
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _post_configure_properties() started
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop creator
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Project.creator setup primary join users.id = projects.created_by
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Project.creator setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Project.creator synchronize pairs [(users.id => projects.created_by)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Project.creator secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Project.creator local/remote pairs [(projects.created_by / users.id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Project.creator remote columns [users.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Project.creator local columns [projects.created_by]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Project.creator relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Project.creator lazy loading clause users.id = :param_1
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - Project.creator will use Session.get() to optimize instance loads
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop team
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Project.team setup primary join teams.id = projects.team_id
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Project.team setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Project.team synchronize pairs [(teams.id => projects.team_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Project.team secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Project.team local/remote pairs [(projects.team_id / teams.id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Project.team remote columns [teams.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Project.team local columns [projects.team_id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Project.team relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Project.team lazy loading clause teams.id = :param_1
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - Project.team will use Session.get() to optimize instance loads
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop test_cases
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Project.test_cases setup primary join projects.id = test_cases.project_id
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Project.test_cases setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Project.test_cases synchronize pairs [(projects.id => test_cases.project_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Project.test_cases secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Project.test_cases local/remote pairs [(projects.id / test_cases.project_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Project.test_cases remote columns [test_cases.project_id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Project.test_cases local columns [projects.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Project.test_cases relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Project.test_cases lazy loading clause :param_1 = test_cases.project_id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop test_plans
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Project.test_plans setup primary join projects.id = test_plans.project_id
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Project.test_plans setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Project.test_plans synchronize pairs [(projects.id => test_plans.project_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Project.test_plans secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Project.test_plans local/remote pairs [(projects.id / test_plans.project_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Project.test_plans remote columns [test_plans.project_id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Project.test_plans local columns [projects.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Project.test_plans relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Project.test_plans lazy loading clause :param_1 = test_plans.project_id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop environments
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Project.environments setup primary join projects.id = environments.project_id
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Project.environments setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Project.environments synchronize pairs [(projects.id => environments.project_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Project.environments secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Project.environments local/remote pairs [(projects.id / environments.project_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Project.environments remote columns [environments.project_id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Project.environments local columns [projects.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Project.environments relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Project.environments lazy loading clause :param_1 = environments.project_id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop name
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop description
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop created_by
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop team_id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop is_active
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop created_at
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) initialize prop updated_at
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Project|projects) _post_configure_properties() complete
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _post_configure_properties() started
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) initialize prop test_case
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestStep.test_case setup primary join test_cases.id = test_steps.test_case_id
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestStep.test_case setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestStep.test_case synchronize pairs [(test_cases.id => test_steps.test_case_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestStep.test_case secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestStep.test_case local/remote pairs [(test_steps.test_case_id / test_cases.id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestStep.test_case remote columns [test_cases.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestStep.test_case local columns [test_steps.test_case_id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestStep.test_case relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestStep.test_case lazy loading clause test_cases.id = :param_1
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestStep.test_case will use Session.get() to optimize instance loads
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) initialize prop id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) initialize prop test_case_id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) initialize prop step_number
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) initialize prop description
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) initialize prop expected_result
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) initialize prop actual_result
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) initialize prop status
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestStep|test_steps) _post_configure_properties() complete
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _post_configure_properties() started
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop project
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestCase.project setup primary join projects.id = test_cases.project_id
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestCase.project setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestCase.project synchronize pairs [(projects.id => test_cases.project_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestCase.project secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestCase.project local/remote pairs [(test_cases.project_id / projects.id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestCase.project remote columns [projects.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestCase.project local columns [test_cases.project_id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestCase.project relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestCase.project lazy loading clause projects.id = :param_1
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestCase.project will use Session.get() to optimize instance loads
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop creator
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestCase.creator setup primary join users.id = test_cases.created_by
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestCase.creator setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestCase.creator synchronize pairs [(users.id => test_cases.created_by)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestCase.creator secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestCase.creator local/remote pairs [(test_cases.created_by / users.id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestCase.creator remote columns [users.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestCase.creator local columns [test_cases.created_by]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestCase.creator relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestCase.creator lazy loading clause users.id = :param_1
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestCase.creator will use Session.get() to optimize instance loads
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop assignee
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestCase.assignee setup primary join users.id = test_cases.assigned_to
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestCase.assignee setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestCase.assignee synchronize pairs [(users.id => test_cases.assigned_to)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestCase.assignee secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestCase.assignee local/remote pairs [(test_cases.assigned_to / users.id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestCase.assignee remote columns [users.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestCase.assignee local columns [test_cases.assigned_to]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestCase.assignee relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestCase.assignee lazy loading clause users.id = :param_1
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestCase.assignee will use Session.get() to optimize instance loads
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop steps
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestCase.steps setup primary join test_cases.id = test_steps.test_case_id
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestCase.steps setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestCase.steps synchronize pairs [(test_cases.id => test_steps.test_case_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestCase.steps secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestCase.steps local/remote pairs [(test_cases.id / test_steps.test_case_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestCase.steps remote columns [test_steps.test_case_id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestCase.steps local columns [test_cases.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestCase.steps relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestCase.steps lazy loading clause :param_1 = test_steps.test_case_id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop test_executions
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestCase.test_executions setup primary join test_cases.id = test_executions.test_case_id
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestCase.test_executions setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestCase.test_executions synchronize pairs [(test_cases.id => test_executions.test_case_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestCase.test_executions secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestCase.test_executions local/remote pairs [(test_cases.id / test_executions.test_case_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestCase.test_executions remote columns [test_executions.test_case_id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestCase.test_executions local columns [test_cases.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestCase.test_executions relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestCase.test_executions lazy loading clause :param_1 = test_executions.test_case_id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop comments
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestCase.comments setup primary join test_cases.id = comments.test_case_id
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestCase.comments setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestCase.comments synchronize pairs [(test_cases.id => comments.test_case_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestCase.comments secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestCase.comments local/remote pairs [(test_cases.id / comments.test_case_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestCase.comments remote columns [comments.test_case_id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestCase.comments local columns [test_cases.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestCase.comments relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestCase.comments lazy loading clause :param_1 = comments.test_case_id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop test_plans
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestCase.test_plans setup primary join test_cases.id = test_plan_test_cases.test_case_id
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestCase.test_plans setup secondary join test_plans.id = test_plan_test_cases.test_plan_id
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestCase.test_plans synchronize pairs [(test_cases.id => test_plan_test_cases.test_case_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestCase.test_plans secondary synchronize pairs [(test_plans.id => test_plan_test_cases.test_plan_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestCase.test_plans local/remote pairs [(test_cases.id / test_plan_test_cases.test_case_id),(test_plans.id / test_plan_test_cases.test_plan_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestCase.test_plans remote columns [test_plan_test_cases.test_case_id,test_plan_test_cases.test_plan_id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestCase.test_plans local columns [test_cases.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestCase.test_plans relationship direction RelationshipDirection.MANYTOMANY
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestCase.test_plans lazy loading clause :param_1 = test_plan_test_cases.test_case_id AND test_plans.id = test_plan_test_cases.test_plan_id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop test_plan_test_cases
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestCase.test_plan_test_cases setup primary join test_cases.id = test_plan_test_cases.test_case_id
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestCase.test_plan_test_cases setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestCase.test_plan_test_cases synchronize pairs [(test_cases.id => test_plan_test_cases.test_case_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestCase.test_plan_test_cases secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestCase.test_plan_test_cases local/remote pairs [(test_cases.id / test_plan_test_cases.test_case_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestCase.test_plan_test_cases remote columns [test_plan_test_cases.test_case_id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestCase.test_plan_test_cases local columns [test_cases.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestCase.test_plan_test_cases relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestCase.test_plan_test_cases lazy loading clause :param_1 = test_plan_test_cases.test_case_id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop title
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop description
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop project_id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop test_type
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop priority
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop status
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop expected_result
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop created_by
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop assigned_to
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop tags
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop ai_generated
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop self_healing_enabled
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop prerequisites
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop test_data
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop automation_config
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop created_at
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) initialize prop updated_at
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestCase|test_cases) _post_configure_properties() complete
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _post_configure_properties() started
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop project
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestPlan.project setup primary join projects.id = test_plans.project_id
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestPlan.project setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestPlan.project synchronize pairs [(projects.id => test_plans.project_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestPlan.project secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestPlan.project local/remote pairs [(test_plans.project_id / projects.id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestPlan.project remote columns [projects.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestPlan.project local columns [test_plans.project_id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestPlan.project relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestPlan.project lazy loading clause projects.id = :param_1
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestPlan.project will use Session.get() to optimize instance loads
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop test_executions
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestPlan.test_executions setup primary join test_plans.id = test_executions.test_plan_id
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestPlan.test_executions setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestPlan.test_executions synchronize pairs [(test_plans.id => test_executions.test_plan_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestPlan.test_executions secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestPlan.test_executions local/remote pairs [(test_plans.id / test_executions.test_plan_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestPlan.test_executions remote columns [test_executions.test_plan_id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestPlan.test_executions local columns [test_plans.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestPlan.test_executions relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestPlan.test_executions lazy loading clause :param_1 = test_executions.test_plan_id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop test_cases
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestPlan.test_cases setup primary join test_plans.id = test_plan_test_cases.test_plan_id
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestPlan.test_cases setup secondary join test_cases.id = test_plan_test_cases.test_case_id
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestPlan.test_cases synchronize pairs [(test_plans.id => test_plan_test_cases.test_plan_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestPlan.test_cases secondary synchronize pairs [(test_cases.id => test_plan_test_cases.test_case_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestPlan.test_cases local/remote pairs [(test_plans.id / test_plan_test_cases.test_plan_id),(test_cases.id / test_plan_test_cases.test_case_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestPlan.test_cases remote columns [test_plan_test_cases.test_case_id,test_plan_test_cases.test_plan_id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestPlan.test_cases local columns [test_plans.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestPlan.test_cases relationship direction RelationshipDirection.MANYTOMANY
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestPlan.test_cases lazy loading clause :param_1 = test_plan_test_cases.test_plan_id AND test_cases.id = test_plan_test_cases.test_case_id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop test_plan_test_cases
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestPlan.test_plan_test_cases setup primary join test_plans.id = test_plan_test_cases.test_plan_id
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestPlan.test_plan_test_cases setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestPlan.test_plan_test_cases synchronize pairs [(test_plans.id => test_plan_test_cases.test_plan_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestPlan.test_plan_test_cases secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestPlan.test_plan_test_cases local/remote pairs [(test_plans.id / test_plan_test_cases.test_plan_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestPlan.test_plan_test_cases remote columns [test_plan_test_cases.test_plan_id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestPlan.test_plan_test_cases local columns [test_plans.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestPlan.test_plan_test_cases relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestPlan.test_plan_test_cases lazy loading clause :param_1 = test_plan_test_cases.test_plan_id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop name
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop description
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop project_id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop created_by
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop status
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop scheduled_start
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop scheduled_end
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop created_at
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) initialize prop updated_at
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlan|test_plans) _post_configure_properties() complete
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _post_configure_properties() started
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop test_case
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestExecution.test_case setup primary join test_cases.id = test_executions.test_case_id
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestExecution.test_case setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestExecution.test_case synchronize pairs [(test_cases.id => test_executions.test_case_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestExecution.test_case secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestExecution.test_case local/remote pairs [(test_executions.test_case_id / test_cases.id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestExecution.test_case remote columns [test_cases.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestExecution.test_case local columns [test_executions.test_case_id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestExecution.test_case relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestExecution.test_case lazy loading clause test_cases.id = :param_1
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestExecution.test_case will use Session.get() to optimize instance loads
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop test_plan
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestExecution.test_plan setup primary join test_plans.id = test_executions.test_plan_id
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestExecution.test_plan setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestExecution.test_plan synchronize pairs [(test_plans.id => test_executions.test_plan_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestExecution.test_plan secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestExecution.test_plan local/remote pairs [(test_executions.test_plan_id / test_plans.id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestExecution.test_plan remote columns [test_plans.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestExecution.test_plan local columns [test_executions.test_plan_id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestExecution.test_plan relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestExecution.test_plan lazy loading clause test_plans.id = :param_1
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestExecution.test_plan will use Session.get() to optimize instance loads
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop executor
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestExecution.executor setup primary join users.id = test_executions.executed_by
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestExecution.executor setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestExecution.executor synchronize pairs [(users.id => test_executions.executed_by)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestExecution.executor secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestExecution.executor local/remote pairs [(test_executions.executed_by / users.id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestExecution.executor remote columns [users.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestExecution.executor local columns [test_executions.executed_by]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestExecution.executor relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestExecution.executor lazy loading clause users.id = :param_1
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestExecution.executor will use Session.get() to optimize instance loads
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop environment
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestExecution.environment setup primary join environments.id = test_executions.environment_id
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestExecution.environment setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestExecution.environment synchronize pairs [(environments.id => test_executions.environment_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestExecution.environment secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestExecution.environment local/remote pairs [(test_executions.environment_id / environments.id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestExecution.environment remote columns [environments.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestExecution.environment local columns [test_executions.environment_id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestExecution.environment relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestExecution.environment lazy loading clause environments.id = :param_1
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestExecution.environment will use Session.get() to optimize instance loads
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop test_case_id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop test_plan_id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop executed_by
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop environment_id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop status
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop started_at
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop completed_at
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop duration
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop result
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop logs
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop screenshots
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop error_message
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop ai_analysis
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop created_at
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) initialize prop updated_at
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestExecution|test_executions) _post_configure_properties() complete
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _post_configure_properties() started
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop test_case
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Comment.test_case setup primary join test_cases.id = comments.test_case_id
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Comment.test_case setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Comment.test_case synchronize pairs [(test_cases.id => comments.test_case_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Comment.test_case secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Comment.test_case local/remote pairs [(comments.test_case_id / test_cases.id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Comment.test_case remote columns [test_cases.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Comment.test_case local columns [comments.test_case_id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Comment.test_case relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Comment.test_case lazy loading clause test_cases.id = :param_1
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - Comment.test_case will use Session.get() to optimize instance loads
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop user
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Comment.user setup primary join users.id = comments.user_id
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Comment.user setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Comment.user synchronize pairs [(users.id => comments.user_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Comment.user secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Comment.user local/remote pairs [(comments.user_id / users.id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Comment.user remote columns [users.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Comment.user local columns [comments.user_id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Comment.user relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Comment.user lazy loading clause users.id = :param_1
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - Comment.user will use Session.get() to optimize instance loads
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop parent_comment
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Comment.parent_comment setup primary join comments.id = comments.parent_comment_id
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Comment.parent_comment setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Comment.parent_comment synchronize pairs [(comments.id => comments.parent_comment_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Comment.parent_comment secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Comment.parent_comment local/remote pairs [(comments.parent_comment_id / comments.id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Comment.parent_comment remote columns [comments.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Comment.parent_comment local columns [comments.parent_comment_id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Comment.parent_comment relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Comment.parent_comment lazy loading clause comments.id = :param_1
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - Comment.parent_comment will use Session.get() to optimize instance loads
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop replies
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Comment.replies setup primary join comments.id = comments.parent_comment_id
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Comment.replies setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Comment.replies synchronize pairs [(comments.id => comments.parent_comment_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Comment.replies secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Comment.replies local/remote pairs [(comments.id / comments.parent_comment_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Comment.replies remote columns [comments.parent_comment_id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Comment.replies local columns [comments.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Comment.replies relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Comment.replies lazy loading clause :param_1 = comments.parent_comment_id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop test_case_id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop user_id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop user_name
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop comment_type
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop content
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop parent_comment_id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop resolved
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop created_at
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) initialize prop updated_at
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Comment|comments) _post_configure_properties() complete
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _post_configure_properties() started
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) initialize prop members
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Team.members setup primary join teams.id = team_members.team_id
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Team.members setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Team.members synchronize pairs [(teams.id => team_members.team_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Team.members secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Team.members local/remote pairs [(teams.id / team_members.team_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Team.members remote columns [team_members.team_id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Team.members local columns [teams.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Team.members relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Team.members lazy loading clause :param_1 = team_members.team_id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) initialize prop projects
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Team.projects setup primary join teams.id = projects.team_id
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Team.projects setup secondary join None
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Team.projects synchronize pairs [(teams.id => projects.team_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Team.projects secondary synchronize pairs []
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Team.projects local/remote pairs [(teams.id / projects.team_id)]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Team.projects remote columns [projects.team_id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Team.projects local columns [teams.id]
2025-08-02 21:39:24 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Team.projects relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:39:24 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Team.projects lazy loading clause :param_1 = projects.team_id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) initialize prop id
2025-08-02 21:39:24 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) initialize prop name
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) initialize prop description
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) initialize prop created_by
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) initialize prop created_at
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) initialize prop updated_at
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Team|teams) _post_configure_properties() complete
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _post_configure_properties() started
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) initialize prop team
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TeamMember.team setup primary join teams.id = team_members.team_id
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TeamMember.team setup secondary join None
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TeamMember.team synchronize pairs [(teams.id => team_members.team_id)]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TeamMember.team secondary synchronize pairs []
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TeamMember.team local/remote pairs [(team_members.team_id / teams.id)]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TeamMember.team remote columns [teams.id]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TeamMember.team local columns [team_members.team_id]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TeamMember.team relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:39:25 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TeamMember.team lazy loading clause teams.id = :param_1
2025-08-02 21:39:25 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TeamMember.team will use Session.get() to optimize instance loads
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) initialize prop user
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TeamMember.user setup primary join users.id = team_members.user_id
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TeamMember.user setup secondary join None
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TeamMember.user synchronize pairs [(users.id => team_members.user_id)]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TeamMember.user secondary synchronize pairs []
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TeamMember.user local/remote pairs [(team_members.user_id / users.id)]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TeamMember.user remote columns [users.id]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TeamMember.user local columns [team_members.user_id]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TeamMember.user relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:39:25 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TeamMember.user lazy loading clause users.id = :param_1
2025-08-02 21:39:25 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TeamMember.user will use Session.get() to optimize instance loads
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) initialize prop id
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) initialize prop team_id
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) initialize prop user_id
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) initialize prop role
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) initialize prop joined_at
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TeamMember|team_members) _post_configure_properties() complete
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _post_configure_properties() started
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop project
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Environment.project setup primary join projects.id = environments.project_id
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Environment.project setup secondary join None
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Environment.project synchronize pairs [(projects.id => environments.project_id)]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Environment.project secondary synchronize pairs []
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Environment.project local/remote pairs [(environments.project_id / projects.id)]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Environment.project remote columns [projects.id]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Environment.project local columns [environments.project_id]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Environment.project relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:39:25 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Environment.project lazy loading clause projects.id = :param_1
2025-08-02 21:39:25 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - Environment.project will use Session.get() to optimize instance loads
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop test_executions
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Environment.test_executions setup primary join environments.id = test_executions.environment_id
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Environment.test_executions setup secondary join None
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Environment.test_executions synchronize pairs [(environments.id => test_executions.environment_id)]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Environment.test_executions secondary synchronize pairs []
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Environment.test_executions local/remote pairs [(environments.id / test_executions.environment_id)]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Environment.test_executions remote columns [test_executions.environment_id]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Environment.test_executions local columns [environments.id]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Environment.test_executions relationship direction RelationshipDirection.ONETOMANY
2025-08-02 21:39:25 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Environment.test_executions lazy loading clause :param_1 = test_executions.environment_id
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop id
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop name
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop description
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop base_url
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop project_id
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop is_active
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop variables
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop created_at
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) initialize prop updated_at
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Environment|environments) _post_configure_properties() complete
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _post_configure_properties() started
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop uploader
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - Attachment.uploader setup primary join users.id = attachments.uploaded_by
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - Attachment.uploader setup secondary join None
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - Attachment.uploader synchronize pairs [(users.id => attachments.uploaded_by)]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - Attachment.uploader secondary synchronize pairs []
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - Attachment.uploader local/remote pairs [(attachments.uploaded_by / users.id)]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - Attachment.uploader remote columns [users.id]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - Attachment.uploader local columns [attachments.uploaded_by]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - Attachment.uploader relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:39:25 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - Attachment.uploader lazy loading clause users.id = :param_1
2025-08-02 21:39:25 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - Attachment.uploader will use Session.get() to optimize instance loads
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop id
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop file_name
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop file_path
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop file_size
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop file_type
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop entity_type
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop entity_id
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop uploaded_by
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop description
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) initialize prop created_at
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (Attachment|attachments) _post_configure_properties() complete
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _post_configure_properties() started
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) initialize prop test_plan
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestPlanTestCase.test_plan setup primary join test_plans.id = test_plan_test_cases.test_plan_id
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestPlanTestCase.test_plan setup secondary join None
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestPlanTestCase.test_plan synchronize pairs [(test_plans.id => test_plan_test_cases.test_plan_id)]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestPlanTestCase.test_plan secondary synchronize pairs []
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestPlanTestCase.test_plan local/remote pairs [(test_plan_test_cases.test_plan_id / test_plans.id)]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestPlanTestCase.test_plan remote columns [test_plans.id]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestPlanTestCase.test_plan local columns [test_plan_test_cases.test_plan_id]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestPlanTestCase.test_plan relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:39:25 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestPlanTestCase.test_plan lazy loading clause test_plans.id = :param_1
2025-08-02 21:39:25 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestPlanTestCase.test_plan will use Session.get() to optimize instance loads
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) initialize prop test_case
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestPlanTestCase.test_case setup primary join test_cases.id = test_plan_test_cases.test_case_id
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestPlanTestCase.test_case setup secondary join None
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestPlanTestCase.test_case synchronize pairs [(test_cases.id => test_plan_test_cases.test_case_id)]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestPlanTestCase.test_case secondary synchronize pairs []
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestPlanTestCase.test_case local/remote pairs [(test_plan_test_cases.test_case_id / test_cases.id)]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestPlanTestCase.test_case remote columns [test_cases.id]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestPlanTestCase.test_case local columns [test_plan_test_cases.test_case_id]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestPlanTestCase.test_case relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:39:25 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestPlanTestCase.test_case lazy loading clause test_cases.id = :param_1
2025-08-02 21:39:25 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestPlanTestCase.test_case will use Session.get() to optimize instance loads
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) initialize prop creator
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - TestPlanTestCase.creator setup primary join users.id = test_plan_test_cases.created_by
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - TestPlanTestCase.creator setup secondary join None
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - TestPlanTestCase.creator synchronize pairs [(users.id => test_plan_test_cases.created_by)]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - TestPlanTestCase.creator secondary synchronize pairs []
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - TestPlanTestCase.creator local/remote pairs [(test_plan_test_cases.created_by / users.id)]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - TestPlanTestCase.creator remote columns [users.id]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - TestPlanTestCase.creator local columns [test_plan_test_cases.created_by]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - TestPlanTestCase.creator relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:39:25 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - TestPlanTestCase.creator lazy loading clause users.id = :param_1
2025-08-02 21:39:25 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - TestPlanTestCase.creator will use Session.get() to optimize instance loads
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) initialize prop id
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) initialize prop test_plan_id
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) initialize prop test_case_id
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) initialize prop order
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) initialize prop is_mandatory
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) initialize prop created_at
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) initialize prop created_by
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (TestPlanTestCase|test_plan_test_cases) _post_configure_properties() complete
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _post_configure_properties() started
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop user
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2340 - ActivityLog.user setup primary join users.id = activity_logs.user_id
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2341 - ActivityLog.user setup secondary join None
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2342 - ActivityLog.user synchronize pairs [(users.id => activity_logs.user_id)]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2349 - ActivityLog.user secondary synchronize pairs []
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2357 - ActivityLog.user local/remote pairs [(activity_logs.user_id / users.id)]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2364 - ActivityLog.user remote columns [users.id]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2369 - ActivityLog.user local columns [activity_logs.user_id]
2025-08-02 21:39:25 - sqlalchemy.orm.relationships.RelationshipProperty - INFO - relationships.py:2374 - ActivityLog.user relationship direction RelationshipDirection.MANYTOONE
2025-08-02 21:39:25 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:738 - ActivityLog.user lazy loading clause users.id = :param_1
2025-08-02 21:39:25 - sqlalchemy.orm.strategies.LazyLoader - INFO - strategies.py:764 - ActivityLog.user will use Session.get() to optimize instance loads
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop id
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop user_id
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop user_name
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop action
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop target_type
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop target_id
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop target_name
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop details
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop ip_address
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop user_agent
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) initialize prop created_at
2025-08-02 21:39:25 - sqlalchemy.orm.mapper.Mapper - INFO - mapper.py:2471 - (ActivityLog|activity_logs) _post_configure_properties() complete
2025-08-02 21:39:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT users.id, users.email, users.full_name, users.hashed_password, users.role, users.is_active, users.created_at, users.updated_at 
FROM users 
WHERE users.email = $1::VARCHAR
2025-08-02 21:39:25 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00049s] ('test@example.com',)
2025-08-02 21:39:25 - passlib.handlers.bcrypt - WARNING - bcrypt.py:622 - (trapped) error reading bcrypt version
Traceback (most recent call last):
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\passlib\handlers\bcrypt.py", line 620, in _load_backend_mixin
    version = _bcrypt.__about__.__version__
              ^^^^^^^^^^^^^^^^^
AttributeError: module 'bcrypt' has no attribute '__about__'
2025-08-02 21:39:25 - app.auth.security - INFO - security.py:494 - [AUTH_SERVICE] Authentication successful for user ID: d6663135-0f41-403f-bccb-684231c91a81
2025-08-02 21:39:25 - app.main - INFO - main.py:573 - User authentication result: True
2025-08-02 21:39:25 - app.main - INFO - main.py:592 - Creating access token for user ID: d6663135-0f41-403f-bccb-684231c91a81
2025-08-02 21:39:25 - app.main - INFO - main.py:597 - Access token created successfully
2025-08-02 21:39:25 - app.main - INFO - main.py:609 - User logged in successfully: test@example.com
2025-08-02 21:39:25 - sqlalchemy.engine.Engine - INFO - base.py:2704 - COMMIT
2025-08-02 21:39:25 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:972 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x0000029075480230>> being returned to pool
2025-08-02 21:39:25 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:1429 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x0000029075480230>> rollback-on-return
2025-08-02 21:39:42 - app.auth.security - INFO - security.py:142 - 
================================================================================
2025-08-02 21:39:42 - app.auth.security - INFO - security.py:143 - Authenticating request to http://127.0.0.1:8001/api/v1/test-cases/
2025-08-02 21:39:42 - app.auth.security - INFO - security.py:144 - Token: eyJhbGciOiJIUzI1NiIs...
2025-08-02 21:39:42 - app.auth.security - INFO - security.py:148 - Decoding JWT token...
2025-08-02 21:39:42 - app.auth.security - INFO - security.py:150 - Decoded payload: {'sub': 'd6663135-0f41-403f-bccb-684231c91a81', 'exp': 1754152765}
2025-08-02 21:39:42 - app.auth.security - INFO - security.py:157 - Looking up user with ID: d6663135-0f41-403f-bccb-684231c91a81
2025-08-02 21:39:42 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:739 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x0000029075480230>> checked out from pool
2025-08-02 21:39:42 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:1297 - Pool pre-ping on connection <AdaptedConnection <asyncpg.connection.Connection object at 0x0000029075480230>>
2025-08-02 21:39:42 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:39:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT users.id, users.email, users.full_name, users.hashed_password, users.role, users.is_active, users.created_at, users.updated_at 
FROM users 
WHERE users.id = $1::VARCHAR
2025-08-02 21:39:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00139s] ('d6663135-0f41-403f-bccb-684231c91a81',)
2025-08-02 21:39:43 - app.auth.security - INFO - security.py:170 - Successfully authenticated user: test@example.com (ID: d6663135-0f41-403f-bccb-684231c91a81)
2025-08-02 21:39:43 - app.auth.security - INFO - security.py:182 - Returning user info: {'id': 'd6663135-0f41-403f-bccb-684231c91a81', 'email': 'test@example.com', 'full_name': 'Test User', 'role': 'admin', 'created_at': '2025-08-01T02:01:02.487819', 'updated_at': '2025-08-01T02:01:02.487819'}
2025-08-02 21:39:43 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:39:43 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:972 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x0000029075480230>> being returned to pool
2025-08-02 21:39:43 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:1429 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x0000029075480230>> rollback-on-return
2025-08-02 21:39:43 - app.db.session - ERROR - session.py:101 - Database session error: type object 'TestCase' has no attribute 'test_steps'
2025-08-02 21:39:43 - app.main - ERROR - main.py:401 - Unhandled Exception: type object 'TestCase' has no attribute 'test_steps' - Path: /api/v1/test-cases/
2025-08-02 21:39:43 - app.auth.security - INFO - security.py:142 - 
================================================================================
2025-08-02 21:39:43 - app.auth.security - INFO - security.py:143 - Authenticating request to http://127.0.0.1:8001/api/v1/test-cases/
2025-08-02 21:39:43 - app.auth.security - INFO - security.py:144 - Token: eyJhbGciOiJIUzI1NiIs...
2025-08-02 21:39:43 - app.auth.security - INFO - security.py:148 - Decoding JWT token...
2025-08-02 21:39:43 - app.auth.security - INFO - security.py:150 - Decoded payload: {'sub': 'd6663135-0f41-403f-bccb-684231c91a81', 'exp': 1754152765}
2025-08-02 21:39:43 - app.auth.security - INFO - security.py:157 - Looking up user with ID: d6663135-0f41-403f-bccb-684231c91a81
2025-08-02 21:39:43 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:739 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x0000029075480230>> checked out from pool
2025-08-02 21:39:43 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:1297 - Pool pre-ping on connection <AdaptedConnection <asyncpg.connection.Connection object at 0x0000029075480230>>
2025-08-02 21:39:44 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:39:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT users.id, users.email, users.full_name, users.hashed_password, users.role, users.is_active, users.created_at, users.updated_at 
FROM users 
WHERE users.id = $1::VARCHAR
2025-08-02 21:39:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.208s ago] ('d6663135-0f41-403f-bccb-684231c91a81',)
2025-08-02 21:39:44 - app.auth.security - INFO - security.py:170 - Successfully authenticated user: test@example.com (ID: d6663135-0f41-403f-bccb-684231c91a81)
2025-08-02 21:39:44 - app.auth.security - INFO - security.py:182 - Returning user info: {'id': 'd6663135-0f41-403f-bccb-684231c91a81', 'email': 'test@example.com', 'full_name': 'Test User', 'role': 'admin', 'created_at': '2025-08-01T02:01:02.487819', 'updated_at': '2025-08-01T02:01:02.487819'}
2025-08-02 21:39:44 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:39:44 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:972 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x0000029075480230>> being returned to pool
2025-08-02 21:39:44 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:1429 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x0000029075480230>> rollback-on-return
2025-08-02 21:39:44 - app.db.session - ERROR - session.py:101 - Database session error: type object 'TestCase' has no attribute 'test_steps'
2025-08-02 21:39:44 - app.main - ERROR - main.py:401 - Unhandled Exception: type object 'TestCase' has no attribute 'test_steps' - Path: /api/v1/test-cases/
2025-08-02 21:41:16 - app.auth.security - INFO - security.py:142 - 
================================================================================
2025-08-02 21:41:16 - app.auth.security - INFO - security.py:143 - Authenticating request to http://127.0.0.1:8001/api/v1/test-cases/
2025-08-02 21:41:16 - app.auth.security - INFO - security.py:144 - Token: eyJhbGciOiJIUzI1NiIs...
2025-08-02 21:41:16 - app.auth.security - INFO - security.py:148 - Decoding JWT token...
2025-08-02 21:41:16 - app.auth.security - INFO - security.py:150 - Decoded payload: {'sub': 'd6663135-0f41-403f-bccb-684231c91a81', 'exp': 1754152765}
2025-08-02 21:41:16 - app.auth.security - INFO - security.py:157 - Looking up user with ID: d6663135-0f41-403f-bccb-684231c91a81
2025-08-02 21:41:16 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:739 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x0000029075480230>> checked out from pool
2025-08-02 21:41:16 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:1297 - Pool pre-ping on connection <AdaptedConnection <asyncpg.connection.Connection object at 0x0000029075480230>>
2025-08-02 21:41:16 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:41:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT users.id, users.email, users.full_name, users.hashed_password, users.role, users.is_active, users.created_at, users.updated_at 
FROM users 
WHERE users.id = $1::VARCHAR
2025-08-02 21:41:16 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 93.54s ago] ('d6663135-0f41-403f-bccb-684231c91a81',)
2025-08-02 21:41:16 - app.auth.security - INFO - security.py:170 - Successfully authenticated user: test@example.com (ID: d6663135-0f41-403f-bccb-684231c91a81)
2025-08-02 21:41:16 - app.auth.security - INFO - security.py:182 - Returning user info: {'id': 'd6663135-0f41-403f-bccb-684231c91a81', 'email': 'test@example.com', 'full_name': 'Test User', 'role': 'admin', 'created_at': '2025-08-01T02:01:02.487819', 'updated_at': '2025-08-01T02:01:02.487819'}
2025-08-02 21:41:16 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:41:16 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:972 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x0000029075480230>> being returned to pool
2025-08-02 21:41:16 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:1429 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x0000029075480230>> rollback-on-return
2025-08-02 21:41:16 - app.db.session - ERROR - session.py:101 - Database session error: type object 'TestCase' has no attribute 'test_steps'
2025-08-02 21:41:16 - app.main - ERROR - main.py:401 - Unhandled Exception: type object 'TestCase' has no attribute 'test_steps' - Path: /api/v1/test-cases/
2025-08-02 21:41:56 - app.auth.security - INFO - security.py:142 - 
================================================================================
2025-08-02 21:41:56 - app.auth.security - INFO - security.py:143 - Authenticating request to http://127.0.0.1:8001/api/v1/test-cases/
2025-08-02 21:41:56 - app.auth.security - INFO - security.py:144 - Token: eyJhbGciOiJIUzI1NiIs...
2025-08-02 21:41:56 - app.auth.security - INFO - security.py:148 - Decoding JWT token...
2025-08-02 21:41:56 - app.auth.security - INFO - security.py:150 - Decoded payload: {'sub': 'd6663135-0f41-403f-bccb-684231c91a81', 'exp': 1754152765}
2025-08-02 21:41:56 - app.auth.security - INFO - security.py:157 - Looking up user with ID: d6663135-0f41-403f-bccb-684231c91a81
2025-08-02 21:41:56 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:739 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x0000029075480230>> checked out from pool
2025-08-02 21:41:56 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:1297 - Pool pre-ping on connection <AdaptedConnection <asyncpg.connection.Connection object at 0x0000029075480230>>
2025-08-02 21:41:57 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:41:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT users.id, users.email, users.full_name, users.hashed_password, users.role, users.is_active, users.created_at, users.updated_at 
FROM users 
WHERE users.id = $1::VARCHAR
2025-08-02 21:41:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 134.1s ago] ('d6663135-0f41-403f-bccb-684231c91a81',)
2025-08-02 21:41:57 - app.auth.security - INFO - security.py:170 - Successfully authenticated user: test@example.com (ID: d6663135-0f41-403f-bccb-684231c91a81)
2025-08-02 21:41:57 - app.auth.security - INFO - security.py:182 - Returning user info: {'id': 'd6663135-0f41-403f-bccb-684231c91a81', 'email': 'test@example.com', 'full_name': 'Test User', 'role': 'admin', 'created_at': '2025-08-01T02:01:02.487819', 'updated_at': '2025-08-01T02:01:02.487819'}
2025-08-02 21:41:57 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:41:57 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:972 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x0000029075480230>> being returned to pool
2025-08-02 21:41:57 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:1429 - Connection <AdaptedConnection <asyncpg.connection.Connection object at 0x0000029075480230>> rollback-on-return
2025-08-02 21:41:57 - app.db.session - ERROR - session.py:101 - Database session error: type object 'TestCase' has no attribute 'test_steps'
2025-08-02 21:41:57 - app.main - ERROR - main.py:401 - Unhandled Exception: type object 'TestCase' has no attribute 'test_steps' - Path: /api/v1/test-cases/
2025-08-02 21:42:58 - app.main - INFO - main.py:320 - Application shutdown
2025-08-02 21:43:00 - root - INFO - main.py:88 - ================================================================================
2025-08-02 21:43:00 - root - INFO - main.py:89 - Application starting with enhanced logging (level: INFO)
2025-08-02 21:43:00 - root - INFO - main.py:90 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 21:43:00 - root - INFO - main.py:91 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 21:43:00 - root - INFO - main.py:92 - ================================================================================
2025-08-02 21:43:01 - app.main - INFO - main.py:1407 - Initializing API routers...
2025-08-02 21:43:01 - app.main - INFO - main.py:1419 - API routers initialized successfully
2025-08-02 21:43:01 - app.main - INFO - main.py:246 - Starting database initialization...
2025-08-02 21:43:01 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x0000019DD4F6BBC0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 21:43:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:43:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:43:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:43:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:43:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:43:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:43:02 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x0000019DD4F6BBC0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 21:43:02 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x0000019DD4F6BBC0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 21:43:02 - app.main - INFO - main.py:276 - Disabling foreign key constraints...
2025-08-02 21:43:02 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:43:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 21:43:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00324s] {}
2025-08-02 21:43:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 21:43:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00130s] {}
2025-08-02 21:43:02 - app.main - INFO - main.py:291 - Dropping existing tables...
2025-08-02 21:43:02 - app.main - INFO - main.py:294 - Dropping table: activity_logs
2025-08-02 21:43:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 21:43:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00087s] {}
2025-08-02 21:43:03 - app.main - INFO - main.py:296 - Dropped table: activity_logs
2025-08-02 21:43:03 - app.main - INFO - main.py:294 - Dropping table: attachments
2025-08-02 21:43:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 21:43:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00075s] {}
2025-08-02 21:43:03 - app.main - INFO - main.py:296 - Dropped table: attachments
2025-08-02 21:43:03 - app.main - INFO - main.py:294 - Dropping table: comments
2025-08-02 21:43:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 21:43:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00089s] {}
2025-08-02 21:43:03 - app.main - INFO - main.py:296 - Dropped table: comments
2025-08-02 21:43:03 - app.main - INFO - main.py:294 - Dropping table: environments
2025-08-02 21:43:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 21:43:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00083s] {}
2025-08-02 21:43:03 - app.main - INFO - main.py:296 - Dropped table: environments
2025-08-02 21:43:03 - app.main - INFO - main.py:294 - Dropping table: projects
2025-08-02 21:43:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 21:43:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00078s] {}
2025-08-02 21:43:03 - app.main - INFO - main.py:296 - Dropped table: projects
2025-08-02 21:43:03 - app.main - INFO - main.py:294 - Dropping table: team_members
2025-08-02 21:43:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 21:43:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00082s] {}
2025-08-02 21:43:03 - app.main - INFO - main.py:296 - Dropped table: team_members
2025-08-02 21:43:03 - app.main - INFO - main.py:294 - Dropping table: teams
2025-08-02 21:43:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 21:43:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00116s] {}
2025-08-02 21:43:03 - app.main - INFO - main.py:296 - Dropped table: teams
2025-08-02 21:43:03 - app.main - INFO - main.py:294 - Dropping table: test_cases
2025-08-02 21:43:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 21:43:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00056s] {}
2025-08-02 21:43:03 - app.main - INFO - main.py:296 - Dropped table: test_cases
2025-08-02 21:43:03 - app.main - INFO - main.py:294 - Dropping table: test_executions
2025-08-02 21:43:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 21:43:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00072s] {}
2025-08-02 21:43:03 - app.main - INFO - main.py:296 - Dropped table: test_executions
2025-08-02 21:43:03 - app.main - INFO - main.py:294 - Dropping table: test_plan_test_cases
2025-08-02 21:43:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 21:43:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00201s] {}
2025-08-02 21:43:03 - app.main - INFO - main.py:296 - Dropped table: test_plan_test_cases
2025-08-02 21:43:03 - app.main - INFO - main.py:294 - Dropping table: test_plans
2025-08-02 21:43:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 21:43:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00081s] {}
2025-08-02 21:43:03 - app.main - INFO - main.py:296 - Dropped table: test_plans
2025-08-02 21:43:03 - app.main - INFO - main.py:294 - Dropping table: test_steps
2025-08-02 21:43:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 21:43:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00100s] {}
2025-08-02 21:43:04 - app.main - INFO - main.py:296 - Dropped table: test_steps
2025-08-02 21:43:04 - app.main - INFO - main.py:294 - Dropping table: users
2025-08-02 21:43:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 21:43:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00060s] {}
2025-08-02 21:43:04 - app.main - INFO - main.py:296 - Dropped table: users
2025-08-02 21:43:04 - app.main - INFO - main.py:302 - Creating database tables in order...
2025-08-02 21:43:04 - app.main - INFO - main.py:305 - Creating table: users
2025-08-02 21:43:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:43:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00102s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:43:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 21:43:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00120s] {}
2025-08-02 21:43:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 21:43:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00095s] {}
2025-08-02 21:43:04 - app.main - INFO - main.py:307 - Table created: users
2025-08-02 21:43:04 - app.main - INFO - main.py:305 - Creating table: teams
2025-08-02 21:43:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:43:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2592s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:43:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:43:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00212s] {}
2025-08-02 21:43:04 - app.main - INFO - main.py:307 - Table created: teams
2025-08-02 21:43:04 - app.main - INFO - main.py:305 - Creating table: projects
2025-08-02 21:43:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:43:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4336s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:43:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 21:43:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00184s] {}
2025-08-02 21:43:04 - app.main - INFO - main.py:307 - Table created: projects
2025-08-02 21:43:04 - app.main - INFO - main.py:305 - Creating table: environments
2025-08-02 21:43:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:43:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6094s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:43:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 21:43:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00129s] {}
2025-08-02 21:43:04 - app.main - INFO - main.py:307 - Table created: environments
2025-08-02 21:43:04 - app.main - INFO - main.py:305 - Creating table: test_cases
2025-08-02 21:43:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:43:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7852s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:43:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:43:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00134s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:43:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:43:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.09295s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 21:43:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:43:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1828s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:43:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 21:43:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00136s] {}
2025-08-02 21:43:05 - app.main - INFO - main.py:307 - Table created: test_cases
2025-08-02 21:43:05 - app.main - INFO - main.py:305 - Creating table: test_steps
2025-08-02 21:43:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:43:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.226s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:43:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 21:43:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00174s] {}
2025-08-02 21:43:05 - app.main - INFO - main.py:307 - Table created: test_steps
2025-08-02 21:43:05 - app.main - INFO - main.py:305 - Creating table: test_plans
2025-08-02 21:43:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:43:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.401s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:43:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:43:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6188s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:43:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:43:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00165s] {}
2025-08-02 21:43:05 - app.main - INFO - main.py:307 - Table created: test_plans
2025-08-02 21:43:05 - app.main - INFO - main.py:305 - Creating table: test_plan_test_cases
2025-08-02 21:43:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:43:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.667s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:43:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:43:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00143s] {}
2025-08-02 21:43:05 - app.main - INFO - main.py:307 - Table created: test_plan_test_cases
2025-08-02 21:43:05 - app.main - INFO - main.py:305 - Creating table: test_executions
2025-08-02 21:43:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:43:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.841s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:43:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:43:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.057s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 21:43:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 21:43:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00183s] {}
2025-08-02 21:43:06 - app.main - INFO - main.py:307 - Table created: test_executions
2025-08-02 21:43:06 - app.main - INFO - main.py:305 - Creating table: comments
2025-08-02 21:43:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:43:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.101s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:43:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:43:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.317s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:43:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 21:43:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00130s] {}
2025-08-02 21:43:06 - app.main - INFO - main.py:307 - Table created: comments
2025-08-02 21:43:06 - app.main - INFO - main.py:305 - Creating table: team_members
2025-08-02 21:43:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:43:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.367s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:43:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:43:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00283s] {}
2025-08-02 21:43:06 - app.main - INFO - main.py:307 - Table created: team_members
2025-08-02 21:43:06 - app.main - INFO - main.py:305 - Creating table: attachments
2025-08-02 21:43:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:43:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.544s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:43:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 21:43:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00209s] {}
2025-08-02 21:43:06 - app.main - INFO - main.py:307 - Table created: attachments
2025-08-02 21:43:06 - app.main - INFO - main.py:305 - Creating table: activity_logs
2025-08-02 21:43:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:43:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.725s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:43:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:43:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00125s] {}
2025-08-02 21:43:06 - app.main - INFO - main.py:307 - Table created: activity_logs
2025-08-02 21:43:06 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:43:07 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x0000019DD4F6BBC0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 21:43:07 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x0000019DD4F6BBC0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 21:43:07 - app.main - INFO - main.py:312 - All database tables created successfully
2025-08-02 21:43:59 - app.auth.security - INFO - security.py:142 - 
================================================================================
2025-08-02 21:43:59 - app.auth.security - INFO - security.py:143 - Authenticating request to http://127.0.0.1:8001/api/v1/test-cases/
2025-08-02 21:43:59 - app.auth.security - INFO - security.py:144 - Token: eyJhbGciOiJIUzI1NiIs...
2025-08-02 21:43:59 - app.auth.security - INFO - security.py:148 - Decoding JWT token...
2025-08-02 21:43:59 - app.auth.security - INFO - security.py:150 - Decoded payload: {'sub': 'd6663135-0f41-403f-bccb-684231c91a81', 'exp': 1754152765}
2025-08-02 21:43:59 - app.auth.security - INFO - security.py:157 - Looking up user with ID: d6663135-0f41-403f-bccb-684231c91a81
2025-08-02 21:43:59 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:898 - Created new connection <AdaptedConnection <asyncpg.connection.Connection object at 0x0000019DD509E210>>
2025-08-02 21:44:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:44:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] ()
2025-08-02 21:44:00 - sqlalchemy.engine.Engine - INFO - base.py:2345 - ROLLBACK
2025-08-02 21:44:00 - app.auth.security - ERROR - security.py:197 - Unexpected error during authentication: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.DuplicatePreparedStatementError'>: prepared statement "__asyncpg_stmt_3__" already exists
HINT:  
NOTE: pgbouncer with pool_mode set to "transaction" or
"statement" does not support prepared statements properly.
You have two options:

* if you are using pgbouncer for connection pooling to a
  single server, switch to the connection pool functionality
  provided by asyncpg, it is a much better option for this
  purpose;

* if you have no option of avoiding the use of pgbouncer,
  then you can set statement_cache_size to 0 when creating
  the asyncpg connection object.

[SQL: select pg_catalog.version()]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-08-02 21:44:00 - app.auth.security - ERROR - security.py:198 - Traceback: Traceback (most recent call last):
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 521, in _prepare_and_execute
    prepared_stmt, attributes = await adapt_connection._prepare(
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 768, in _prepare
    prepared_stmt = await self._connection.prepare(
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\asyncpg\connection.py", line 635, in prepare
    return await self._prepare(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\asyncpg\connection.py", line 653, in _prepare
    stmt = await self._get_statement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\asyncpg\connection.py", line 432, in _get_statement
    statement = await self._protocol.prepare(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg\\protocol\\protocol.pyx", line 165, in prepare
asyncpg.exceptions.DuplicatePreparedStatementError: prepared statement "__asyncpg_stmt_3__" already exists
HINT:  
NOTE: pgbouncer with pool_mode set to "transaction" or
"statement" does not support prepared statements properly.
You have two options:

* if you are using pgbouncer for connection pooling to a
  single server, switch to the connection pool functionality
  provided by asyncpg, it is a much better option for this
  purpose;

* if you have no option of avoiding the use of pgbouncer,
  then you can set statement_cache_size to 0 when creating
  the asyncpg connection object.


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 580, in execute
    self._adapt_connection.await_(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 558, in _prepare_and_execute
    self._handle_exception(error)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 508, in _handle_exception
    self._adapt_connection._handle_exception(error)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 792, in _handle_exception
    raise translated_error from error
sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.ProgrammingError: <class 'asyncpg.exceptions.DuplicatePreparedStatementError'>: prepared statement "__asyncpg_stmt_3__" already exists
HINT:  
NOTE: pgbouncer with pool_mode set to "transaction" or
"statement" does not support prepared statements properly.
You have two options:

* if you are using pgbouncer for connection pooling to a
  single server, switch to the connection pool functionality
  provided by asyncpg, it is a much better option for this
  purpose;

* if you have no option of avoiding the use of pgbouncer,
  then you can set statement_cache_size to 0 when creating
  the asyncpg connection object.


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 160, in get_current_user
    result = await db.execute(
             ^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\ext\asyncio\session.py", line 463, in execute
    result = await greenlet_spawn(
             ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
             ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 2365, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 2241, in _execute_internal
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 2110, in _connection_for_bind
    return trans._connection_for_bind(engine, execution_options)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<string>", line 2, in _connection_for_bind
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 1189, in _connection_for_bind
    conn = bind.connect()
           ^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 3273, in connect
    return self._connection_cls(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
                             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 3297, in raw_connection
    return self.pool.connect()
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 449, in connect
    return _ConnectionFairy._checkout(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 1264, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 713, in checkout
    rec = pool._do_get()
          ^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\impl.py", line 179, in _do_get
    with util.safe_reraise():
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\impl.py", line 177, in _do_get
    return self._create_connection()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 390, in _create_connection
    return _ConnectionRecord(self)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 675, in __init__
    self.__connect()
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 915, in __connect
    )._exec_w_sync_on_first_run(self.dbapi_connection, self)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\event\attr.py", line 483, in _exec_w_sync_on_first_run
    self(*args, **kw)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\event\attr.py", line 497, in __call__
    fn(*args, **kw)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\langhelpers.py", line 1997, in go
    return once_fn(*arg, **kw)
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\create.py", line 752, in first_connect
    dialect.initialize(c)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\dialects\postgresql\base.py", line 3245, in initialize
    super().initialize(connection)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\default.py", line 523, in initialize
    self.server_version_info = self._get_server_version_info(
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\dialects\postgresql\base.py", line 3513, in _get_server_version_info
    v = connection.exec_driver_sql("select pg_catalog.version()").scalar()
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 1775, in exec_driver_sql
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 580, in execute
    self._adapt_connection.await_(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 558, in _prepare_and_execute
    self._handle_exception(error)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 508, in _handle_exception
    self._adapt_connection._handle_exception(error)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 792, in _handle_exception
    raise translated_error from error
sqlalchemy.exc.ProgrammingError: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.DuplicatePreparedStatementError'>: prepared statement "__asyncpg_stmt_3__" already exists
HINT:  
NOTE: pgbouncer with pool_mode set to "transaction" or
"statement" does not support prepared statements properly.
You have two options:

* if you are using pgbouncer for connection pooling to a
  single server, switch to the connection pool functionality
  provided by asyncpg, it is a much better option for this
  purpose;

* if you have no option of avoiding the use of pgbouncer,
  then you can set statement_cache_size to 0 when creating
  the asyncpg connection object.

[SQL: select pg_catalog.version()]
(Background on this error at: https://sqlalche.me/e/20/f405)

2025-08-02 21:44:00 - app.db.session - ERROR - session.py:101 - Database session error: 500: An error occurred during authentication: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.DuplicatePreparedStatementError'>: prepared statement "__asyncpg_stmt_3__" already exists
HINT:  
NOTE: pgbouncer with pool_mode set to "transaction" or
"statement" does not support prepared statements properly.
You have two options:

* if you are using pgbouncer for connection pooling to a
  single server, switch to the connection pool functionality
  provided by asyncpg, it is a much better option for this
  purpose;

* if you have no option of avoiding the use of pgbouncer,
  then you can set statement_cache_size to 0 when creating
  the asyncpg connection object.

[SQL: select pg_catalog.version()]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-08-02 21:44:00 - app.main - WARNING - main.py:391 - HTTP Exception: 500 - An error occurred during authentication: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.DuplicatePreparedStatementError'>: prepared statement "__asyncpg_stmt_3__" already exists
HINT:  
NOTE: pgbouncer with pool_mode set to "transaction" or
"statement" does not support prepared statements properly.
You have two options:

* if you are using pgbouncer for connection pooling to a
  single server, switch to the connection pool functionality
  provided by asyncpg, it is a much better option for this
  purpose;

* if you have no option of avoiding the use of pgbouncer,
  then you can set statement_cache_size to 0 when creating
  the asyncpg connection object.

[SQL: select pg_catalog.version()]
(Background on this error at: https://sqlalche.me/e/20/f405) - Path: /api/v1/test-cases/
2025-08-02 21:44:00 - app.auth.security - INFO - security.py:142 - 
================================================================================
2025-08-02 21:44:00 - app.auth.security - INFO - security.py:143 - Authenticating request to http://127.0.0.1:8001/api/v1/test-cases/
2025-08-02 21:44:00 - app.auth.security - INFO - security.py:144 - Token: eyJhbGciOiJIUzI1NiIs...
2025-08-02 21:44:00 - app.auth.security - INFO - security.py:148 - Decoding JWT token...
2025-08-02 21:44:00 - app.auth.security - INFO - security.py:150 - Decoded payload: {'sub': 'd6663135-0f41-403f-bccb-684231c91a81', 'exp': 1754152765}
2025-08-02 21:44:00 - app.auth.security - INFO - security.py:157 - Looking up user with ID: d6663135-0f41-403f-bccb-684231c91a81
2025-08-02 21:44:01 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:898 - Created new connection <AdaptedConnection <asyncpg.connection.Connection object at 0x0000019DD62D8500>>
2025-08-02 21:44:01 - app.auth.security - ERROR - security.py:197 - Unexpected error during authentication: prepared statement "__asyncpg_stmt_4__" already exists
HINT:  
NOTE: pgbouncer with pool_mode set to "transaction" or
"statement" does not support prepared statements properly.
You have two options:

* if you are using pgbouncer for connection pooling to a
  single server, switch to the connection pool functionality
  provided by asyncpg, it is a much better option for this
  purpose;

* if you have no option of avoiding the use of pgbouncer,
  then you can set statement_cache_size to 0 when creating
  the asyncpg connection object.

2025-08-02 21:44:01 - app.auth.security - ERROR - security.py:198 - Traceback: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 160, in get_current_user
    result = await db.execute(
             ^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\ext\asyncio\session.py", line 463, in execute
    result = await greenlet_spawn(
             ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 201, in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 2365, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 2241, in _execute_internal
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 2110, in _connection_for_bind
    return trans._connection_for_bind(engine, execution_options)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<string>", line 2, in _connection_for_bind
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 1189, in _connection_for_bind
    conn = bind.connect()
           ^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 3273, in connect
    return self._connection_cls(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
                             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 3297, in raw_connection
    return self.pool.connect()
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 449, in connect
    return _ConnectionFairy._checkout(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 1264, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 713, in checkout
    rec = pool._do_get()
          ^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\impl.py", line 179, in _do_get
    with util.safe_reraise():
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\impl.py", line 177, in _do_get
    return self._create_connection()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 390, in _create_connection
    return _ConnectionRecord(self)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 675, in __init__
    self.__connect()
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 915, in __connect
    )._exec_w_sync_on_first_run(self.dbapi_connection, self)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\event\attr.py", line 483, in _exec_w_sync_on_first_run
    self(*args, **kw)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\event\attr.py", line 497, in __call__
    fn(*args, **kw)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\create.py", line 724, in on_connect
    do_on_connect(dbapi_connection)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 1273, in connect
    conn.await_(self.setup_asyncpg_json_codec(conn))
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 1199, in setup_asyncpg_json_codec
    await asyncpg_connection.set_type_codec(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\asyncpg\connection.py", line 1376, in set_type_codec
    typeinfo = await self._introspect_type(typename, schema)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\asyncpg\connection.py", line 542, in _introspect_type
    rows = await self._execute(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\asyncpg\connection.py", line 1864, in _execute
    result, _ = await self.__execute(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\asyncpg\connection.py", line 1961, in __execute
    result, stmt = await self._do_execute(
                   ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\asyncpg\connection.py", line 2004, in _do_execute
    stmt = await self._get_statement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\asyncpg\connection.py", line 432, in _get_statement
    statement = await self._protocol.prepare(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg\\protocol\\protocol.pyx", line 165, in prepare
asyncpg.exceptions.DuplicatePreparedStatementError: prepared statement "__asyncpg_stmt_4__" already exists
HINT:  
NOTE: pgbouncer with pool_mode set to "transaction" or
"statement" does not support prepared statements properly.
You have two options:

* if you are using pgbouncer for connection pooling to a
  single server, switch to the connection pool functionality
  provided by asyncpg, it is a much better option for this
  purpose;

* if you have no option of avoiding the use of pgbouncer,
  then you can set statement_cache_size to 0 when creating
  the asyncpg connection object.


2025-08-02 21:44:01 - app.db.session - ERROR - session.py:101 - Database session error: 500: An error occurred during authentication: prepared statement "__asyncpg_stmt_4__" already exists
HINT:  
NOTE: pgbouncer with pool_mode set to "transaction" or
"statement" does not support prepared statements properly.
You have two options:

* if you are using pgbouncer for connection pooling to a
  single server, switch to the connection pool functionality
  provided by asyncpg, it is a much better option for this
  purpose;

* if you have no option of avoiding the use of pgbouncer,
  then you can set statement_cache_size to 0 when creating
  the asyncpg connection object.

2025-08-02 21:44:01 - app.main - WARNING - main.py:391 - HTTP Exception: 500 - An error occurred during authentication: prepared statement "__asyncpg_stmt_4__" already exists
HINT:  
NOTE: pgbouncer with pool_mode set to "transaction" or
"statement" does not support prepared statements properly.
You have two options:

* if you are using pgbouncer for connection pooling to a
  single server, switch to the connection pool functionality
  provided by asyncpg, it is a much better option for this
  purpose;

* if you have no option of avoiding the use of pgbouncer,
  then you can set statement_cache_size to 0 when creating
  the asyncpg connection object.
 - Path: /api/v1/test-cases/
2025-08-02 21:44:58 - app.main - INFO - main.py:320 - Application shutdown
2025-08-02 21:45:00 - root - INFO - main.py:88 - ================================================================================
2025-08-02 21:45:00 - root - INFO - main.py:89 - Application starting with enhanced logging (level: INFO)
2025-08-02 21:45:00 - root - INFO - main.py:90 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 21:45:00 - root - INFO - main.py:91 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 21:45:00 - root - INFO - main.py:92 - ================================================================================
2025-08-02 21:45:01 - app.main - INFO - main.py:1407 - Initializing API routers...
2025-08-02 21:45:01 - app.main - INFO - main.py:1419 - API routers initialized successfully
2025-08-02 21:45:01 - app.main - INFO - main.py:246 - Starting database initialization...
2025-08-02 21:45:01 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x0000024CEBC60040; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 21:45:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:45:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:45:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:45:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:45:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:45:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:45:02 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x0000024CEBC60040; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 21:45:02 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x0000024CEBC60040; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 21:45:02 - app.main - INFO - main.py:276 - Disabling foreign key constraints...
2025-08-02 21:45:02 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:45:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 21:45:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00131s] {}
2025-08-02 21:45:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 21:45:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00124s] {}
2025-08-02 21:45:02 - app.main - INFO - main.py:291 - Dropping existing tables...
2025-08-02 21:45:02 - app.main - INFO - main.py:294 - Dropping table: activity_logs
2025-08-02 21:45:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 21:45:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00127s] {}
2025-08-02 21:45:02 - app.main - INFO - main.py:296 - Dropped table: activity_logs
2025-08-02 21:45:02 - app.main - INFO - main.py:294 - Dropping table: attachments
2025-08-02 21:45:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 21:45:02 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00081s] {}
2025-08-02 21:45:03 - app.main - INFO - main.py:296 - Dropped table: attachments
2025-08-02 21:45:03 - app.main - INFO - main.py:294 - Dropping table: comments
2025-08-02 21:45:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 21:45:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00090s] {}
2025-08-02 21:45:03 - app.main - INFO - main.py:296 - Dropped table: comments
2025-08-02 21:45:03 - app.main - INFO - main.py:294 - Dropping table: environments
2025-08-02 21:45:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 21:45:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00109s] {}
2025-08-02 21:45:03 - app.main - INFO - main.py:296 - Dropped table: environments
2025-08-02 21:45:03 - app.main - INFO - main.py:294 - Dropping table: projects
2025-08-02 21:45:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 21:45:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00069s] {}
2025-08-02 21:45:03 - app.main - INFO - main.py:296 - Dropped table: projects
2025-08-02 21:45:03 - app.main - INFO - main.py:294 - Dropping table: team_members
2025-08-02 21:45:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 21:45:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00080s] {}
2025-08-02 21:45:03 - app.main - INFO - main.py:296 - Dropped table: team_members
2025-08-02 21:45:03 - app.main - INFO - main.py:294 - Dropping table: teams
2025-08-02 21:45:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 21:45:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00105s] {}
2025-08-02 21:45:03 - app.main - INFO - main.py:296 - Dropped table: teams
2025-08-02 21:45:03 - app.main - INFO - main.py:294 - Dropping table: test_cases
2025-08-02 21:45:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 21:45:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00071s] {}
2025-08-02 21:45:03 - app.main - INFO - main.py:296 - Dropped table: test_cases
2025-08-02 21:45:03 - app.main - INFO - main.py:294 - Dropping table: test_executions
2025-08-02 21:45:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 21:45:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00107s] {}
2025-08-02 21:45:03 - app.main - INFO - main.py:296 - Dropped table: test_executions
2025-08-02 21:45:03 - app.main - INFO - main.py:294 - Dropping table: test_plan_test_cases
2025-08-02 21:45:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 21:45:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00117s] {}
2025-08-02 21:45:03 - app.main - INFO - main.py:296 - Dropped table: test_plan_test_cases
2025-08-02 21:45:03 - app.main - INFO - main.py:294 - Dropping table: test_plans
2025-08-02 21:45:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 21:45:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00073s] {}
2025-08-02 21:45:03 - app.main - INFO - main.py:296 - Dropped table: test_plans
2025-08-02 21:45:03 - app.main - INFO - main.py:294 - Dropping table: test_steps
2025-08-02 21:45:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 21:45:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00049s] {}
2025-08-02 21:45:03 - app.main - INFO - main.py:296 - Dropped table: test_steps
2025-08-02 21:45:03 - app.main - INFO - main.py:294 - Dropping table: users
2025-08-02 21:45:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 21:45:03 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00102s] {}
2025-08-02 21:45:04 - app.main - INFO - main.py:296 - Dropped table: users
2025-08-02 21:45:04 - app.main - INFO - main.py:302 - Creating database tables in order...
2025-08-02 21:45:04 - app.main - INFO - main.py:305 - Creating table: users
2025-08-02 21:45:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00104s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 21:45:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00151s] {}
2025-08-02 21:45:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 21:45:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00191s] {}
2025-08-02 21:45:04 - app.main - INFO - main.py:307 - Table created: users
2025-08-02 21:45:04 - app.main - INFO - main.py:305 - Creating table: teams
2025-08-02 21:45:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2599s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:45:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00175s] {}
2025-08-02 21:45:04 - app.main - INFO - main.py:307 - Table created: teams
2025-08-02 21:45:04 - app.main - INFO - main.py:305 - Creating table: projects
2025-08-02 21:45:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4407s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 21:45:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00128s] {}
2025-08-02 21:45:04 - app.main - INFO - main.py:307 - Table created: projects
2025-08-02 21:45:04 - app.main - INFO - main.py:305 - Creating table: environments
2025-08-02 21:45:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6136s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 21:45:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00143s] {}
2025-08-02 21:45:04 - app.main - INFO - main.py:307 - Table created: environments
2025-08-02 21:45:04 - app.main - INFO - main.py:305 - Creating table: test_cases
2025-08-02 21:45:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7865s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00278s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:04 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.08979s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1756s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 21:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00122s] {}
2025-08-02 21:45:05 - app.main - INFO - main.py:307 - Table created: test_cases
2025-08-02 21:45:05 - app.main - INFO - main.py:305 - Creating table: test_steps
2025-08-02 21:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.221s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 21:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00074s] {}
2025-08-02 21:45:05 - app.main - INFO - main.py:307 - Table created: test_steps
2025-08-02 21:45:05 - app.main - INFO - main.py:305 - Creating table: test_plans
2025-08-02 21:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.39s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6004s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00129s] {}
2025-08-02 21:45:05 - app.main - INFO - main.py:307 - Table created: test_plans
2025-08-02 21:45:05 - app.main - INFO - main.py:305 - Creating table: test_plan_test_cases
2025-08-02 21:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.648s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00113s] {}
2025-08-02 21:45:05 - app.main - INFO - main.py:307 - Table created: test_plan_test_cases
2025-08-02 21:45:05 - app.main - INFO - main.py:305 - Creating table: test_executions
2025-08-02 21:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.825s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:05 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.037s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 21:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00160s] {}
2025-08-02 21:45:06 - app.main - INFO - main.py:307 - Table created: test_executions
2025-08-02 21:45:06 - app.main - INFO - main.py:305 - Creating table: comments
2025-08-02 21:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.085s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.297s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 21:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00120s] {}
2025-08-02 21:45:06 - app.main - INFO - main.py:307 - Table created: comments
2025-08-02 21:45:06 - app.main - INFO - main.py:305 - Creating table: team_members
2025-08-02 21:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.345s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00105s] {}
2025-08-02 21:45:06 - app.main - INFO - main.py:307 - Table created: team_members
2025-08-02 21:45:06 - app.main - INFO - main.py:305 - Creating table: attachments
2025-08-02 21:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.522s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 21:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00225s] {}
2025-08-02 21:45:06 - app.main - INFO - main.py:307 - Table created: attachments
2025-08-02 21:45:06 - app.main - INFO - main.py:305 - Creating table: activity_logs
2025-08-02 21:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.713s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:45:06 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00128s] {}
2025-08-02 21:45:06 - app.main - INFO - main.py:307 - Table created: activity_logs
2025-08-02 21:45:06 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:45:06 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x0000024CEBC60040; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 21:45:06 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x0000024CEBC60040; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 21:45:06 - app.main - INFO - main.py:312 - All database tables created successfully
2025-08-02 21:45:43 - app.main - INFO - main.py:320 - Application shutdown
2025-08-02 21:45:45 - root - INFO - main.py:88 - ================================================================================
2025-08-02 21:45:45 - root - INFO - main.py:89 - Application starting with enhanced logging (level: INFO)
2025-08-02 21:45:45 - root - INFO - main.py:90 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 21:45:45 - root - INFO - main.py:91 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 21:45:45 - root - INFO - main.py:92 - ================================================================================
2025-08-02 21:45:46 - app.main - INFO - main.py:1407 - Initializing API routers...
2025-08-02 21:45:46 - app.main - INFO - main.py:1419 - API routers initialized successfully
2025-08-02 21:45:46 - app.main - INFO - main.py:246 - Starting database initialization...
2025-08-02 21:45:46 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x00000164BDF20040; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 21:45:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:45:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:45:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:45:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:45:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:45:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:45:47 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x00000164BDF20040; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 21:45:47 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x00000164BDF20040; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 21:45:47 - app.main - INFO - main.py:276 - Disabling foreign key constraints...
2025-08-02 21:45:47 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:45:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 21:45:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00177s] {}
2025-08-02 21:45:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 21:45:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00160s] {}
2025-08-02 21:45:47 - app.main - INFO - main.py:291 - Dropping existing tables...
2025-08-02 21:45:47 - app.main - INFO - main.py:294 - Dropping table: activity_logs
2025-08-02 21:45:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 21:45:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00078s] {}
2025-08-02 21:45:47 - app.main - INFO - main.py:296 - Dropped table: activity_logs
2025-08-02 21:45:47 - app.main - INFO - main.py:294 - Dropping table: attachments
2025-08-02 21:45:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 21:45:47 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00075s] {}
2025-08-02 21:45:48 - app.main - INFO - main.py:296 - Dropped table: attachments
2025-08-02 21:45:48 - app.main - INFO - main.py:294 - Dropping table: comments
2025-08-02 21:45:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 21:45:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00092s] {}
2025-08-02 21:45:48 - app.main - INFO - main.py:296 - Dropped table: comments
2025-08-02 21:45:48 - app.main - INFO - main.py:294 - Dropping table: environments
2025-08-02 21:45:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 21:45:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00092s] {}
2025-08-02 21:45:48 - app.main - INFO - main.py:296 - Dropped table: environments
2025-08-02 21:45:48 - app.main - INFO - main.py:294 - Dropping table: projects
2025-08-02 21:45:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 21:45:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00043s] {}
2025-08-02 21:45:48 - app.main - INFO - main.py:296 - Dropped table: projects
2025-08-02 21:45:48 - app.main - INFO - main.py:294 - Dropping table: team_members
2025-08-02 21:45:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 21:45:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00127s] {}
2025-08-02 21:45:48 - app.main - INFO - main.py:296 - Dropped table: team_members
2025-08-02 21:45:48 - app.main - INFO - main.py:294 - Dropping table: teams
2025-08-02 21:45:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 21:45:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00079s] {}
2025-08-02 21:45:48 - app.main - INFO - main.py:296 - Dropped table: teams
2025-08-02 21:45:48 - app.main - INFO - main.py:294 - Dropping table: test_cases
2025-08-02 21:45:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 21:45:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00101s] {}
2025-08-02 21:45:48 - app.main - INFO - main.py:296 - Dropped table: test_cases
2025-08-02 21:45:48 - app.main - INFO - main.py:294 - Dropping table: test_executions
2025-08-02 21:45:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 21:45:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00053s] {}
2025-08-02 21:45:48 - app.main - INFO - main.py:296 - Dropped table: test_executions
2025-08-02 21:45:48 - app.main - INFO - main.py:294 - Dropping table: test_plan_test_cases
2025-08-02 21:45:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 21:45:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00100s] {}
2025-08-02 21:45:48 - app.main - INFO - main.py:296 - Dropped table: test_plan_test_cases
2025-08-02 21:45:48 - app.main - INFO - main.py:294 - Dropping table: test_plans
2025-08-02 21:45:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 21:45:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00174s] {}
2025-08-02 21:45:48 - app.main - INFO - main.py:296 - Dropped table: test_plans
2025-08-02 21:45:48 - app.main - INFO - main.py:294 - Dropping table: test_steps
2025-08-02 21:45:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 21:45:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00092s] {}
2025-08-02 21:45:48 - app.main - INFO - main.py:296 - Dropped table: test_steps
2025-08-02 21:45:48 - app.main - INFO - main.py:294 - Dropping table: users
2025-08-02 21:45:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 21:45:48 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00046s] {}
2025-08-02 21:45:49 - app.main - INFO - main.py:296 - Dropped table: users
2025-08-02 21:45:49 - app.main - INFO - main.py:302 - Creating database tables in order...
2025-08-02 21:45:49 - app.main - INFO - main.py:305 - Creating table: users
2025-08-02 21:45:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00068s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 21:45:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00160s] {}
2025-08-02 21:45:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 21:45:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00167s] {}
2025-08-02 21:45:49 - app.main - INFO - main.py:307 - Table created: users
2025-08-02 21:45:49 - app.main - INFO - main.py:305 - Creating table: teams
2025-08-02 21:45:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2763s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:45:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00253s] {}
2025-08-02 21:45:49 - app.main - INFO - main.py:307 - Table created: teams
2025-08-02 21:45:49 - app.main - INFO - main.py:305 - Creating table: projects
2025-08-02 21:45:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4638s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 21:45:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00134s] {}
2025-08-02 21:45:49 - app.main - INFO - main.py:307 - Table created: projects
2025-08-02 21:45:49 - app.main - INFO - main.py:305 - Creating table: environments
2025-08-02 21:45:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6456s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 21:45:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00192s] {}
2025-08-02 21:45:49 - app.main - INFO - main.py:307 - Table created: environments
2025-08-02 21:45:49 - app.main - INFO - main.py:305 - Creating table: test_cases
2025-08-02 21:45:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.8294s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:49 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00106s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.0955s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1904s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 21:45:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00210s] {}
2025-08-02 21:45:50 - app.main - INFO - main.py:307 - Table created: test_cases
2025-08-02 21:45:50 - app.main - INFO - main.py:305 - Creating table: test_steps
2025-08-02 21:45:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.297s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 21:45:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00370s] {}
2025-08-02 21:45:50 - app.main - INFO - main.py:307 - Table created: test_steps
2025-08-02 21:45:50 - app.main - INFO - main.py:305 - Creating table: test_plans
2025-08-02 21:45:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.485s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6576s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:45:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00123s] {}
2025-08-02 21:45:50 - app.main - INFO - main.py:307 - Table created: test_plans
2025-08-02 21:45:50 - app.main - INFO - main.py:305 - Creating table: test_plan_test_cases
2025-08-02 21:45:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.76s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:45:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00163s] {}
2025-08-02 21:45:50 - app.main - INFO - main.py:307 - Table created: test_plan_test_cases
2025-08-02 21:45:50 - app.main - INFO - main.py:305 - Creating table: test_executions
2025-08-02 21:45:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:50 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.951s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.127s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 21:45:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00188s] {}
2025-08-02 21:45:51 - app.main - INFO - main.py:307 - Table created: test_executions
2025-08-02 21:45:51 - app.main - INFO - main.py:305 - Creating table: comments
2025-08-02 21:45:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.231s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.404s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 21:45:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00459s] {}
2025-08-02 21:45:51 - app.main - INFO - main.py:307 - Table created: comments
2025-08-02 21:45:51 - app.main - INFO - main.py:305 - Creating table: team_members
2025-08-02 21:45:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.51s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:45:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00161s] {}
2025-08-02 21:45:51 - app.main - INFO - main.py:307 - Table created: team_members
2025-08-02 21:45:51 - app.main - INFO - main.py:305 - Creating table: attachments
2025-08-02 21:45:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.692s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 21:45:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00317s] {}
2025-08-02 21:45:51 - app.main - INFO - main.py:307 - Table created: attachments
2025-08-02 21:45:51 - app.main - INFO - main.py:305 - Creating table: activity_logs
2025-08-02 21:45:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:45:51 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.876s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:45:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:45:52 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00099s] {}
2025-08-02 21:45:52 - app.main - INFO - main.py:307 - Table created: activity_logs
2025-08-02 21:45:52 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:45:52 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x00000164BDF20040; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 21:45:52 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x00000164BDF20040; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 21:45:52 - app.main - INFO - main.py:312 - All database tables created successfully
2025-08-02 21:46:50 - app.auth.security - INFO - security.py:142 - 
================================================================================
2025-08-02 21:46:50 - app.auth.security - INFO - security.py:143 - Authenticating request to http://127.0.0.1:8001/api/v1/test-cases/
2025-08-02 21:46:50 - app.auth.security - INFO - security.py:144 - Token: eyJhbGciOiJIUzI1NiIs...
2025-08-02 21:46:50 - app.auth.security - INFO - security.py:148 - Decoding JWT token...
2025-08-02 21:46:50 - app.auth.security - INFO - security.py:150 - Decoded payload: {'sub': 'd6663135-0f41-403f-bccb-684231c91a81', 'exp': 1754152765}
2025-08-02 21:46:50 - app.auth.security - INFO - security.py:157 - Looking up user with ID: d6663135-0f41-403f-bccb-684231c91a81
2025-08-02 21:46:50 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:898 - Created new connection <AdaptedConnection <asyncpg.connection.Connection object at 0x00000164BEFC2300>>
2025-08-02 21:46:51 - app.auth.security - ERROR - security.py:197 - Unexpected error during authentication: prepared statement "__asyncpg_stmt_2__" already exists
HINT:  
NOTE: pgbouncer with pool_mode set to "transaction" or
"statement" does not support prepared statements properly.
You have two options:

* if you are using pgbouncer for connection pooling to a
  single server, switch to the connection pool functionality
  provided by asyncpg, it is a much better option for this
  purpose;

* if you have no option of avoiding the use of pgbouncer,
  then you can set statement_cache_size to 0 when creating
  the asyncpg connection object.

2025-08-02 21:46:51 - app.auth.security - ERROR - security.py:198 - Traceback: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 160, in get_current_user
    result = await db.execute(
             ^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\ext\asyncio\session.py", line 463, in execute
    result = await greenlet_spawn(
             ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 201, in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 2365, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 2241, in _execute_internal
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 2110, in _connection_for_bind
    return trans._connection_for_bind(engine, execution_options)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<string>", line 2, in _connection_for_bind
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 1189, in _connection_for_bind
    conn = bind.connect()
           ^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 3273, in connect
    return self._connection_cls(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
                             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 3297, in raw_connection
    return self.pool.connect()
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 449, in connect
    return _ConnectionFairy._checkout(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 1264, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 713, in checkout
    rec = pool._do_get()
          ^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\impl.py", line 179, in _do_get
    with util.safe_reraise():
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\impl.py", line 177, in _do_get
    return self._create_connection()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 390, in _create_connection
    return _ConnectionRecord(self)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 675, in __init__
    self.__connect()
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 915, in __connect
    )._exec_w_sync_on_first_run(self.dbapi_connection, self)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\event\attr.py", line 483, in _exec_w_sync_on_first_run
    self(*args, **kw)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\event\attr.py", line 497, in __call__
    fn(*args, **kw)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\create.py", line 724, in on_connect
    do_on_connect(dbapi_connection)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 1274, in connect
    conn.await_(self.setup_asyncpg_jsonb_codec(conn))
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 1232, in setup_asyncpg_jsonb_codec
    await asyncpg_connection.set_type_codec(
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\asyncpg\connection.py", line 1376, in set_type_codec
    typeinfo = await self._introspect_type(typename, schema)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\asyncpg\connection.py", line 542, in _introspect_type
    rows = await self._execute(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\asyncpg\connection.py", line 1864, in _execute
    result, _ = await self.__execute(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\asyncpg\connection.py", line 1961, in __execute
    result, stmt = await self._do_execute(
                   ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\asyncpg\connection.py", line 2004, in _do_execute
    stmt = await self._get_statement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\asyncpg\connection.py", line 432, in _get_statement
    statement = await self._protocol.prepare(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg\\protocol\\protocol.pyx", line 165, in prepare
asyncpg.exceptions.DuplicatePreparedStatementError: prepared statement "__asyncpg_stmt_2__" already exists
HINT:  
NOTE: pgbouncer with pool_mode set to "transaction" or
"statement" does not support prepared statements properly.
You have two options:

* if you are using pgbouncer for connection pooling to a
  single server, switch to the connection pool functionality
  provided by asyncpg, it is a much better option for this
  purpose;

* if you have no option of avoiding the use of pgbouncer,
  then you can set statement_cache_size to 0 when creating
  the asyncpg connection object.


2025-08-02 21:46:51 - app.db.session - ERROR - session.py:101 - Database session error: 500: An error occurred during authentication: prepared statement "__asyncpg_stmt_2__" already exists
HINT:  
NOTE: pgbouncer with pool_mode set to "transaction" or
"statement" does not support prepared statements properly.
You have two options:

* if you are using pgbouncer for connection pooling to a
  single server, switch to the connection pool functionality
  provided by asyncpg, it is a much better option for this
  purpose;

* if you have no option of avoiding the use of pgbouncer,
  then you can set statement_cache_size to 0 when creating
  the asyncpg connection object.

2025-08-02 21:46:51 - app.main - WARNING - main.py:391 - HTTP Exception: 500 - An error occurred during authentication: prepared statement "__asyncpg_stmt_2__" already exists
HINT:  
NOTE: pgbouncer with pool_mode set to "transaction" or
"statement" does not support prepared statements properly.
You have two options:

* if you are using pgbouncer for connection pooling to a
  single server, switch to the connection pool functionality
  provided by asyncpg, it is a much better option for this
  purpose;

* if you have no option of avoiding the use of pgbouncer,
  then you can set statement_cache_size to 0 when creating
  the asyncpg connection object.
 - Path: /api/v1/test-cases/
2025-08-02 21:46:51 - app.main - INFO - main.py:320 - Application shutdown
2025-08-02 21:46:53 - root - INFO - main.py:88 - ================================================================================
2025-08-02 21:46:53 - root - INFO - main.py:89 - Application starting with enhanced logging (level: INFO)
2025-08-02 21:46:53 - root - INFO - main.py:90 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 21:46:53 - root - INFO - main.py:91 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 21:46:53 - root - INFO - main.py:92 - ================================================================================
2025-08-02 21:46:54 - app.main - INFO - main.py:1407 - Initializing API routers...
2025-08-02 21:46:54 - app.main - INFO - main.py:1419 - API routers initialized successfully
2025-08-02 21:46:54 - app.main - INFO - main.py:246 - Starting database initialization...
2025-08-02 21:46:55 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x000001E58AB6C040; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 21:46:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:46:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:46:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:46:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:46:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:46:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:46:55 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x000001E58AB6C040; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 21:46:55 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x000001E58AB6C040; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 21:46:55 - app.main - INFO - main.py:276 - Disabling foreign key constraints...
2025-08-02 21:46:55 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:46:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 21:46:55 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00283s] {}
2025-08-02 21:46:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 21:46:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00280s] {}
2025-08-02 21:46:56 - app.main - INFO - main.py:291 - Dropping existing tables...
2025-08-02 21:46:56 - app.main - INFO - main.py:294 - Dropping table: activity_logs
2025-08-02 21:46:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 21:46:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00078s] {}
2025-08-02 21:46:56 - app.main - INFO - main.py:296 - Dropped table: activity_logs
2025-08-02 21:46:56 - app.main - INFO - main.py:294 - Dropping table: attachments
2025-08-02 21:46:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 21:46:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00092s] {}
2025-08-02 21:46:56 - app.main - INFO - main.py:296 - Dropped table: attachments
2025-08-02 21:46:56 - app.main - INFO - main.py:294 - Dropping table: comments
2025-08-02 21:46:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 21:46:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00080s] {}
2025-08-02 21:46:56 - app.main - INFO - main.py:296 - Dropped table: comments
2025-08-02 21:46:56 - app.main - INFO - main.py:294 - Dropping table: environments
2025-08-02 21:46:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 21:46:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00097s] {}
2025-08-02 21:46:56 - app.main - INFO - main.py:296 - Dropped table: environments
2025-08-02 21:46:56 - app.main - INFO - main.py:294 - Dropping table: projects
2025-08-02 21:46:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 21:46:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00088s] {}
2025-08-02 21:46:56 - app.main - INFO - main.py:296 - Dropped table: projects
2025-08-02 21:46:56 - app.main - INFO - main.py:294 - Dropping table: team_members
2025-08-02 21:46:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 21:46:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00055s] {}
2025-08-02 21:46:56 - app.main - INFO - main.py:296 - Dropped table: team_members
2025-08-02 21:46:56 - app.main - INFO - main.py:294 - Dropping table: teams
2025-08-02 21:46:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 21:46:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00067s] {}
2025-08-02 21:46:56 - app.main - INFO - main.py:296 - Dropped table: teams
2025-08-02 21:46:56 - app.main - INFO - main.py:294 - Dropping table: test_cases
2025-08-02 21:46:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 21:46:56 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00321s] {}
2025-08-02 21:46:57 - app.main - INFO - main.py:296 - Dropped table: test_cases
2025-08-02 21:46:57 - app.main - INFO - main.py:294 - Dropping table: test_executions
2025-08-02 21:46:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 21:46:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00321s] {}
2025-08-02 21:46:57 - app.main - INFO - main.py:296 - Dropped table: test_executions
2025-08-02 21:46:57 - app.main - INFO - main.py:294 - Dropping table: test_plan_test_cases
2025-08-02 21:46:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 21:46:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00313s] {}
2025-08-02 21:46:57 - app.main - INFO - main.py:296 - Dropped table: test_plan_test_cases
2025-08-02 21:46:57 - app.main - INFO - main.py:294 - Dropping table: test_plans
2025-08-02 21:46:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 21:46:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00104s] {}
2025-08-02 21:46:57 - app.main - INFO - main.py:296 - Dropped table: test_plans
2025-08-02 21:46:57 - app.main - INFO - main.py:294 - Dropping table: test_steps
2025-08-02 21:46:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 21:46:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00085s] {}
2025-08-02 21:46:57 - app.main - INFO - main.py:296 - Dropped table: test_steps
2025-08-02 21:46:57 - app.main - INFO - main.py:294 - Dropping table: users
2025-08-02 21:46:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 21:46:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00090s] {}
2025-08-02 21:46:57 - app.main - INFO - main.py:296 - Dropped table: users
2025-08-02 21:46:57 - app.main - INFO - main.py:302 - Creating database tables in order...
2025-08-02 21:46:57 - app.main - INFO - main.py:305 - Creating table: users
2025-08-02 21:46:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:46:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00129s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:46:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 21:46:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00201s] {}
2025-08-02 21:46:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 21:46:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00152s] {}
2025-08-02 21:46:57 - app.main - INFO - main.py:307 - Table created: users
2025-08-02 21:46:57 - app.main - INFO - main.py:305 - Creating table: teams
2025-08-02 21:46:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:46:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2982s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:46:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:46:57 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00185s] {}
2025-08-02 21:46:58 - app.main - INFO - main.py:307 - Table created: teams
2025-08-02 21:46:58 - app.main - INFO - main.py:305 - Creating table: projects
2025-08-02 21:46:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:46:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.5029s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:46:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 21:46:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00207s] {}
2025-08-02 21:46:58 - app.main - INFO - main.py:307 - Table created: projects
2025-08-02 21:46:58 - app.main - INFO - main.py:305 - Creating table: environments
2025-08-02 21:46:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:46:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6996s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:46:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 21:46:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00165s] {}
2025-08-02 21:46:58 - app.main - INFO - main.py:307 - Table created: environments
2025-08-02 21:46:58 - app.main - INFO - main.py:305 - Creating table: test_cases
2025-08-02 21:46:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:46:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.9181s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:46:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:46:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00169s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:46:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:46:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1037s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 21:46:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:46:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2072s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:46:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 21:46:58 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00203s] {}
2025-08-02 21:46:59 - app.main - INFO - main.py:307 - Table created: test_cases
2025-08-02 21:46:59 - app.main - INFO - main.py:305 - Creating table: test_steps
2025-08-02 21:46:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:46:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.508s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:46:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 21:46:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00209s] {}
2025-08-02 21:46:59 - app.main - INFO - main.py:307 - Table created: test_steps
2025-08-02 21:46:59 - app.main - INFO - main.py:305 - Creating table: test_plans
2025-08-02 21:46:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:46:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.717s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:46:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:46:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.8212s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:46:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:46:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00255s] {}
2025-08-02 21:46:59 - app.main - INFO - main.py:307 - Table created: test_plans
2025-08-02 21:46:59 - app.main - INFO - main.py:305 - Creating table: test_plan_test_cases
2025-08-02 21:46:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:46:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.046s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:46:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:46:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00239s] {}
2025-08-02 21:46:59 - app.main - INFO - main.py:307 - Table created: test_plan_test_cases
2025-08-02 21:46:59 - app.main - INFO - main.py:305 - Creating table: test_executions
2025-08-02 21:46:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:46:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.256s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:46:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:46:59 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.34s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 21:47:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 21:47:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00236s] {}
2025-08-02 21:47:00 - app.main - INFO - main.py:307 - Table created: test_executions
2025-08-02 21:47:00 - app.main - INFO - main.py:305 - Creating table: comments
2025-08-02 21:47:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:47:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.555s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:47:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:47:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.636s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:47:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 21:47:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00193s] {}
2025-08-02 21:47:00 - app.main - INFO - main.py:307 - Table created: comments
2025-08-02 21:47:00 - app.main - INFO - main.py:305 - Creating table: team_members
2025-08-02 21:47:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:47:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.85s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:47:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:47:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00263s] {}
2025-08-02 21:47:00 - app.main - INFO - main.py:307 - Table created: team_members
2025-08-02 21:47:00 - app.main - INFO - main.py:305 - Creating table: attachments
2025-08-02 21:47:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:47:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 3.047s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:47:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 21:47:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00177s] {}
2025-08-02 21:47:00 - app.main - INFO - main.py:307 - Table created: attachments
2025-08-02 21:47:00 - app.main - INFO - main.py:305 - Creating table: activity_logs
2025-08-02 21:47:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:47:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 3.243s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:47:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:47:00 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00215s] {}
2025-08-02 21:47:01 - app.main - INFO - main.py:307 - Table created: activity_logs
2025-08-02 21:47:01 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:47:01 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x000001E58AB6C040; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 21:47:01 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x000001E58AB6C040; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 21:47:01 - app.main - INFO - main.py:312 - All database tables created successfully
2025-08-02 21:48:13 - app.main - INFO - main.py:320 - Application shutdown
2025-08-02 21:48:15 - root - INFO - main.py:88 - ================================================================================
2025-08-02 21:48:15 - root - INFO - main.py:89 - Application starting with enhanced logging (level: INFO)
2025-08-02 21:48:15 - root - INFO - main.py:90 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 21:48:15 - root - INFO - main.py:91 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 21:48:15 - root - INFO - main.py:92 - ================================================================================
2025-08-02 21:48:16 - app.main - INFO - main.py:1407 - Initializing API routers...
2025-08-02 21:48:16 - app.main - INFO - main.py:1419 - API routers initialized successfully
2025-08-02 21:48:16 - app.main - INFO - main.py:246 - Starting database initialization...
2025-08-02 21:48:17 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x00000298C9ECC150; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 21:48:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:48:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:48:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:48:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:48:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:48:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:48:17 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x00000298C9ECC150; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 21:48:17 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x00000298C9ECC150; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 21:48:17 - app.main - INFO - main.py:276 - Disabling foreign key constraints...
2025-08-02 21:48:17 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:48:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 21:48:17 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00103s] {}
2025-08-02 21:48:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 21:48:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00131s] {}
2025-08-02 21:48:18 - app.main - INFO - main.py:291 - Dropping existing tables...
2025-08-02 21:48:18 - app.main - INFO - main.py:294 - Dropping table: activity_logs
2025-08-02 21:48:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 21:48:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00054s] {}
2025-08-02 21:48:18 - app.main - INFO - main.py:296 - Dropped table: activity_logs
2025-08-02 21:48:18 - app.main - INFO - main.py:294 - Dropping table: attachments
2025-08-02 21:48:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 21:48:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00105s] {}
2025-08-02 21:48:18 - app.main - INFO - main.py:296 - Dropped table: attachments
2025-08-02 21:48:18 - app.main - INFO - main.py:294 - Dropping table: comments
2025-08-02 21:48:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 21:48:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00066s] {}
2025-08-02 21:48:18 - app.main - INFO - main.py:296 - Dropped table: comments
2025-08-02 21:48:18 - app.main - INFO - main.py:294 - Dropping table: environments
2025-08-02 21:48:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 21:48:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00099s] {}
2025-08-02 21:48:18 - app.main - INFO - main.py:296 - Dropped table: environments
2025-08-02 21:48:18 - app.main - INFO - main.py:294 - Dropping table: projects
2025-08-02 21:48:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 21:48:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00099s] {}
2025-08-02 21:48:18 - app.main - INFO - main.py:296 - Dropped table: projects
2025-08-02 21:48:18 - app.main - INFO - main.py:294 - Dropping table: team_members
2025-08-02 21:48:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 21:48:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00086s] {}
2025-08-02 21:48:18 - app.main - INFO - main.py:296 - Dropped table: team_members
2025-08-02 21:48:18 - app.main - INFO - main.py:294 - Dropping table: teams
2025-08-02 21:48:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 21:48:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00095s] {}
2025-08-02 21:48:18 - app.main - INFO - main.py:296 - Dropped table: teams
2025-08-02 21:48:18 - app.main - INFO - main.py:294 - Dropping table: test_cases
2025-08-02 21:48:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 21:48:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00084s] {}
2025-08-02 21:48:18 - app.main - INFO - main.py:296 - Dropped table: test_cases
2025-08-02 21:48:18 - app.main - INFO - main.py:294 - Dropping table: test_executions
2025-08-02 21:48:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 21:48:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00051s] {}
2025-08-02 21:48:18 - app.main - INFO - main.py:296 - Dropped table: test_executions
2025-08-02 21:48:18 - app.main - INFO - main.py:294 - Dropping table: test_plan_test_cases
2025-08-02 21:48:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 21:48:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00106s] {}
2025-08-02 21:48:18 - app.main - INFO - main.py:296 - Dropped table: test_plan_test_cases
2025-08-02 21:48:18 - app.main - INFO - main.py:294 - Dropping table: test_plans
2025-08-02 21:48:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 21:48:18 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00108s] {}
2025-08-02 21:48:19 - app.main - INFO - main.py:296 - Dropped table: test_plans
2025-08-02 21:48:19 - app.main - INFO - main.py:294 - Dropping table: test_steps
2025-08-02 21:48:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 21:48:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00120s] {}
2025-08-02 21:48:19 - app.main - INFO - main.py:296 - Dropped table: test_steps
2025-08-02 21:48:19 - app.main - INFO - main.py:294 - Dropping table: users
2025-08-02 21:48:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 21:48:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00115s] {}
2025-08-02 21:48:19 - app.main - INFO - main.py:296 - Dropped table: users
2025-08-02 21:48:19 - app.main - INFO - main.py:302 - Creating database tables in order...
2025-08-02 21:48:19 - app.main - INFO - main.py:305 - Creating table: users
2025-08-02 21:48:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00133s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 21:48:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00112s] {}
2025-08-02 21:48:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 21:48:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00213s] {}
2025-08-02 21:48:19 - app.main - INFO - main.py:307 - Table created: users
2025-08-02 21:48:19 - app.main - INFO - main.py:305 - Creating table: teams
2025-08-02 21:48:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2652s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:48:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00185s] {}
2025-08-02 21:48:19 - app.main - INFO - main.py:307 - Table created: teams
2025-08-02 21:48:19 - app.main - INFO - main.py:305 - Creating table: projects
2025-08-02 21:48:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4419s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 21:48:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00147s] {}
2025-08-02 21:48:19 - app.main - INFO - main.py:307 - Table created: projects
2025-08-02 21:48:19 - app.main - INFO - main.py:305 - Creating table: environments
2025-08-02 21:48:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6168s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 21:48:19 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00169s] {}
2025-08-02 21:48:20 - app.main - INFO - main.py:307 - Table created: environments
2025-08-02 21:48:20 - app.main - INFO - main.py:305 - Creating table: test_cases
2025-08-02 21:48:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.7936s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00162s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.08879s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1779s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 21:48:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00162s] {}
2025-08-02 21:48:20 - app.main - INFO - main.py:307 - Table created: test_cases
2025-08-02 21:48:20 - app.main - INFO - main.py:305 - Creating table: test_steps
2025-08-02 21:48:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.234s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 21:48:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00173s] {}
2025-08-02 21:48:20 - app.main - INFO - main.py:307 - Table created: test_steps
2025-08-02 21:48:20 - app.main - INFO - main.py:305 - Creating table: test_plans
2025-08-02 21:48:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.41s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6174s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:48:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00143s] {}
2025-08-02 21:48:20 - app.main - INFO - main.py:307 - Table created: test_plans
2025-08-02 21:48:20 - app.main - INFO - main.py:305 - Creating table: test_plan_test_cases
2025-08-02 21:48:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:20 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.674s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:48:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00135s] {}
2025-08-02 21:48:21 - app.main - INFO - main.py:307 - Table created: test_plan_test_cases
2025-08-02 21:48:21 - app.main - INFO - main.py:305 - Creating table: test_executions
2025-08-02 21:48:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.857s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.064s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 21:48:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00179s] {}
2025-08-02 21:48:21 - app.main - INFO - main.py:307 - Table created: test_executions
2025-08-02 21:48:21 - app.main - INFO - main.py:305 - Creating table: comments
2025-08-02 21:48:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.119s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.327s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 21:48:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00199s] {}
2025-08-02 21:48:21 - app.main - INFO - main.py:307 - Table created: comments
2025-08-02 21:48:21 - app.main - INFO - main.py:305 - Creating table: team_members
2025-08-02 21:48:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.387s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:48:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00155s] {}
2025-08-02 21:48:21 - app.main - INFO - main.py:307 - Table created: team_members
2025-08-02 21:48:21 - app.main - INFO - main.py:305 - Creating table: attachments
2025-08-02 21:48:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.562s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 21:48:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00132s] {}
2025-08-02 21:48:21 - app.main - INFO - main.py:307 - Table created: attachments
2025-08-02 21:48:21 - app.main - INFO - main.py:305 - Creating table: activity_logs
2025-08-02 21:48:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:21 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.738s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:22 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:48:22 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00119s] {}
2025-08-02 21:48:22 - app.main - INFO - main.py:307 - Table created: activity_logs
2025-08-02 21:48:22 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:48:22 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x00000298C9ECC150; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 21:48:22 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x00000298C9ECC150; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 21:48:22 - app.main - INFO - main.py:312 - All database tables created successfully
2025-08-02 21:48:35 - root - INFO - main.py:88 - ================================================================================
2025-08-02 21:48:35 - root - INFO - main.py:89 - Application starting with enhanced logging (level: DEBUG)
2025-08-02 21:48:35 - root - INFO - main.py:90 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 21:48:35 - root - INFO - main.py:91 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 21:48:35 - root - INFO - main.py:92 - ================================================================================
2025-08-02 21:48:35 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-08-02 21:48:35 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-08-02 21:48:35 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-08-02 21:48:35 - passlib.registry - DEBUG - registry.py:296 - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
2025-08-02 21:48:35 - app.api.v1.routes.auth - DEBUG - auth.py:34 - Environment variables: {
  "ALLUSERSPROFILE": "C:\\ProgramData",
  "APPDATA": "C:\\Users\\kunal\\AppData\\Roaming",
  "C:\\USERS\\KUNAL\\DOWNLOADS\\EMERGENTINTELLITEST-MAIN": "C:\\Program Files\\nodejs\\",
  "CHROME_CRASHPAD_PIPE_NAME": "\\\\.\\pipe\\crashpad_11300_YGFLEAWXLMRVRBOK",
  "COMMONPROGRAMFILES": "C:\\Program Files\\Common Files",
  "COMMONPROGRAMFILES(X86)": "C:\\Program Files (x86)\\Common Files",
  "COMMONPROGRAMW6432": "C:\\Program Files\\Common Files",
  "COMPUTERNAME": "KUNALDELL",
  "COMSPEC": "C:\\Windows\\system32\\cmd.exe",
  "DRIVERDATA": "C:\\Windows\\System32\\Drivers\\DriverData",
  "EFC_5864_1592913036": "1",
  "HOMEDRIVE": "C:",
  "HOMEPATH": "\\Users\\kunal",
  "LOCALAPPDATA": "C:\\Users\\kunal\\AppData\\Local",
  "LOGONSERVER": "\\\\KUNALDELL",
  "LOG_LEVEL": "DEBUG",
  "NUMBER_OF_PROCESSORS": "22",
  "ONEDRIVE": "C:\\Users\\kunal\\OneDrive",
  "ONEDRIVECONSUMER": "C:\\Users\\kunal\\OneDrive",
  "ORIGINAL_XDG_CURRENT_DESKTOP": "undefined",
  "OS": "Windows_NT",
  "PATH": "C:\\Program Files\\Python312\\Scripts\\;C:\\Program Files\\Python312\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files\\Git\\cmd;c:\\Users\\kunal\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Program Files\\nodejs\\;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\kunal\\AppData\\Local\\Programs\\Windsurf\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WinGet\\Links;C:\\Program Files\\nodejs;C:\\Users\\kunal\\AppData\\Roaming\\npm;C:\\Program Files\\Git\\bin;C:\\Users\\kunal\\.deno\\bin;c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\scripts\\noConfigScripts",
  "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL",
  "POSTGRESQL": "C:\\Program Files\\PostgreSQL\\17\\bin\\bin",
  "PROCESSOR_ARCHITECTURE": "AMD64",
  "PROCESSOR_IDENTIFIER": "Intel64 Family 6 Model 170 Stepping 4, GenuineIntel",
  "PROCESSOR_LEVEL": "6",
  "PROCESSOR_REVISION": "aa04",
  "PROGRAMDATA": "C:\\ProgramData",
  "PROGRAMFILES": "C:\\Program Files",
  "PROGRAMFILES(X86)": "C:\\Program Files (x86)",
  "PROGRAMW6432": "C:\\Program Files",
  "PROMPT": "$P$G",
  "PSMODULEPATH": "C:\\Users\\kunal\\OneDrive\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules",
  "PUBLIC": "C:\\Users\\Public",
  "PYTHONUNBUFFERED": "1",
  "SESSIONNAME": "Console",
  "SYSTEMDRIVE": "C:",
  "SYSTEMROOT": "C:\\Windows",
  "TEMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "TMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "USERDOMAIN": "KUNALDELL",
  "USERDOMAIN_ROAMINGPROFILE": "KUNALDELL",
  "USERNAME": "kunal",
  "USERPROFILE": "C:\\Users\\kunal",
  "WINDIR": "C:\\Windows",
  "ZES_ENABLE_SYSMAN": "1",
  "PAGER": "cat",
  "TERM_PROGRAM": "vscode",
  "TERM_PROGRAM_VERSION": "1.99.3",
  "LANG": "en_US.UTF-8",
  "COLORTERM": "truecolor",
  "VSCODE_GIT_IPC_HANDLE": "\\\\.\\pipe\\vscode-git-fccd44132c-sock",
  "PYDEVD_DISABLE_FILE_VALIDATION": "1",
  "VSCODE_DEBUGPY_ADAPTER_ENDPOINTS": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\.noConfigDebugAdapterEndpoints\\endpoint-875e116b470e769c.txt",
  "BUNDLED_DEBUGPY_PATH": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\libs\\debugpy",
  "VSCODE_INJECTION": "1",
  "PROJECT_NAME": "IntelliTest AI Automation Platform",
  "ACCESS_TOKEN_EXPIRE_MINUTES": "11520",
  "SERVER_NAME": "localhost",
  "SERVER_HOST": "http://localhost:8001",
  "DATABASE_URL": "postgresql://postgres.lflecyuvttemfoyixngi:Ayeshaayesha121@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres",
  "SMTP_TLS": "true",
  "SMTP_PORT": "587",
  "SMTP_HOST": "smtp.gmail.com",
  "SMTP_USER": "your-email@gmail.com",
  "EMAILS_FROM_EMAIL": "your-email@gmail.com",
  "EMAILS_FROM_NAME": "IntelliTest Platform",
  "OPENAI_API_KEY": "your-openai-api-key-here",
  "AWS_ACCESS_KEY_ID": "your-aws-access-key",
  "AWS_DEFAULT_REGION": "us-east-1",
  "UPLOAD_DIR": "uploads",
  "MAX_UPLOAD_SIZE": "10485760",
  "ALLOWED_FILE_TYPES": "jpg,jpeg,png,gif,pdf,txt,csv,json",
  "TESTING": "false"
}
2025-08-02 21:48:35 - app.api.v1.routes.auth - DEBUG - auth.py:45 - Database URL: postgresql://postgres.lflecyuvttemfoyixngi:*****@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres
2025-08-02 21:48:36 - app.main - INFO - main.py:1407 - Initializing API routers...
2025-08-02 21:48:36 - app.main - INFO - main.py:1419 - API routers initialized successfully
2025-08-02 21:48:36 - app.main - INFO - main.py:246 - Starting database initialization...
2025-08-02 21:48:36 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x000001EB10C8C150; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 21:48:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:48:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:48:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:48:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:48:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:48:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:48:37 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x000001EB10C8C150; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 21:48:37 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x000001EB10C8C150; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 21:48:37 - app.main - INFO - main.py:276 - Disabling foreign key constraints...
2025-08-02 21:48:37 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:48:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 21:48:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00235s] {}
2025-08-02 21:48:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 21:48:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00139s] {}
2025-08-02 21:48:38 - app.main - INFO - main.py:291 - Dropping existing tables...
2025-08-02 21:48:38 - app.main - INFO - main.py:294 - Dropping table: activity_logs
2025-08-02 21:48:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 21:48:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00099s] {}
2025-08-02 21:48:38 - app.main - INFO - main.py:296 - Dropped table: activity_logs
2025-08-02 21:48:38 - app.main - INFO - main.py:294 - Dropping table: attachments
2025-08-02 21:48:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 21:48:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00088s] {}
2025-08-02 21:48:38 - app.main - INFO - main.py:296 - Dropped table: attachments
2025-08-02 21:48:38 - app.main - INFO - main.py:294 - Dropping table: comments
2025-08-02 21:48:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 21:48:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00114s] {}
2025-08-02 21:48:38 - app.main - INFO - main.py:296 - Dropped table: comments
2025-08-02 21:48:38 - app.main - INFO - main.py:294 - Dropping table: environments
2025-08-02 21:48:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 21:48:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00072s] {}
2025-08-02 21:48:38 - app.main - INFO - main.py:296 - Dropped table: environments
2025-08-02 21:48:38 - app.main - INFO - main.py:294 - Dropping table: projects
2025-08-02 21:48:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 21:48:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00106s] {}
2025-08-02 21:48:38 - app.main - INFO - main.py:296 - Dropped table: projects
2025-08-02 21:48:38 - app.main - INFO - main.py:294 - Dropping table: team_members
2025-08-02 21:48:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 21:48:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00084s] {}
2025-08-02 21:48:38 - app.main - INFO - main.py:296 - Dropped table: team_members
2025-08-02 21:48:38 - app.main - INFO - main.py:294 - Dropping table: teams
2025-08-02 21:48:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 21:48:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00427s] {}
2025-08-02 21:48:38 - app.main - INFO - main.py:296 - Dropped table: teams
2025-08-02 21:48:38 - app.main - INFO - main.py:294 - Dropping table: test_cases
2025-08-02 21:48:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 21:48:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00103s] {}
2025-08-02 21:48:38 - app.main - INFO - main.py:296 - Dropped table: test_cases
2025-08-02 21:48:38 - app.main - INFO - main.py:294 - Dropping table: test_executions
2025-08-02 21:48:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 21:48:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00162s] {}
2025-08-02 21:48:38 - app.main - INFO - main.py:296 - Dropped table: test_executions
2025-08-02 21:48:38 - app.main - INFO - main.py:294 - Dropping table: test_plan_test_cases
2025-08-02 21:48:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 21:48:38 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00120s] {}
2025-08-02 21:48:39 - app.main - INFO - main.py:296 - Dropped table: test_plan_test_cases
2025-08-02 21:48:39 - app.main - INFO - main.py:294 - Dropping table: test_plans
2025-08-02 21:48:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 21:48:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00071s] {}
2025-08-02 21:48:39 - app.main - INFO - main.py:296 - Dropped table: test_plans
2025-08-02 21:48:39 - app.main - INFO - main.py:294 - Dropping table: test_steps
2025-08-02 21:48:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 21:48:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00161s] {}
2025-08-02 21:48:39 - app.main - INFO - main.py:296 - Dropped table: test_steps
2025-08-02 21:48:39 - app.main - INFO - main.py:294 - Dropping table: users
2025-08-02 21:48:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 21:48:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00088s] {}
2025-08-02 21:48:39 - app.main - INFO - main.py:296 - Dropped table: users
2025-08-02 21:48:39 - app.main - INFO - main.py:302 - Creating database tables in order...
2025-08-02 21:48:39 - app.main - INFO - main.py:305 - Creating table: users
2025-08-02 21:48:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00139s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 21:48:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00121s] {}
2025-08-02 21:48:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 21:48:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00155s] {}
2025-08-02 21:48:39 - app.main - INFO - main.py:307 - Table created: users
2025-08-02 21:48:39 - app.main - INFO - main.py:305 - Creating table: teams
2025-08-02 21:48:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2741s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:48:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00144s] {}
2025-08-02 21:48:39 - app.main - INFO - main.py:307 - Table created: teams
2025-08-02 21:48:39 - app.main - INFO - main.py:305 - Creating table: projects
2025-08-02 21:48:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4678s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 21:48:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00155s] {}
2025-08-02 21:48:39 - app.main - INFO - main.py:307 - Table created: projects
2025-08-02 21:48:39 - app.main - INFO - main.py:305 - Creating table: environments
2025-08-02 21:48:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:39 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6552s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:40 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 21:48:40 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00324s] {}
2025-08-02 21:48:40 - app.main - INFO - main.py:307 - Table created: environments
2025-08-02 21:48:40 - app.main - INFO - main.py:305 - Creating table: test_cases
2025-08-02 21:48:40 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:40 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.8477s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:40 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:40 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00133s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:40 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:40 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2018s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:40 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:40 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6987s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 21:48:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00315s] {}
2025-08-02 21:48:41 - app.main - INFO - main.py:307 - Table created: test_cases
2025-08-02 21:48:41 - app.main - INFO - main.py:305 - Creating table: test_steps
2025-08-02 21:48:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.826s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 21:48:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00225s] {}
2025-08-02 21:48:41 - app.main - INFO - main.py:307 - Table created: test_steps
2025-08-02 21:48:41 - app.main - INFO - main.py:305 - Creating table: test_plans
2025-08-02 21:48:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.035s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.194s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:48:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00146s] {}
2025-08-02 21:48:41 - app.main - INFO - main.py:307 - Table created: test_plans
2025-08-02 21:48:41 - app.main - INFO - main.py:305 - Creating table: test_plan_test_cases
2025-08-02 21:48:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.317s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:48:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00163s] {}
2025-08-02 21:48:41 - app.main - INFO - main.py:307 - Table created: test_plan_test_cases
2025-08-02 21:48:41 - app.main - INFO - main.py:305 - Creating table: test_executions
2025-08-02 21:48:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.502s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.655s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 21:48:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00151s] {}
2025-08-02 21:48:42 - app.main - INFO - main.py:307 - Table created: test_executions
2025-08-02 21:48:42 - app.main - INFO - main.py:305 - Creating table: comments
2025-08-02 21:48:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.78s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.939s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 21:48:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00158s] {}
2025-08-02 21:48:42 - app.main - INFO - main.py:307 - Table created: comments
2025-08-02 21:48:42 - app.main - INFO - main.py:305 - Creating table: team_members
2025-08-02 21:48:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 3.065s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:48:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00129s] {}
2025-08-02 21:48:42 - app.main - INFO - main.py:307 - Table created: team_members
2025-08-02 21:48:42 - app.main - INFO - main.py:305 - Creating table: attachments
2025-08-02 21:48:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 3.254s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 21:48:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00412s] {}
2025-08-02 21:48:42 - app.main - INFO - main.py:307 - Table created: attachments
2025-08-02 21:48:42 - app.main - INFO - main.py:305 - Creating table: activity_logs
2025-08-02 21:48:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:48:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 3.443s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:48:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:48:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00143s] {}
2025-08-02 21:48:42 - app.main - INFO - main.py:307 - Table created: activity_logs
2025-08-02 21:48:42 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:48:43 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x000001EB10C8C150; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 21:48:43 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x000001EB10C8C150; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 21:48:43 - app.main - INFO - main.py:312 - All database tables created successfully
2025-08-02 21:49:12 - app.auth.security - INFO - security.py:142 - 
================================================================================
2025-08-02 21:49:12 - app.auth.security - INFO - security.py:143 - Authenticating request to http://127.0.0.1:8001/api/v1/test-cases/
2025-08-02 21:49:12 - app.auth.security - INFO - security.py:144 - Token: eyJhbGciOiJIUzI1NiIs...
2025-08-02 21:49:12 - app.auth.security - INFO - security.py:148 - Decoding JWT token...
2025-08-02 21:49:13 - app.auth.security - INFO - security.py:150 - Decoded payload: {'sub': 'd6663135-0f41-403f-bccb-684231c91a81', 'exp': 1754152765}
2025-08-02 21:49:13 - app.auth.security - INFO - security.py:157 - Looking up user with ID: d6663135-0f41-403f-bccb-684231c91a81
2025-08-02 21:49:13 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:902 - Error on connect(): connect() got an unexpected keyword argument 'keepalives'
2025-08-02 21:49:13 - app.auth.security - ERROR - security.py:197 - Unexpected error during authentication: connect() got an unexpected keyword argument 'keepalives'
2025-08-02 21:49:13 - app.auth.security - ERROR - security.py:198 - Traceback: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 160, in get_current_user
    result = await db.execute(
             ^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\ext\asyncio\session.py", line 463, in execute
    result = await greenlet_spawn(
             ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 190, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 2365, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 2241, in _execute_internal
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 2110, in _connection_for_bind
    return trans._connection_for_bind(engine, execution_options)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<string>", line 2, in _connection_for_bind
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 1189, in _connection_for_bind
    conn = bind.connect()
           ^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 3273, in connect
    return self._connection_cls(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
                             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 3297, in raw_connection
    return self.pool.connect()
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 449, in connect
    return _ConnectionFairy._checkout(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 1264, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 713, in checkout
    rec = pool._do_get()
          ^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\impl.py", line 179, in _do_get
    with util.safe_reraise():
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\impl.py", line 177, in _do_get
    return self._create_connection()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 390, in _create_connection
    return _ConnectionRecord(self)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 675, in __init__
    self.__connect()
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 901, in __connect
    with util.safe_reraise():
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 897, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\create.py", line 646, in connect
    return dialect.connect(*cargs, **cparams)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\default.py", line 625, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)  # type: ignore[no-any-return]  # NOQA: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 961, in connect
    await_only(creator_fn(*arg, **kw)),
               ^^^^^^^^^^^^^^^^^^^^^^
TypeError: connect() got an unexpected keyword argument 'keepalives'

2025-08-02 21:49:13 - app.db.session - ERROR - session.py:112 - Database session error: 500: An error occurred during authentication: connect() got an unexpected keyword argument 'keepalives'
2025-08-02 21:49:13 - app.main - WARNING - main.py:391 - HTTP Exception: 500 - An error occurred during authentication: connect() got an unexpected keyword argument 'keepalives' - Path: /api/v1/test-cases/
2025-08-02 21:49:13 - app.auth.security - INFO - security.py:142 - 
================================================================================
2025-08-02 21:49:13 - app.auth.security - INFO - security.py:143 - Authenticating request to http://127.0.0.1:8001/api/v1/test-cases/
2025-08-02 21:49:13 - app.auth.security - INFO - security.py:144 - Token: eyJhbGciOiJIUzI1NiIs...
2025-08-02 21:49:13 - app.auth.security - INFO - security.py:148 - Decoding JWT token...
2025-08-02 21:49:13 - app.auth.security - INFO - security.py:150 - Decoded payload: {'sub': 'd6663135-0f41-403f-bccb-684231c91a81', 'exp': 1754152765}
2025-08-02 21:49:13 - app.auth.security - INFO - security.py:157 - Looking up user with ID: d6663135-0f41-403f-bccb-684231c91a81
2025-08-02 21:49:13 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:902 - Error on connect(): connect() got an unexpected keyword argument 'keepalives'
2025-08-02 21:49:13 - app.auth.security - ERROR - security.py:197 - Unexpected error during authentication: connect() got an unexpected keyword argument 'keepalives'
2025-08-02 21:49:13 - app.auth.security - ERROR - security.py:198 - Traceback: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 160, in get_current_user
    result = await db.execute(
             ^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\ext\asyncio\session.py", line 463, in execute
    result = await greenlet_spawn(
             ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 190, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 2365, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 2241, in _execute_internal
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 2110, in _connection_for_bind
    return trans._connection_for_bind(engine, execution_options)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<string>", line 2, in _connection_for_bind
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 1189, in _connection_for_bind
    conn = bind.connect()
           ^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 3273, in connect
    return self._connection_cls(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
                             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 3297, in raw_connection
    return self.pool.connect()
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 449, in connect
    return _ConnectionFairy._checkout(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 1264, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 713, in checkout
    rec = pool._do_get()
          ^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\impl.py", line 179, in _do_get
    with util.safe_reraise():
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\impl.py", line 177, in _do_get
    return self._create_connection()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 390, in _create_connection
    return _ConnectionRecord(self)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 675, in __init__
    self.__connect()
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 901, in __connect
    with util.safe_reraise():
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 897, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\create.py", line 646, in connect
    return dialect.connect(*cargs, **cparams)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\default.py", line 625, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)  # type: ignore[no-any-return]  # NOQA: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 961, in connect
    await_only(creator_fn(*arg, **kw)),
               ^^^^^^^^^^^^^^^^^^^^^^
TypeError: connect() got an unexpected keyword argument 'keepalives'

2025-08-02 21:49:13 - app.db.session - ERROR - session.py:112 - Database session error: 500: An error occurred during authentication: connect() got an unexpected keyword argument 'keepalives'
2025-08-02 21:49:13 - app.main - WARNING - main.py:391 - HTTP Exception: 500 - An error occurred during authentication: connect() got an unexpected keyword argument 'keepalives' - Path: /api/v1/test-cases/
2025-08-02 21:49:20 - app.auth.security - INFO - security.py:142 - 
================================================================================
2025-08-02 21:49:20 - app.auth.security - INFO - security.py:143 - Authenticating request to http://127.0.0.1:8001/api/v1/test-cases/
2025-08-02 21:49:20 - app.auth.security - INFO - security.py:144 - Token: eyJhbGciOiJIUzI1NiIs...
2025-08-02 21:49:20 - app.auth.security - INFO - security.py:148 - Decoding JWT token...
2025-08-02 21:49:20 - app.auth.security - INFO - security.py:150 - Decoded payload: {'sub': 'd6663135-0f41-403f-bccb-684231c91a81', 'exp': 1754152765}
2025-08-02 21:49:20 - app.auth.security - INFO - security.py:157 - Looking up user with ID: d6663135-0f41-403f-bccb-684231c91a81
2025-08-02 21:49:20 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:902 - Error on connect(): connect() got an unexpected keyword argument 'keepalives'
2025-08-02 21:49:20 - app.auth.security - ERROR - security.py:197 - Unexpected error during authentication: connect() got an unexpected keyword argument 'keepalives'
2025-08-02 21:49:20 - app.auth.security - ERROR - security.py:198 - Traceback: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 160, in get_current_user
    result = await db.execute(
             ^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\ext\asyncio\session.py", line 463, in execute
    result = await greenlet_spawn(
             ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 190, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 2365, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 2241, in _execute_internal
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 2110, in _connection_for_bind
    return trans._connection_for_bind(engine, execution_options)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<string>", line 2, in _connection_for_bind
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 1189, in _connection_for_bind
    conn = bind.connect()
           ^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 3273, in connect
    return self._connection_cls(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
                             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 3297, in raw_connection
    return self.pool.connect()
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 449, in connect
    return _ConnectionFairy._checkout(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 1264, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 713, in checkout
    rec = pool._do_get()
          ^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\impl.py", line 179, in _do_get
    with util.safe_reraise():
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\impl.py", line 177, in _do_get
    return self._create_connection()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 390, in _create_connection
    return _ConnectionRecord(self)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 675, in __init__
    self.__connect()
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 901, in __connect
    with util.safe_reraise():
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 897, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\create.py", line 646, in connect
    return dialect.connect(*cargs, **cparams)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\default.py", line 625, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)  # type: ignore[no-any-return]  # NOQA: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 961, in connect
    await_only(creator_fn(*arg, **kw)),
               ^^^^^^^^^^^^^^^^^^^^^^
TypeError: connect() got an unexpected keyword argument 'keepalives'

2025-08-02 21:49:20 - app.db.session - ERROR - session.py:112 - Database session error: 500: An error occurred during authentication: connect() got an unexpected keyword argument 'keepalives'
2025-08-02 21:49:20 - app.main - WARNING - main.py:391 - HTTP Exception: 500 - An error occurred during authentication: connect() got an unexpected keyword argument 'keepalives' - Path: /api/v1/test-cases/
2025-08-02 21:51:28 - app.main - INFO - main.py:320 - Application shutdown
2025-08-02 21:51:30 - root - INFO - main.py:88 - ================================================================================
2025-08-02 21:51:30 - root - INFO - main.py:89 - Application starting with enhanced logging (level: INFO)
2025-08-02 21:51:30 - root - INFO - main.py:90 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 21:51:30 - root - INFO - main.py:91 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 21:51:30 - root - INFO - main.py:92 - ================================================================================
2025-08-02 21:51:31 - app.main - INFO - main.py:1407 - Initializing API routers...
2025-08-02 21:51:31 - app.main - INFO - main.py:1419 - API routers initialized successfully
2025-08-02 21:51:31 - app.main - INFO - main.py:246 - Starting database initialization...
2025-08-02 21:51:32 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x000001A1B785C150; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 21:51:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:51:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:51:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:51:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:51:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:51:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:51:32 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x000001A1B785C150; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 21:51:32 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x000001A1B785C150; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 21:51:32 - app.main - INFO - main.py:276 - Disabling foreign key constraints...
2025-08-02 21:51:32 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:51:32 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 21:51:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00148s] {}
2025-08-02 21:51:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 21:51:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00081s] {}
2025-08-02 21:51:33 - app.main - INFO - main.py:291 - Dropping existing tables...
2025-08-02 21:51:33 - app.main - INFO - main.py:294 - Dropping table: activity_logs
2025-08-02 21:51:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 21:51:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00060s] {}
2025-08-02 21:51:33 - app.main - INFO - main.py:296 - Dropped table: activity_logs
2025-08-02 21:51:33 - app.main - INFO - main.py:294 - Dropping table: attachments
2025-08-02 21:51:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 21:51:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00073s] {}
2025-08-02 21:51:33 - app.main - INFO - main.py:296 - Dropped table: attachments
2025-08-02 21:51:33 - app.main - INFO - main.py:294 - Dropping table: comments
2025-08-02 21:51:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 21:51:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00082s] {}
2025-08-02 21:51:33 - app.main - INFO - main.py:296 - Dropped table: comments
2025-08-02 21:51:33 - app.main - INFO - main.py:294 - Dropping table: environments
2025-08-02 21:51:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 21:51:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00101s] {}
2025-08-02 21:51:33 - app.main - INFO - main.py:296 - Dropped table: environments
2025-08-02 21:51:33 - app.main - INFO - main.py:294 - Dropping table: projects
2025-08-02 21:51:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 21:51:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00117s] {}
2025-08-02 21:51:33 - app.main - INFO - main.py:296 - Dropped table: projects
2025-08-02 21:51:33 - app.main - INFO - main.py:294 - Dropping table: team_members
2025-08-02 21:51:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 21:51:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00114s] {}
2025-08-02 21:51:33 - app.main - INFO - main.py:296 - Dropped table: team_members
2025-08-02 21:51:33 - app.main - INFO - main.py:294 - Dropping table: teams
2025-08-02 21:51:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 21:51:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00261s] {}
2025-08-02 21:51:33 - app.main - INFO - main.py:296 - Dropped table: teams
2025-08-02 21:51:33 - app.main - INFO - main.py:294 - Dropping table: test_cases
2025-08-02 21:51:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 21:51:33 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00078s] {}
2025-08-02 21:51:34 - app.main - INFO - main.py:296 - Dropped table: test_cases
2025-08-02 21:51:34 - app.main - INFO - main.py:294 - Dropping table: test_executions
2025-08-02 21:51:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 21:51:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00271s] {}
2025-08-02 21:51:34 - app.main - INFO - main.py:296 - Dropped table: test_executions
2025-08-02 21:51:34 - app.main - INFO - main.py:294 - Dropping table: test_plan_test_cases
2025-08-02 21:51:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 21:51:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00082s] {}
2025-08-02 21:51:34 - app.main - INFO - main.py:296 - Dropped table: test_plan_test_cases
2025-08-02 21:51:34 - app.main - INFO - main.py:294 - Dropping table: test_plans
2025-08-02 21:51:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 21:51:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00093s] {}
2025-08-02 21:51:34 - app.main - INFO - main.py:296 - Dropped table: test_plans
2025-08-02 21:51:34 - app.main - INFO - main.py:294 - Dropping table: test_steps
2025-08-02 21:51:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 21:51:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00135s] {}
2025-08-02 21:51:34 - app.main - INFO - main.py:296 - Dropped table: test_steps
2025-08-02 21:51:34 - app.main - INFO - main.py:294 - Dropping table: users
2025-08-02 21:51:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 21:51:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00074s] {}
2025-08-02 21:51:34 - app.main - INFO - main.py:296 - Dropped table: users
2025-08-02 21:51:34 - app.main - INFO - main.py:302 - Creating database tables in order...
2025-08-02 21:51:34 - app.main - INFO - main.py:305 - Creating table: users
2025-08-02 21:51:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00096s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 21:51:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00132s] {}
2025-08-02 21:51:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 21:51:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00127s] {}
2025-08-02 21:51:34 - app.main - INFO - main.py:307 - Table created: users
2025-08-02 21:51:34 - app.main - INFO - main.py:305 - Creating table: teams
2025-08-02 21:51:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.267s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:51:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00174s] {}
2025-08-02 21:51:34 - app.main - INFO - main.py:307 - Table created: teams
2025-08-02 21:51:34 - app.main - INFO - main.py:305 - Creating table: projects
2025-08-02 21:51:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:34 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4473s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 21:51:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00171s] {}
2025-08-02 21:51:35 - app.main - INFO - main.py:307 - Table created: projects
2025-08-02 21:51:35 - app.main - INFO - main.py:305 - Creating table: environments
2025-08-02 21:51:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6349s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 21:51:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00365s] {}
2025-08-02 21:51:35 - app.main - INFO - main.py:307 - Table created: environments
2025-08-02 21:51:35 - app.main - INFO - main.py:305 - Creating table: test_cases
2025-08-02 21:51:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.8188s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00147s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.08983s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.18s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 21:51:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00316s] {}
2025-08-02 21:51:35 - app.main - INFO - main.py:307 - Table created: test_cases
2025-08-02 21:51:35 - app.main - INFO - main.py:305 - Creating table: test_steps
2025-08-02 21:51:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.269s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 21:51:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00164s] {}
2025-08-02 21:51:35 - app.main - INFO - main.py:307 - Table created: test_steps
2025-08-02 21:51:35 - app.main - INFO - main.py:305 - Creating table: test_plans
2025-08-02 21:51:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:35 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.449s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.63s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:51:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00171s] {}
2025-08-02 21:51:36 - app.main - INFO - main.py:307 - Table created: test_plans
2025-08-02 21:51:36 - app.main - INFO - main.py:305 - Creating table: test_plan_test_cases
2025-08-02 21:51:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.717s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:51:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00223s] {}
2025-08-02 21:51:36 - app.main - INFO - main.py:307 - Table created: test_plan_test_cases
2025-08-02 21:51:36 - app.main - INFO - main.py:305 - Creating table: test_executions
2025-08-02 21:51:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.9s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.081s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 21:51:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00162s] {}
2025-08-02 21:51:36 - app.main - INFO - main.py:307 - Table created: test_executions
2025-08-02 21:51:36 - app.main - INFO - main.py:305 - Creating table: comments
2025-08-02 21:51:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.171s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.35s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 21:51:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00135s] {}
2025-08-02 21:51:36 - app.main - INFO - main.py:307 - Table created: comments
2025-08-02 21:51:36 - app.main - INFO - main.py:305 - Creating table: team_members
2025-08-02 21:51:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:36 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.439s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:51:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00123s] {}
2025-08-02 21:51:37 - app.main - INFO - main.py:307 - Table created: team_members
2025-08-02 21:51:37 - app.main - INFO - main.py:305 - Creating table: attachments
2025-08-02 21:51:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.619s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 21:51:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00111s] {}
2025-08-02 21:51:37 - app.main - INFO - main.py:307 - Table created: attachments
2025-08-02 21:51:37 - app.main - INFO - main.py:305 - Creating table: activity_logs
2025-08-02 21:51:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.801s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:51:37 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00139s] {}
2025-08-02 21:51:37 - app.main - INFO - main.py:307 - Table created: activity_logs
2025-08-02 21:51:37 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:51:37 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x000001A1B785C150; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 21:51:37 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x000001A1B785C150; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 21:51:37 - app.main - INFO - main.py:312 - All database tables created successfully
2025-08-02 21:51:38 - app.main - INFO - main.py:320 - Application shutdown
2025-08-02 21:51:39 - root - INFO - main.py:88 - ================================================================================
2025-08-02 21:51:39 - root - INFO - main.py:89 - Application starting with enhanced logging (level: DEBUG)
2025-08-02 21:51:39 - root - INFO - main.py:90 - Python version: 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)]
2025-08-02 21:51:39 - root - INFO - main.py:91 - Working directory: C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend
2025-08-02 21:51:39 - root - INFO - main.py:92 - ================================================================================
2025-08-02 21:51:40 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-08-02 21:51:40 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-08-02 21:51:40 - passlib.utils.compat - DEBUG - __init__.py:449 - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-08-02 21:51:40 - passlib.registry - DEBUG - registry.py:296 - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
2025-08-02 21:51:40 - app.api.v1.routes.auth - DEBUG - auth.py:34 - Environment variables: {
  "ALLUSERSPROFILE": "C:\\ProgramData",
  "APPDATA": "C:\\Users\\kunal\\AppData\\Roaming",
  "C:\\USERS\\KUNAL\\DOWNLOADS\\EMERGENTINTELLITEST-MAIN": "C:\\Program Files\\nodejs\\",
  "CHROME_CRASHPAD_PIPE_NAME": "\\\\.\\pipe\\crashpad_11300_YGFLEAWXLMRVRBOK",
  "COMMONPROGRAMFILES": "C:\\Program Files\\Common Files",
  "COMMONPROGRAMFILES(X86)": "C:\\Program Files (x86)\\Common Files",
  "COMMONPROGRAMW6432": "C:\\Program Files\\Common Files",
  "COMPUTERNAME": "KUNALDELL",
  "COMSPEC": "C:\\Windows\\system32\\cmd.exe",
  "DRIVERDATA": "C:\\Windows\\System32\\Drivers\\DriverData",
  "EFC_5864_1592913036": "1",
  "HOMEDRIVE": "C:",
  "HOMEPATH": "\\Users\\kunal",
  "LOCALAPPDATA": "C:\\Users\\kunal\\AppData\\Local",
  "LOGONSERVER": "\\\\KUNALDELL",
  "LOG_LEVEL": "DEBUG",
  "NUMBER_OF_PROCESSORS": "22",
  "ONEDRIVE": "C:\\Users\\kunal\\OneDrive",
  "ONEDRIVECONSUMER": "C:\\Users\\kunal\\OneDrive",
  "ORIGINAL_XDG_CURRENT_DESKTOP": "undefined",
  "OS": "Windows_NT",
  "PATH": "C:\\Program Files\\Python312\\Scripts\\;C:\\Program Files\\Python312\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files\\Git\\cmd;c:\\Users\\kunal\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Program Files\\nodejs\\;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\kunal\\AppData\\Local\\Programs\\Windsurf\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\kunal\\AppData\\Local\\Microsoft\\WinGet\\Links;C:\\Program Files\\nodejs;C:\\Users\\kunal\\AppData\\Roaming\\npm;C:\\Program Files\\Git\\bin;C:\\Users\\kunal\\.deno\\bin;c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\scripts\\noConfigScripts",
  "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL",
  "POSTGRESQL": "C:\\Program Files\\PostgreSQL\\17\\bin\\bin",
  "PROCESSOR_ARCHITECTURE": "AMD64",
  "PROCESSOR_IDENTIFIER": "Intel64 Family 6 Model 170 Stepping 4, GenuineIntel",
  "PROCESSOR_LEVEL": "6",
  "PROCESSOR_REVISION": "aa04",
  "PROGRAMDATA": "C:\\ProgramData",
  "PROGRAMFILES": "C:\\Program Files",
  "PROGRAMFILES(X86)": "C:\\Program Files (x86)",
  "PROGRAMW6432": "C:\\Program Files",
  "PROMPT": "$P$G",
  "PSMODULEPATH": "C:\\Users\\kunal\\OneDrive\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules",
  "PUBLIC": "C:\\Users\\Public",
  "PYTHONUNBUFFERED": "1",
  "SESSIONNAME": "Console",
  "SYSTEMDRIVE": "C:",
  "SYSTEMROOT": "C:\\Windows",
  "TEMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "TMP": "C:\\Users\\kunal\\AppData\\Local\\Temp",
  "USERDOMAIN": "KUNALDELL",
  "USERDOMAIN_ROAMINGPROFILE": "KUNALDELL",
  "USERNAME": "kunal",
  "USERPROFILE": "C:\\Users\\kunal",
  "WINDIR": "C:\\Windows",
  "ZES_ENABLE_SYSMAN": "1",
  "PAGER": "cat",
  "TERM_PROGRAM": "vscode",
  "TERM_PROGRAM_VERSION": "1.99.3",
  "LANG": "en_US.UTF-8",
  "COLORTERM": "truecolor",
  "VSCODE_GIT_IPC_HANDLE": "\\\\.\\pipe\\vscode-git-fccd44132c-sock",
  "PYDEVD_DISABLE_FILE_VALIDATION": "1",
  "VSCODE_DEBUGPY_ADAPTER_ENDPOINTS": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\.noConfigDebugAdapterEndpoints\\endpoint-875e116b470e769c.txt",
  "BUNDLED_DEBUGPY_PATH": "c:\\Users\\kunal\\.windsurf\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\libs\\debugpy",
  "VSCODE_INJECTION": "1",
  "PROJECT_NAME": "IntelliTest AI Automation Platform",
  "ACCESS_TOKEN_EXPIRE_MINUTES": "11520",
  "SERVER_NAME": "localhost",
  "SERVER_HOST": "http://localhost:8001",
  "DATABASE_URL": "postgresql://postgres.lflecyuvttemfoyixngi:Ayeshaayesha121@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres",
  "SMTP_TLS": "true",
  "SMTP_PORT": "587",
  "SMTP_HOST": "smtp.gmail.com",
  "SMTP_USER": "your-email@gmail.com",
  "EMAILS_FROM_EMAIL": "your-email@gmail.com",
  "EMAILS_FROM_NAME": "IntelliTest Platform",
  "OPENAI_API_KEY": "your-openai-api-key-here",
  "AWS_ACCESS_KEY_ID": "your-aws-access-key",
  "AWS_DEFAULT_REGION": "us-east-1",
  "UPLOAD_DIR": "uploads",
  "MAX_UPLOAD_SIZE": "10485760",
  "ALLOWED_FILE_TYPES": "jpg,jpeg,png,gif,pdf,txt,csv,json",
  "TESTING": "false"
}
2025-08-02 21:51:40 - app.api.v1.routes.auth - DEBUG - auth.py:45 - Database URL: postgresql://postgres.lflecyuvttemfoyixngi:*****@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres
2025-08-02 21:51:40 - app.main - INFO - main.py:1407 - Initializing API routers...
2025-08-02 21:51:40 - app.main - INFO - main.py:1419 - API routers initialized successfully
2025-08-02 21:51:41 - app.main - INFO - main.py:246 - Starting database initialization...
2025-08-02 21:51:41 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:898 - Created new connection <connection object at 0x0000019FC805C150; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-02 21:51:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select pg_catalog.version()
2025-08-02 21:51:41 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:51:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - select current_schema()
2025-08-02 21:51:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:51:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - show standard_conforming_strings
2025-08-02 21:51:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [raw sql] {}
2025-08-02 21:51:42 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:739 - Connection <connection object at 0x0000019FC805C150; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-02 21:51:42 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x0000019FC805C150; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-02 21:51:42 - app.main - INFO - main.py:276 - Disabling foreign key constraints...
2025-08-02 21:51:42 - sqlalchemy.engine.Engine - INFO - base.py:2698 - BEGIN (implicit)
2025-08-02 21:51:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SET session_replication_role = "replica";
2025-08-02 21:51:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00135s] {}
2025-08-02 21:51:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
                SELECT tablename 
                FROM pg_tables 
                WHERE schemaname = 'public' 
                ORDER BY tablename;
                
2025-08-02 21:51:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00187s] {}
2025-08-02 21:51:42 - app.main - INFO - main.py:291 - Dropping existing tables...
2025-08-02 21:51:42 - app.main - INFO - main.py:294 - Dropping table: activity_logs
2025-08-02 21:51:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "activity_logs" CASCADE;
2025-08-02 21:51:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00188s] {}
2025-08-02 21:51:42 - app.main - INFO - main.py:296 - Dropped table: activity_logs
2025-08-02 21:51:42 - app.main - INFO - main.py:294 - Dropping table: attachments
2025-08-02 21:51:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "attachments" CASCADE;
2025-08-02 21:51:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00076s] {}
2025-08-02 21:51:42 - app.main - INFO - main.py:296 - Dropped table: attachments
2025-08-02 21:51:42 - app.main - INFO - main.py:294 - Dropping table: comments
2025-08-02 21:51:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "comments" CASCADE;
2025-08-02 21:51:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00093s] {}
2025-08-02 21:51:42 - app.main - INFO - main.py:296 - Dropped table: comments
2025-08-02 21:51:42 - app.main - INFO - main.py:294 - Dropping table: environments
2025-08-02 21:51:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "environments" CASCADE;
2025-08-02 21:51:42 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00109s] {}
2025-08-02 21:51:43 - app.main - INFO - main.py:296 - Dropped table: environments
2025-08-02 21:51:43 - app.main - INFO - main.py:294 - Dropping table: projects
2025-08-02 21:51:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "projects" CASCADE;
2025-08-02 21:51:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00076s] {}
2025-08-02 21:51:43 - app.main - INFO - main.py:296 - Dropped table: projects
2025-08-02 21:51:43 - app.main - INFO - main.py:294 - Dropping table: team_members
2025-08-02 21:51:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "team_members" CASCADE;
2025-08-02 21:51:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00082s] {}
2025-08-02 21:51:43 - app.main - INFO - main.py:296 - Dropped table: team_members
2025-08-02 21:51:43 - app.main - INFO - main.py:294 - Dropping table: teams
2025-08-02 21:51:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "teams" CASCADE;
2025-08-02 21:51:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00084s] {}
2025-08-02 21:51:43 - app.main - INFO - main.py:296 - Dropped table: teams
2025-08-02 21:51:43 - app.main - INFO - main.py:294 - Dropping table: test_cases
2025-08-02 21:51:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_cases" CASCADE;
2025-08-02 21:51:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00085s] {}
2025-08-02 21:51:43 - app.main - INFO - main.py:296 - Dropped table: test_cases
2025-08-02 21:51:43 - app.main - INFO - main.py:294 - Dropping table: test_executions
2025-08-02 21:51:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_executions" CASCADE;
2025-08-02 21:51:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00132s] {}
2025-08-02 21:51:43 - app.main - INFO - main.py:296 - Dropped table: test_executions
2025-08-02 21:51:43 - app.main - INFO - main.py:294 - Dropping table: test_plan_test_cases
2025-08-02 21:51:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plan_test_cases" CASCADE;
2025-08-02 21:51:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00097s] {}
2025-08-02 21:51:43 - app.main - INFO - main.py:296 - Dropped table: test_plan_test_cases
2025-08-02 21:51:43 - app.main - INFO - main.py:294 - Dropping table: test_plans
2025-08-02 21:51:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_plans" CASCADE;
2025-08-02 21:51:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00078s] {}
2025-08-02 21:51:43 - app.main - INFO - main.py:296 - Dropped table: test_plans
2025-08-02 21:51:43 - app.main - INFO - main.py:294 - Dropping table: test_steps
2025-08-02 21:51:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "test_steps" CASCADE;
2025-08-02 21:51:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00111s] {}
2025-08-02 21:51:43 - app.main - INFO - main.py:296 - Dropped table: test_steps
2025-08-02 21:51:43 - app.main - INFO - main.py:294 - Dropping table: users
2025-08-02 21:51:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - DROP TABLE IF EXISTS "users" CASCADE;
2025-08-02 21:51:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00080s] {}
2025-08-02 21:51:43 - app.main - INFO - main.py:296 - Dropped table: users
2025-08-02 21:51:43 - app.main - INFO - main.py:302 - Creating database tables in order...
2025-08-02 21:51:43 - app.main - INFO - main.py:305 - Creating table: users
2025-08-02 21:51:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:43 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00161s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE users (
	id VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	full_name VARCHAR NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id)
)


2025-08-02 21:51:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00148s] {}
2025-08-02 21:51:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-08-02 21:51:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00167s] {}
2025-08-02 21:51:44 - app.main - INFO - main.py:307 - Table created: users
2025-08-02 21:51:44 - app.main - INFO - main.py:305 - Creating table: teams
2025-08-02 21:51:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.2804s ago] {'table_name': 'teams', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE teams (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:51:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00151s] {}
2025-08-02 21:51:44 - app.main - INFO - main.py:307 - Table created: teams
2025-08-02 21:51:44 - app.main - INFO - main.py:305 - Creating table: projects
2025-08-02 21:51:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.4705s ago] {'table_name': 'projects', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE projects (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	created_by VARCHAR NOT NULL, 
	team_id VARCHAR, 
	is_active BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id)
)


2025-08-02 21:51:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00298s] {}
2025-08-02 21:51:44 - app.main - INFO - main.py:307 - Table created: projects
2025-08-02 21:51:44 - app.main - INFO - main.py:305 - Creating table: environments
2025-08-02 21:51:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6618s ago] {'table_name': 'environments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE environments (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	base_url VARCHAR NOT NULL, 
	project_id VARCHAR NOT NULL, 
	is_active BOOLEAN, 
	variables JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id)
)


2025-08-02 21:51:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00343s] {}
2025-08-02 21:51:44 - app.main - INFO - main.py:307 - Table created: environments
2025-08-02 21:51:44 - app.main - INFO - main.py:305 - Creating table: test_cases
2025-08-02 21:51:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.8611s ago] {'table_name': 'test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [generated in 0.00136s] {'typname_1': 'testtype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:44 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.09299s ago] {'typname_1': 'priority', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.1848s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_cases (
	id VARCHAR NOT NULL, 
	title VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	test_type testtype NOT NULL, 
	priority priority NOT NULL, 
	status status NOT NULL, 
	expected_result TEXT, 
	created_by VARCHAR NOT NULL, 
	assigned_to VARCHAR, 
	tags JSON, 
	ai_generated BOOLEAN, 
	self_healing_enabled BOOLEAN, 
	prerequisites TEXT, 
	test_data JSON, 
	automation_config JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id), 
	FOREIGN KEY(assigned_to) REFERENCES users (id)
)


2025-08-02 21:51:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00234s] {}
2025-08-02 21:51:45 - app.main - INFO - main.py:307 - Table created: test_cases
2025-08-02 21:51:45 - app.main - INFO - main.py:305 - Creating table: test_steps
2025-08-02 21:51:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.337s ago] {'table_name': 'test_steps', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_steps (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	step_number INTEGER NOT NULL, 
	description TEXT NOT NULL, 
	expected_result TEXT NOT NULL, 
	actual_result TEXT, 
	status VARCHAR, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE
)


2025-08-02 21:51:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00147s] {}
2025-08-02 21:51:45 - app.main - INFO - main.py:307 - Table created: test_steps
2025-08-02 21:51:45 - app.main - INFO - main.py:305 - Creating table: test_plans
2025-08-02 21:51:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.526s ago] {'table_name': 'test_plans', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 0.6661s ago] {'typname_1': 'status', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plans (
	id VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	description TEXT, 
	project_id VARCHAR NOT NULL, 
	created_by VARCHAR NOT NULL, 
	status status, 
	scheduled_start TIMESTAMP WITHOUT TIME ZONE, 
	scheduled_end TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(project_id) REFERENCES projects (id), 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:51:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00141s] {}
2025-08-02 21:51:45 - app.main - INFO - main.py:307 - Table created: test_plans
2025-08-02 21:51:45 - app.main - INFO - main.py:305 - Creating table: test_plan_test_cases
2025-08-02 21:51:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.807s ago] {'table_name': 'test_plan_test_cases', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_plan_test_cases (
	id VARCHAR NOT NULL, 
	test_plan_id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	"order" INTEGER, 
	is_mandatory BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	created_by VARCHAR, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_test_plan_test_case UNIQUE (test_plan_id, test_case_id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id) ON DELETE CASCADE, 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by) REFERENCES users (id)
)


2025-08-02 21:51:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00166s] {}
2025-08-02 21:51:45 - app.main - INFO - main.py:307 - Table created: test_plan_test_cases
2025-08-02 21:51:45 - app.main - INFO - main.py:305 - Creating table: test_executions
2025-08-02 21:51:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:45 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2s ago] {'table_name': 'test_executions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.142s ago] {'typname_1': 'executionstatus', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE test_executions (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	test_plan_id VARCHAR, 
	executed_by VARCHAR NOT NULL, 
	environment_id VARCHAR, 
	status executionstatus, 
	started_at TIMESTAMP WITHOUT TIME ZONE, 
	completed_at TIMESTAMP WITHOUT TIME ZONE, 
	duration INTEGER, 
	result JSON, 
	logs TEXT, 
	screenshots JSON, 
	error_message TEXT, 
	ai_analysis JSON, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(test_plan_id) REFERENCES test_plans (id), 
	FOREIGN KEY(executed_by) REFERENCES users (id), 
	FOREIGN KEY(environment_id) REFERENCES environments (id)
)


2025-08-02 21:51:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00156s] {}
2025-08-02 21:51:46 - app.main - INFO - main.py:307 - Table created: test_executions
2025-08-02 21:51:46 - app.main - INFO - main.py:305 - Creating table: comments
2025-08-02 21:51:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.285s ago] {'table_name': 'comments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_type.typname 
FROM pg_catalog.pg_type JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_type.typnamespace 
WHERE pg_catalog.pg_type.typname = %(typname_1)s AND pg_catalog.pg_type_is_visible(pg_catalog.pg_type.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 1.425s ago] {'typname_1': 'commenttype', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE comments (
	id VARCHAR NOT NULL, 
	test_case_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	comment_type commenttype, 
	content TEXT NOT NULL, 
	parent_comment_id VARCHAR, 
	resolved BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	updated_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(test_case_id) REFERENCES test_cases (id), 
	FOREIGN KEY(user_id) REFERENCES users (id), 
	FOREIGN KEY(parent_comment_id) REFERENCES comments (id)
)


2025-08-02 21:51:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00153s] {}
2025-08-02 21:51:46 - app.main - INFO - main.py:307 - Table created: comments
2025-08-02 21:51:46 - app.main - INFO - main.py:305 - Creating table: team_members
2025-08-02 21:51:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.567s ago] {'table_name': 'team_members', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE team_members (
	id VARCHAR NOT NULL, 
	team_id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	role VARCHAR, 
	joined_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(team_id) REFERENCES teams (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:51:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00135s] {}
2025-08-02 21:51:46 - app.main - INFO - main.py:307 - Table created: team_members
2025-08-02 21:51:46 - app.main - INFO - main.py:305 - Creating table: attachments
2025-08-02 21:51:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.753s ago] {'table_name': 'attachments', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE attachments (
	id VARCHAR NOT NULL, 
	file_name VARCHAR NOT NULL, 
	file_path VARCHAR NOT NULL, 
	file_size INTEGER NOT NULL, 
	file_type VARCHAR NOT NULL, 
	entity_type VARCHAR NOT NULL, 
	entity_id VARCHAR NOT NULL, 
	uploaded_by VARCHAR NOT NULL, 
	description TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(uploaded_by) REFERENCES users (id)
)


2025-08-02 21:51:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00205s] {}
2025-08-02 21:51:46 - app.main - INFO - main.py:307 - Table created: attachments
2025-08-02 21:51:46 - app.main - INFO - main.py:305 - Creating table: activity_logs
2025-08-02 21:51:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-08-02 21:51:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [cached since 2.94s ago] {'table_name': 'activity_logs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-08-02 21:51:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - 
CREATE TABLE activity_logs (
	id VARCHAR NOT NULL, 
	user_id VARCHAR NOT NULL, 
	user_name VARCHAR NOT NULL, 
	action VARCHAR NOT NULL, 
	target_type VARCHAR NOT NULL, 
	target_id VARCHAR NOT NULL, 
	target_name VARCHAR, 
	details JSON, 
	ip_address VARCHAR, 
	user_agent VARCHAR, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-08-02 21:51:46 - sqlalchemy.engine.Engine - INFO - base.py:1842 - [no key 0.00161s] {}
2025-08-02 21:51:47 - app.main - INFO - main.py:307 - Table created: activity_logs
2025-08-02 21:51:47 - sqlalchemy.engine.Engine - INFO - base.py:2701 - ROLLBACK
2025-08-02 21:51:47 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:972 - Connection <connection object at 0x0000019FC805C150; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-02 21:51:47 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x0000019FC805C150; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-02 21:51:47 - app.main - INFO - main.py:312 - All database tables created successfully
2025-08-02 21:52:17 - app.auth.security - INFO - security.py:142 - 
================================================================================
2025-08-02 21:52:17 - app.auth.security - INFO - security.py:143 - Authenticating request to http://127.0.0.1:8001/api/v1/test-cases/
2025-08-02 21:52:17 - app.auth.security - INFO - security.py:144 - Token: eyJhbGciOiJIUzI1NiIs...
2025-08-02 21:52:17 - app.auth.security - INFO - security.py:148 - Decoding JWT token...
2025-08-02 21:52:17 - app.auth.security - INFO - security.py:150 - Decoded payload: {'sub': 'd6663135-0f41-403f-bccb-684231c91a81', 'exp': 1754152765}
2025-08-02 21:52:17 - app.auth.security - INFO - security.py:157 - Looking up user with ID: d6663135-0f41-403f-bccb-684231c91a81
2025-08-02 21:52:17 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:902 - Error on connect(): connect() got an unexpected keyword argument 'keepalives'
2025-08-02 21:52:17 - app.auth.security - ERROR - security.py:197 - Unexpected error during authentication: connect() got an unexpected keyword argument 'keepalives'
2025-08-02 21:52:17 - app.auth.security - ERROR - security.py:198 - Traceback: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 160, in get_current_user
    result = await db.execute(
             ^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\ext\asyncio\session.py", line 463, in execute
    result = await greenlet_spawn(
             ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 190, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 2365, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 2241, in _execute_internal
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 2110, in _connection_for_bind
    return trans._connection_for_bind(engine, execution_options)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<string>", line 2, in _connection_for_bind
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 1189, in _connection_for_bind
    conn = bind.connect()
           ^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 3273, in connect
    return self._connection_cls(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
                             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 3297, in raw_connection
    return self.pool.connect()
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 449, in connect
    return _ConnectionFairy._checkout(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 1264, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 713, in checkout
    rec = pool._do_get()
          ^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\impl.py", line 179, in _do_get
    with util.safe_reraise():
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\impl.py", line 177, in _do_get
    return self._create_connection()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 390, in _create_connection
    return _ConnectionRecord(self)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 675, in __init__
    self.__connect()
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 901, in __connect
    with util.safe_reraise():
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 897, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\create.py", line 646, in connect
    return dialect.connect(*cargs, **cparams)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\default.py", line 625, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)  # type: ignore[no-any-return]  # NOQA: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 961, in connect
    await_only(creator_fn(*arg, **kw)),
               ^^^^^^^^^^^^^^^^^^^^^^
TypeError: connect() got an unexpected keyword argument 'keepalives'

2025-08-02 21:52:17 - app.db.session - ERROR - session.py:126 - Database session error: 500: An error occurred during authentication: connect() got an unexpected keyword argument 'keepalives'
2025-08-02 21:52:17 - app.main - WARNING - main.py:391 - HTTP Exception: 500 - An error occurred during authentication: connect() got an unexpected keyword argument 'keepalives' - Path: /api/v1/test-cases/
2025-08-02 21:52:26 - app.auth.security - INFO - security.py:142 - 
================================================================================
2025-08-02 21:52:26 - app.auth.security - INFO - security.py:143 - Authenticating request to http://127.0.0.1:8001/api/v1/test-cases/
2025-08-02 21:52:26 - app.auth.security - INFO - security.py:144 - Token: eyJhbGciOiJIUzI1NiIs...
2025-08-02 21:52:26 - app.auth.security - INFO - security.py:148 - Decoding JWT token...
2025-08-02 21:52:26 - app.auth.security - INFO - security.py:150 - Decoded payload: {'sub': 'd6663135-0f41-403f-bccb-684231c91a81', 'exp': 1754152765}
2025-08-02 21:52:26 - app.auth.security - INFO - security.py:157 - Looking up user with ID: d6663135-0f41-403f-bccb-684231c91a81
2025-08-02 21:52:26 - sqlalchemy.pool.impl.AsyncAdaptedQueuePool - DEBUG - base.py:902 - Error on connect(): connect() got an unexpected keyword argument 'keepalives'
2025-08-02 21:52:26 - app.auth.security - ERROR - security.py:197 - Unexpected error during authentication: connect() got an unexpected keyword argument 'keepalives'
2025-08-02 21:52:26 - app.auth.security - ERROR - security.py:198 - Traceback: Traceback (most recent call last):
  File "C:\Users\kunal\Downloads\EmergentIntelliTest-main\backend\app\auth\security.py", line 160, in get_current_user
    result = await db.execute(
             ^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\ext\asyncio\session.py", line 463, in execute
    result = await greenlet_spawn(
             ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 190, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 2365, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 2241, in _execute_internal
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 2110, in _connection_for_bind
    return trans._connection_for_bind(engine, execution_options)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<string>", line 2, in _connection_for_bind
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\orm\session.py", line 1189, in _connection_for_bind
    conn = bind.connect()
           ^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 3273, in connect
    return self._connection_cls(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 145, in __init__
    self._dbapi_connection = engine.raw_connection()
                             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py", line 3297, in raw_connection
    return self.pool.connect()
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 449, in connect
    return _ConnectionFairy._checkout(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 1264, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 713, in checkout
    rec = pool._do_get()
          ^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\impl.py", line 179, in _do_get
    with util.safe_reraise():
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\impl.py", line 177, in _do_get
    return self._create_connection()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 390, in _create_connection
    return _ConnectionRecord(self)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 675, in __init__
    self.__connect()
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 901, in __connect
    with util.safe_reraise():
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py", line 897, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\create.py", line 646, in connect
    return dialect.connect(*cargs, **cparams)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\default.py", line 625, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)  # type: ignore[no-any-return]  # NOQA: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kunal\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 961, in connect
    await_only(creator_fn(*arg, **kw)),
               ^^^^^^^^^^^^^^^^^^^^^^
TypeError: connect() got an unexpected keyword argument 'keepalives'

2025-08-02 21:52:26 - app.db.session - ERROR - session.py:126 - Database session error: 500: An error occurred during authentication: connect() got an unexpected keyword argument 'keepalives'
2025-08-02 21:52:26 - app.main - WARNING - main.py:391 - HTTP Exception: 500 - An error occurred during authentication: connect() got an unexpected keyword argument 'keepalives' - Path: /api/v1/test-cases/
2025-08-12 15:02:15 - root - INFO - main.py:88 - ================================================================================
2025-08-12 15:02:15 - root - INFO - main.py:89 - Application starting with enhanced logging (level: INFO)
2025-08-12 15:02:15 - root - INFO - main.py:90 - Python version: 3.12.11 (main, Jul 29 2025, 18:21:07) [GCC 13.3.0]
2025-08-12 15:02:15 - root - INFO - main.py:91 - Working directory: /app/backend
2025-08-12 15:02:15 - root - INFO - main.py:92 - ================================================================================
2025-08-12 15:02:16 - app.main - INFO - main.py:1407 - Initializing API routers...
2025-08-12 15:02:16 - app.main - INFO - main.py:1419 - API routers initialized successfully
2025-08-12 15:02:16 - root - INFO - main.py:88 - ================================================================================
2025-08-12 15:02:16 - root - INFO - main.py:89 - Application starting with enhanced logging (level: INFO)
2025-08-12 15:02:16 - root - INFO - main.py:90 - Python version: 3.12.11 (main, Jul 29 2025, 18:21:07) [GCC 13.3.0]
2025-08-12 15:02:16 - root - INFO - main.py:91 - Working directory: /app/backend
2025-08-12 15:02:16 - root - INFO - main.py:92 - ================================================================================
2025-08-12 15:02:16 - backend.app.main - INFO - main.py:1407 - Initializing API routers...
2025-08-12 15:02:16 - backend.app.main - INFO - main.py:1419 - API routers initialized successfully
2025-08-12 15:02:16 - backend.app.db.session - INFO - session.py:21 - Loading environment from: /app/backend/.env
2025-08-12 15:02:16 - backend.app.db.session - INFO - session.py:31 - Database URL configured
2025-08-12 15:03:10 - root - INFO - main.py:88 - ================================================================================
2025-08-12 15:03:10 - root - INFO - main.py:89 - Application starting with enhanced logging (level: INFO)
2025-08-12 15:03:10 - root - INFO - main.py:90 - Python version: 3.12.11 (main, Jul 29 2025, 18:21:07) [GCC 13.3.0]
2025-08-12 15:03:10 - root - INFO - main.py:91 - Working directory: /app/backend
2025-08-12 15:03:10 - root - INFO - main.py:92 - ================================================================================
2025-08-12 15:03:11 - app.main - INFO - main.py:1407 - Initializing API routers...
2025-08-12 15:03:11 - app.main - INFO - main.py:1419 - API routers initialized successfully
2025-08-12 15:03:11 - root - INFO - main.py:88 - ================================================================================
2025-08-12 15:03:11 - root - INFO - main.py:89 - Application starting with enhanced logging (level: INFO)
2025-08-12 15:03:11 - root - INFO - main.py:90 - Python version: 3.12.11 (main, Jul 29 2025, 18:21:07) [GCC 13.3.0]
2025-08-12 15:03:11 - root - INFO - main.py:91 - Working directory: /app/backend
2025-08-12 15:03:11 - root - INFO - main.py:92 - ================================================================================
2025-08-12 15:03:11 - backend.app.main - INFO - main.py:1407 - Initializing API routers...
2025-08-12 15:03:11 - backend.app.main - INFO - main.py:1419 - API routers initialized successfully
2025-08-12 15:03:11 - backend.app.db.session - INFO - session.py:21 - Loading environment from: /app/backend/.env
2025-08-12 15:03:11 - backend.app.db.session - INFO - session.py:31 - Database URL configured
2025-08-12 15:03:12 - simple_db_test - ERROR - simple_db_test.py:29 - Failed to import required modules: cannot import name 'SQLALCHEMY_DATABASE_URL' from 'app.db.session' (/app/backend/app/db/session.py)
2025-08-12 15:03:12 - auth_test - INFO - test_auth.py:34 - Successfully imported required modules
2025-08-12 15:03:12 - test_conn - INFO - test_conn.py:22 - ================================================================================
2025-08-12 15:03:12 - test_conn - INFO - test_conn.py:23 - STARTING DATABASE CONNECTION TEST
2025-08-12 15:03:12 - test_conn - INFO - test_conn.py:24 - ================================================================================
2025-08-12 15:03:12 - test_conn - INFO - test_conn.py:25 - Python version: 3.12.11 (main, Jul 29 2025, 18:21:07) [GCC 13.3.0]
2025-08-12 15:03:12 - test_conn - INFO - test_conn.py:26 - Working directory: /app/backend
2025-08-12 15:03:12 - test_conn - INFO - test_conn.py:27 - Project root: /app/backend
2025-08-12 15:03:12 - test_conn - INFO - test_conn.py:32 - Loading .env from: /app/backend/.env
2025-08-12 15:03:12 - test_conn - INFO - test_conn.py:39 - ✅ Loaded .env file
2025-08-12 15:03:12 - test_conn - INFO - test_conn.py:51 -
Environment variables:
2025-08-12 15:03:12 - test_conn - INFO - test_conn.py:56 -   DATABASE_URL: postgresql://postgres.lflecyuvttemfoyixngi:Ayeshaayesha121@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres
2025-08-12 15:03:12 - test_conn - INFO - test_conn.py:56 -   POSTGRES_SERVER: Not set
2025-08-12 15:03:12 - test_conn - INFO - test_conn.py:56 -   POSTGRES_USER: Not set
2025-08-12 15:03:12 - test_conn - INFO - test_conn.py:56 -   POSTGRES_PASSWORD: Not set
2025-08-12 15:03:12 - test_conn - INFO - test_conn.py:56 -   POSTGRES_DB: Not set
2025-08-12 15:03:12 - test_conn - INFO - test_conn.py:56 -   POSTGRES_PORT: Not set
2025-08-12 15:03:12 - test_conn - INFO - test_conn.py:60 -
SQLAlchemy version: 2.0.43
2025-08-12 15:03:12 - test_conn - INFO - test_conn.py:72 -
Attempting to connect to: postgresql+psycopg2://postgres.lflecyuvttemfoyixngi:Ayeshaayesha121@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres
2025-08-12 15:03:14 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:896 - Created new connection <connection object at 0x7f880758a0c0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx connect_timeout=10 dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0>
2025-08-12 15:03:14 - sqlalchemy.engine.Engine - INFO - base.py:1846 - select pg_catalog.version()
2025-08-12 15:03:14 - sqlalchemy.engine.Engine - INFO - base.py:1846 - [raw sql] {}
2025-08-12 15:03:15 - sqlalchemy.engine.Engine - INFO - base.py:1846 - select current_schema()
2025-08-12 15:03:15 - sqlalchemy.engine.Engine - INFO - base.py:1846 - [raw sql] {}
2025-08-12 15:03:15 - sqlalchemy.engine.Engine - INFO - base.py:1846 - show standard_conforming_strings
2025-08-12 15:03:15 - sqlalchemy.engine.Engine - INFO - base.py:1846 - [raw sql] {}
2025-08-12 15:03:15 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:737 - Connection <connection object at 0x7f880758a0c0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx connect_timeout=10 dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> checked out from pool
2025-08-12 15:03:15 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1313 - Connection <connection object at 0x7f880758a0c0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx connect_timeout=10 dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> is fresh, skipping pre-ping
2025-08-12 15:03:15 - sqlalchemy.engine.Engine - INFO - base.py:2702 - BEGIN (implicit)
2025-08-12 15:03:15 - sqlalchemy.engine.Engine - INFO - base.py:1846 - SELECT version();
2025-08-12 15:03:15 - sqlalchemy.engine.Engine - INFO - base.py:1846 - [generated in 0.00040s] {}
2025-08-12 15:03:16 - test_conn - INFO - test_conn.py:91 -
✅ Successfully connected to database!
2025-08-12 15:03:16 - test_conn - INFO - test_conn.py:92 - Database version: PostgreSQL 17.4 on aarch64-unknown-linux-gnu, compiled by gcc (GCC) 13.2.0, 64-bit
2025-08-12 15:03:16 - sqlalchemy.engine.Engine - INFO - base.py:1846 -
            SELECT table_name
            FROM information_schema.tables
            WHERE table_schema = 'public';

2025-08-12 15:03:16 - sqlalchemy.engine.Engine - INFO - base.py:1846 - [generated in 0.00028s] {}
2025-08-12 15:03:16 - test_conn - INFO - test_conn.py:103 -
Tables in the database:
2025-08-12 15:03:16 - test_conn - INFO - test_conn.py:105 - - activity_logs
2025-08-12 15:03:16 - test_conn - INFO - test_conn.py:105 - - ai_analyses
2025-08-12 15:03:16 - test_conn - INFO - test_conn.py:105 - - alembic_version
2025-08-12 15:03:16 - test_conn - INFO - test_conn.py:105 - - attachments
2025-08-12 15:03:16 - test_conn - INFO - test_conn.py:105 - - comments
2025-08-12 15:03:16 - test_conn - INFO - test_conn.py:105 - - environments
2025-08-12 15:03:16 - test_conn - INFO - test_conn.py:105 - - projects
2025-08-12 15:03:16 - test_conn - INFO - test_conn.py:105 - - team_members
2025-08-12 15:03:16 - test_conn - INFO - test_conn.py:105 - - teams
2025-08-12 15:03:16 - test_conn - INFO - test_conn.py:105 - - test_cases
2025-08-12 15:03:16 - test_conn - INFO - test_conn.py:105 - - test_executions
2025-08-12 15:03:16 - test_conn - INFO - test_conn.py:105 - - test_plan_test_cases
2025-08-12 15:03:16 - test_conn - INFO - test_conn.py:105 - - test_plans
2025-08-12 15:03:16 - test_conn - INFO - test_conn.py:105 - - test_steps
2025-08-12 15:03:16 - test_conn - INFO - test_conn.py:105 - - users
2025-08-12 15:03:16 - sqlalchemy.engine.Engine - INFO - base.py:2705 - ROLLBACK
2025-08-12 15:03:16 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:970 - Connection <connection object at 0x7f880758a0c0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx connect_timeout=10 dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> being returned to pool
2025-08-12 15:03:16 - sqlalchemy.pool.impl.QueuePool - DEBUG - base.py:1423 - Connection <connection object at 0x7f880758a0c0; dsn: 'user=postgres.lflecyuvttemfoyixngi password=xxx connect_timeout=10 dbname=postgres host=aws-0-ap-southeast-1.pooler.supabase.com port=6543 keepalives=1 keepalives_idle=30 keepalives_interval=10 keepalives_count=5', closed: 0> reset, transaction already reset
2025-08-12 15:03:16 - test_conn - INFO - test_conn.py:109 -
✅ Database connection test completed successfully!
2025-08-12 15:03:16 - test_conn - INFO - test_conn.py:119 -
================================================================================
2025-08-12 15:03:16 - test_conn - INFO - test_conn.py:120 - DATABASE CONNECTION TEST COMPLETED
2025-08-12 15:03:16 - test_conn - INFO - test_conn.py:121 - ================================================================================
2025-08-12 15:03:16 - test_connection - INFO - test_connection.py:21 - Imported required modules successfully
2025-08-12 15:03:16 - test_db - INFO - test_db.py:20 - ✅ Successfully imported required modules
2025-08-12 15:03:16 - test_db_insert - ERROR - test_db_insert.py:35 - Failed to import required modules: cannot import name 'SQLALCHEMY_DATABASE_URL' from 'app.db.session' (/app/backend/app/db/session.py)
2025-08-12 15:15:39 - root - INFO - main.py:88 - ================================================================================
2025-08-12 15:15:39 - root - INFO - main.py:89 - Application starting with enhanced logging (level: INFO)
2025-08-12 15:15:39 - root - INFO - main.py:90 - Python version: 3.12.11 (main, Jul 29 2025, 18:21:07) [GCC 13.3.0]
2025-08-12 15:15:39 - root - INFO - main.py:91 - Working directory: /app/backend
2025-08-12 15:15:39 - root - INFO - main.py:92 - ================================================================================
2025-08-12 15:15:41 - app.main - INFO - main.py:1407 - Initializing API routers...
2025-08-12 15:15:41 - app.main - INFO - main.py:1419 - API routers initialized successfully
2025-08-12 15:15:41 - passlib.handlers.bcrypt - WARNING - bcrypt.py:622 - (trapped) error reading bcrypt version
Traceback (most recent call last):
  File "/home/jules/.pyenv/versions/3.12.11/lib/python3.12/site-packages/passlib/handlers/bcrypt.py", line 620, in _load_backend_mixin
    version = _bcrypt.__about__.__version__
              ^^^^^^^^^^^^^^^^^
AttributeError: module 'bcrypt' has no attribute '__about__'
